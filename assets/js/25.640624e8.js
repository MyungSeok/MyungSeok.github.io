(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{337:function(t,r,a){"use strict";a.r(r);var e=a(1),s=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"spring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring","aria-hidden":"true"}},[t._v("#")]),t._v(" Spring")]),t._v(" "),a("p",[t._v("스프링 프레임워크의 전반적인 이야기를 다루도록 한다.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://spring.io/projects",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://spring.io/projects"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"아티팩트-artifact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#아티팩트-artifact","aria-hidden":"true"}},[t._v("#")]),t._v(" 아티팩트 (Artifact)")]),t._v(" "),a("p",[t._v("아티팩트는 소프트웨어 개발 프로젝트를 진행하면서 생성하는 다양한 "),a("em",[a("strong",[t._v("산출물")])]),t._v(" 을 의미한다.")]),t._v(" "),a("p",[t._v("통상적으로는 "),a("em",[a("strong",[t._v("라이브러리와 동일한 의미로 해석")])]),t._v(" 되며 "),a("code",[t._v(".jar")]),t._v(", "),a("code",[t._v(".war")]),t._v(", "),a("code",[t._v(".ear")]),t._v(" 등의 확장자를 갖게된다.")]),t._v(" "),a("h3",{attrs:{id:"아티팩트-저장소-artifact-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#아티팩트-저장소-artifact-repository","aria-hidden":"true"}},[t._v("#")]),t._v(" 아티팩트 저장소 (Artifact Repository)")]),t._v(" "),a("p",[t._v("아티팩트 저장소는 아티팩트와 메타데이터를 저장하고 관리하는 저장소를 의미한다.")]),t._v(" "),a("p",[t._v("저장소는 계층구조로 접근 가능하며 이 계층적 구조를 GAV (Group, Artifact, Version) 구조라고 하며 메이븐 (Maven) 에서 의존성을 찾을 때 참고하는 구조이기도 한다.")]),t._v(" "),a("p",[t._v("넥서스 (Nexus) 가 이 저장소에 사용되는 대표적인 제품이다.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.lesstif.com/pages/viewpage.action?pageId=18219542",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.lesstif.com/pages/viewpage.action?pageId=18219542"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"autowired-vs-qualifier-의-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autowired-vs-qualifier-의-차이","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("@Autowired")]),t._v(" vs "),a("code",[t._v("@Qualifier")]),t._v(" 의 차이")]),t._v(" "),a("p",[a("code",[t._v("@Autowired")]),t._v(" 는 자동 주입 기능으로 스프링이 알아서 의존 객체를 찾아서 명시해준다."),a("br"),t._v("\n즉 자동 주입기능을 사용하면 별도의 설정이 없어도 의존 Bean 객체를 찾아서 주입해준다.")]),t._v(" "),a("p",[t._v("하지만 같은 타입의 빈이 두개 이상 존재할 경우에는 컨테이너 초기화 하는 과정에서 에러가 발생하기 때문에 주입할 객체를 특정 지어줘야 한다."),a("br"),t._v("\n이때 "),a("code",[t._v("@Qualifier")]),t._v(" 를 사용해 줘야 한다.")])])},[],!1,null,null,null);r.default=s.exports}}]);