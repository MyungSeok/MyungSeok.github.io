(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{349:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_4주차-16-20-chapter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4주차-16-20-chapter"}},[t._v("#")]),t._v(" 4주차 (16 ~ 20 Chapter)")]),t._v(" "),s("h2",{attrs:{id:"chapter-16-리스트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-16-리스트"}},[t._v("#")]),t._v(" Chapter 16 리스트")]),t._v(" "),s("p",[t._v("스칼라 프로그램에서 가장 많이 사용하는 데이터 구조는 아마 리스트이다.")]),t._v(" "),s("p",[t._v("리스트를 사용하는데 중요한 설계 원칙을 알아보자.")]),t._v(" "),s("h3",{attrs:{id:"_16-1-리스트-리터럴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-리스트-리터럴"}},[t._v("#")]),t._v(" 16.1 리스트 리터럴")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" fruit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apples"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oranges"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pears"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" nums "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" diag3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" empty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("리스트는 배열과 비슷하지만 다음 두가지 차이점이 있다.")]),t._v(" "),s("ol",[s("li",[t._v("리스트는 변경이 불가능하다.")]),t._v(" "),s("li",[t._v("리스트는 재귀적 (Linked List) 이고 배열은 평면적이다.")])]),t._v(" "),s("h3",{attrs:{id:"_16-2-리스트-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-리스트-타입"}},[t._v("#")]),t._v(" 16.2 리스트 타입")]),t._v(" "),s("p",[t._v("리스트는 모두 동종 (homogeneous) 원소로 이루어 진다.")]),t._v(" "),s("p",[t._v("리스트 타입은 "),s("RouterLink",{attrs:{to:"/backend/language/java/essential/generic/bounded_type_parameters.html#covariant-contravariant"}},[t._v("공변")]),t._v("적 특성을 따른다. ("),s("code",[t._v("S")]),t._v(" 가 "),s("code",[t._v("T")]),t._v(" 의 서브타입이면 "),s("code",[t._v("List[S]")]),t._v(" 도 "),s("code",[t._v("List[T]")]),t._v(" 의 서브타입이다.)")],1),t._v(" "),s("p",[s("code",[t._v("Nothing")]),t._v(" 은 모든 타입의 서브 타입이기 때문에 다음과 같은 코드도 만족한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_16-3-리스트-생성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-3-리스트-생성"}},[t._v("#")]),t._v(" 16.3 리스트 생성")]),t._v(" "),s("p",[t._v("모든 리스트는 빌딩 블록인 "),s("code",[t._v("Nil")]),t._v(" 과 "),s("code",[t._v("::")]),t._v(" (콘즈: cons) 두 가지로 만들수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apples"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oranges"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pears"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" fruit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apples"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oranges"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pears"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" Nil "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_16-4-리스트-기본-연산"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-4-리스트-기본-연산"}},[t._v("#")]),t._v(" 16.4 리스트 기본 연산")]),t._v(" "),s("p",[t._v("리스트의 모든 연산은 다음 세가지를 가지고 표현할 수 있다.")]),t._v(" "),s("ul",[s("li",[t._v("head : 어떤 리스트의 첫번째 원소를 반환한다.")]),t._v(" "),s("li",[t._v("tail : 어떤 리스트의 첫번째 원소를 제외한 나머지 원소로 이루어진 리스트")]),t._v(" "),s("li",[t._v("isEmpty : 리스트가 비어있다면 "),s("code",[t._v("true")]),t._v(" 를 반환한다.")])]),t._v(" "),s("p",[t._v("head 와 tail 은 리스트가 비어있지 않는 경우에서만 가능하다.")]),t._v(" "),s("h3",{attrs:{id:"_16-5-리스트-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-5-리스트-패턴"}},[t._v("#")]),t._v(" 16.5 리스트 패턴")]),t._v(" "),s("p",[t._v("다음은 삽입 정렬의 패턴매치를 이용한 코드이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" isort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" xs1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" insert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" insert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" ys "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" xs \n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" insert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_16-6-list-클래스의-1차-메서드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-6-list-클래스의-1차-메서드"}},[t._v("#")]),t._v(" 16.6 List 클래스의 1차 메서드")]),t._v(" "),s("p",[t._v("어떤 메서드가 함수를 인자로 받지 않는다면, 그 메서드를 1차 메서드 (first-order method) 라고 부른다.")]),t._v(" "),s("h4",{attrs:{id:"두-리스트-연결하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#두-리스트-연결하기"}},[t._v("#")]),t._v(" 두 리스트 연결하기")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 2, 3, 4, 5)")]),t._v("\n\nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 2, 3, 4)")]),t._v("\n")])])]),s("h4",{attrs:{id:"분할-정복-원칙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#분할-정복-원칙"}},[t._v("#")]),t._v(" 분할 정복 원칙")]),t._v(" "),s("p",[t._v("연결 ("),s("code",[t._v(":::")]),t._v(") 은 "),s("code",[t._v("List")]),t._v(" 클래스 안에 구현되어 있는 메서드이다.")]),t._v(" "),s("p",[t._v("하지만 리스트에 패턴 매치를 사용해 "),s("code",[t._v(":::")]),t._v(" 를 직접 구현할 수도 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  xs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" ys\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" xs1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"리스트-길이-구하기-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-길이-구하기-length"}},[t._v("#")]),t._v(" 리스트 길이 구하기: length")]),t._v(" "),s("p",[s("code",[t._v("length")]),t._v(" 메서드는 리스트의 길이를 계산한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])])]),s("p",[t._v("배열과 강리 리스트의 "),s("code",[t._v("length")]),t._v(" 는 비교적 비싼 연산이다.")]),t._v(" "),s("p",[t._v("리스트의 끝을 찾기 위해 전체 리스트를 순회해야 하기 때문이다.")]),t._v(" "),s("p",[t._v("때문에 "),s("code",[t._v("xs.isEmpty")]),t._v(" 의 검사를 "),s("code",[t._v("xs.length == 0")]),t._v(" 으로 바꾼 방식은 좋은 방식이 아니다"),s("br"),t._v("\n두 검사의 결과는 같지만 모든 리스트를 순회해야 한다는 점에서 "),s("code",[t._v("xs.length == 0")]),t._v(" 은 느리다.")]),t._v(" "),s("h4",{attrs:{id:"리스트의-양-끝에-접근하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트의-양-끝에-접근하기"}},[t._v("#")]),t._v(" 리스트의 양 끝에 접근하기")]),t._v(" "),s("ul",[s("li",[t._v("head : 첫번째 원소를 반환")]),t._v(" "),s("li",[t._v("tail : 첫번째 원소를 제외한 모든 원소를 포함한 리스트를 반환")]),t._v(" "),s("li",[t._v("init : 마지막 원소를 제외한 모든 원소를 포함한 리스트를 반환")]),t._v(" "),s("li",[t._v("last : 마지막 원소 반환")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" abcde "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nabcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(a)")]),t._v("\n\nabcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(b, c, d, e)")]),t._v("\n\nabcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(a, b, c, d)")]),t._v("\n\nabcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(e)")]),t._v("\n")])])]),s("p",[t._v("이 둘은 쌍대성 (거울연산) 이다.")]),t._v(" "),s("h4",{attrs:{id:"리스트-뒤집기-reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-뒤집기-reverse"}},[t._v("#")]),t._v(" 리스트 뒤집기: reverse")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reverse\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(e, d, c, b, a)")]),t._v("\n")])])]),s("p",[s("code",[t._v("reverse")]),t._v(" 는 값을 변경한다기 보다는 "),s("strong",[t._v("새로운 리스트를 생성")]),t._v("한다.")]),t._v(" "),s("p",[t._v("reverse, init, last 연산은 다음 법칙을 만족한다.")]),t._v(" "),s("ol",[s("li",[t._v("reverse 는 자기자신의 역이다.")])]),t._v(" "),s("ul",[s("li",[t._v("xs.reverse.reverse 는 xs 와 같다.")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("원소의 방향이 뒤집혔다는 점을 제외하면 reverse 는 init 을 tail 로 바꾸고 last 를 head 로 바꾼다.")])]),t._v(" "),s("ul",[s("li",[t._v("xs.reverse.init 는 xs.tail.reverse 와 같다.")]),t._v(" "),s("li",[t._v("xs.reverse.tail 은 xs.init.reverse 와 같다.")]),t._v(" "),s("li",[t._v("xs.reverse.head 는 xs.last 와 같다.")]),t._v(" "),s("li",[t._v("xs.reverse.last 는 xs.head 와 같다.")])]),t._v(" "),s("p",[s("code",[t._v(":::")]),t._v(" 을 이용하여 reverse 를 구현할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" rev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" xs\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" xs1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" rev"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("이 "),s("code",[t._v("rev")]),t._v(" 메서드는 만족스러운 성능을 내지 못한다. (시간복잡도는 On^2)")]),t._v(" "),s("h4",{attrs:{id:"접두사와-접미사-drop-take-splitat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#접두사와-접미사-drop-take-splitat"}},[t._v("#")]),t._v(" 접두사와 접미사: drop, take, splitAt")]),t._v(" "),s("ul",[s("li",[t._v("drop: 첫번째에서 n 번째 원소를 제외한 xs 리스트를 반환")]),t._v(" "),s("li",[t._v("take: 첫번째에서 n 번째 원소를 반환")]),t._v(" "),s("li",[t._v("splitAt: 주어진 인덱스에서 리스트를 분할해서 두 리스트를 반환")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" abcde "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'e'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nabcde drop "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(c, d, e)")]),t._v("\n\nabcde take "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(a, b)")]),t._v("\n\nabcde splitAt "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (List(a, b), List(c, d, e))")]),t._v("\n")])])]),s("h4",{attrs:{id:"원소-선택하기-apply-indices"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#원소-선택하기-apply-indices"}},[t._v("#")]),t._v(" 원소 선택하기: apply, indices")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("abcde apply "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n\nabcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// c")]),t._v("\n")])])]),s("p",[t._v("임의의 원소를 선택하는 "),s("code",[t._v("apply")]),t._v(" 는 인덱스 n 의 값에 비례해서 시간이 걸린다.")]),t._v(" "),s("p",[s("code",[t._v("indices")]),t._v(" 는 유효한 인덱스를 반환한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("indices\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Range(0, 1, 2, 3, 4)")]),t._v("\n")])])]),s("p",[t._v("kotlin 에서 "),s("code",[t._v("for loop")]),t._v(" 사용할때와 유사")]),t._v(" "),s("h4",{attrs:{id:"리스트의-리스트를-한-리스트로-반듯하게-만들기-flatten"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트의-리스트를-한-리스트로-반듯하게-만들기-flatten"}},[t._v("#")]),t._v(" 리스트의 리스트를 한 리스트로 반듯하게 만들기: flatten")]),t._v(" "),s("p",[s("code",[t._v("flatten")]),t._v(" 메서드는 리스트의 리스트를 인자로 받아 하나의 리스트로 반듯하게 펼친다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flatten\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 2, 3, 4, 5)")]),t._v("\n")])])]),s("p",[t._v("이 메서드는 리스트의 모든 원소가 리스트일때만 적용 가능하다.")]),t._v(" "),s("h4",{attrs:{id:"두-리스트를-순서싸으로-묶기-zip-unzip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#두-리스트를-순서싸으로-묶기-zip-unzip"}},[t._v("#")]),t._v(" 두 리스트를 순서싸으로 묶기: zip, unzip")]),t._v(" "),s("p",[s("code",[t._v("zip")]),t._v(" 연산은 두 리스트를 이자로 받아 순서쌍의 리스트로 만든다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" zipped "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abcde zip List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List((a,1), (b,2), (c,3), (d, 4))")]),t._v("\n")])])]),s("p",[t._v("리스트의 길이가 다르면 길이가 긴쪽의 남는 원소가 버려진다.")]),t._v(" "),s("p",[s("code",[t._v("unzip")]),t._v(" 은 당연히 반대이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("zipped"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unzip\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (List(a, b, c),List(1, 2, 3))")]),t._v("\n")])])]),s("p",[s("code",[t._v("zipWithIndex")]),t._v(" 는 원소와 그 인덱스를 순서쌍으로 묶는다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zipWithIndex\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List((a,0), (b,1), (c,2), (d,3), (e,4))")]),t._v("\n")])])]),s("h4",{attrs:{id:"리스트-출력하기-tostring-mkstring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-출력하기-tostring-mkstring"}},[t._v("#")]),t._v(" 리스트 출력하기: toString, mkString")]),t._v(" "),s("p",[s("code",[t._v("toString")]),t._v(" 은 리스트의 표준 문자열을 반환한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(a, b, c, d, e)")]),t._v("\n")])])]),s("p",[s("code",[t._v("mkString")]),t._v(" 은 "),s("code",[t._v("xs mkString (pre, sep, post)")]),t._v(" 으로 사용하며")]),t._v(" "),s("p",[s("code",[t._v("pre + xs(0) + sep + ... + sep + xs + post")]),t._v(" 으로 구성된다.")]),t._v(" "),s("h4",{attrs:{id:"리스트-변환하기-iterator-toarray-copytoarray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-변환하기-iterator-toarray-copytoarray"}},[t._v("#")]),t._v(" 리스트 변환하기: iterator, toArray, copyToArray")]),t._v(" "),s("p",[s("code",[t._v("iterator")]),t._v(" 는 원소를 순회하도록 도와준다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" it "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// it: Iterator[Char] = <iterator>")]),t._v("\n\nit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a")]),t._v("\n \nit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b")]),t._v("\n")])])]),s("p",[s("code",[t._v("copyToArray")]),t._v(" 는 리스트의 원소를 어떤 배열의 특정 지점으로 부터 연속적으로 복사한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)")]),t._v("\n\nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" copyToArray "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array(0, 0, 0, 1, 2, 3, 0, 0, 0, 0)")]),t._v("\n")])])]),s("h4",{attrs:{id:"예제-병합정렬"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#예제-병합정렬"}},[t._v("#")]),t._v(" 예제: 병합정렬")]),t._v(" "),s("blockquote",[s("p",[t._v("예제코드 참고")])]),t._v(" "),s("h3",{attrs:{id:"_16-7-list-클래스의-고차-메서드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-7-list-클래스의-고차-메서드"}},[t._v("#")]),t._v(" 16.7 List 클래스의 고차 메서드")]),t._v(" "),s("h4",{attrs:{id:"리스트-매핑-map-flatmap-foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-매핑-map-flatmap-foreach"}},[t._v("#")]),t._v(" 리스트 매핑: map, flatmap, foreach")]),t._v(" "),s("p",[s("code",[t._v("xs map f")]),t._v(" 연산은 "),s("code",[t._v("List[T]")]),t._v(" 타입인 "),s("code",[t._v("xs")]),t._v(" 와 "),s("code",[t._v("T => U")]),t._v(" 타입인 "),s("code",[t._v("f")]),t._v(" 함수를 받는다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(2, 3, 4)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" words "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quick"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"brown"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fox"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwords map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(3, 5, 5, 3)")]),t._v("\n")])])]),s("p",[s("code",[t._v("flatmap")]),t._v(" 연산자는 "),s("code",[t._v("map")]),t._v(" 과 유사하지만 모든 리스트를 연결한 단일 리스트로 반환한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("words map "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(List(t, h, e), List(q, u, i,c, k), List(b, r, o, w, n), List(f, o, x))")]),t._v("\n \nwords flatMap "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(t, h, e, q, u, i, c, k, b, r, o, w, n, f, o, x)")]),t._v("\n")])])]),s("p",[s("code",[t._v("foreach")]),t._v(" 는 오른쪽 피연산자로 프로시져를 받는다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" foreach "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sum = 15")]),t._v("\n")])])]),s("p",[s("code",[t._v("foreach")]),t._v(" 결과는 "),s("code",[t._v("Unit")]),t._v(" 이다.")]),t._v(" "),s("h4",{attrs:{id:"리스트-걸러내기-filter-partition-find-takewhile-dropwhile-span"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-걸러내기-filter-partition-find-takewhile-dropwhile-span"}},[t._v("#")]),t._v(" 리스트 걸러내기: filter, partition, find, takeWhile, dropWhile, span")]),t._v(" "),s("ul",[s("li",[t._v("filter: "),s("code",[t._v("T => Boolean")]),t._v(" 타입의 술어를 받아 조건을 만족하는 원소를 반환")]),t._v(" "),s("li",[t._v("find: "),s("code",[t._v("T => Boolean")]),t._v(" 를 만족하는 첫번째 원소만 반환")]),t._v(" "),s("li",[t._v("takeWhile: "),s("code",[t._v("T => Boolean")]),t._v(" 를 만족하는 가장 긴 접두사를 반환")]),t._v(" "),s("li",[t._v("dropWhile: "),s("code",[t._v("T => Boolean")]),t._v(" 를 만족하는 가장 긴 접두사를 제거")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" takeWhile "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 2, 3)")]),t._v("\n \nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dropWhile "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(-4,5)")]),t._v("\n")])])]),s("h4",{attrs:{id:"리스트-전체에-대한-술어-forall-exists"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-전체에-대한-술어-forall-exists"}},[t._v("#")]),t._v(" 리스트 전체에 대한 술어: forall, exists")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("xs forall p")]),t._v(": 리스트의 모든 원소가 만족할 때 "),s("code",[t._v("true")]),t._v(" 반환")]),t._v(" "),s("li",[s("code",[t._v("xs exists p")]),t._v(": 리스트의 원소중에 술어 ("),s("code",[t._v("p")]),t._v(") 를 하나라도 만족하면 "),s("code",[t._v("true")]),t._v(" 를 반환")])]),t._v(" "),s("h4",{attrs:{id:"리스트-폴드-foldleft-와-foldright"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-폴드-foldleft-와-foldright"}},[t._v("#")]),t._v(" 리스트 폴드: foldLeft 와 foldRight")]),t._v(" "),s("p",[s("code",[t._v("sum(List(a, b, c))")]),t._v(" 는 "),s("code",[t._v("0 + a + b + c")]),t._v(" 와 같다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foldLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("왼쪽 폴드 (foldLeft) 연산은 "),s("code",[t._v("xs.foldLeft(z)(op)")]),t._v(" 에 대해 시작값 "),s("code",[t._v("z")]),t._v(", 폴드할 대상 "),s("code",[t._v("xs")]),t._v(" 에 대해 이항 연산인 "),s("code",[t._v("op")]),t._v(" 를 적용한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foldLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// " the quick brown fox"')]),t._v("\n")])])]),s("p",[t._v("위와 같이 맨 앞에 공백을 제거하기 위해 다음과 같이 변형한 형태를 사용한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foldLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the quick brown fox")]),t._v("\n")])])]),s("p",[t._v("왼쪽 폴드와 반대되는 메서드가 오른쪽 폴드 (foldRight) 이다")]),t._v(" "),s("h4",{attrs:{id:"예-폴드를-사용해-리스트-뒤집기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#예-폴드를-사용해-리스트-뒤집기"}},[t._v("#")]),t._v(" 예: 폴드를 사용해 리스트 뒤집기")]),t._v(" "),s("blockquote",[s("p",[t._v("예제 참고")])]),t._v(" "),s("h4",{attrs:{id:"리스트-정렬-sortwith"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-정렬-sortwith"}},[t._v("#")]),t._v(" 리스트 정렬: sortWith")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" sortWith "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(-3, 1, 2, 4, 6)")]),t._v("\n\nword sortWith "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(quick, brown, the, fox)")]),t._v("\n")])])]),s("h3",{attrs:{id:"_16-8-list-객체의-메서드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-8-list-객체의-메서드"}},[t._v("#")]),t._v(" 16.8 List 객체의 메서드")]),t._v(" "),s("h4",{attrs:{id:"원소로부터-리스트-만들기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#원소로부터-리스트-만들기"}},[t._v("#")]),t._v(" 원소로부터 리스트 만들기")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 2, 3)")]),t._v("\n")])])]),s("h4",{attrs:{id:"수의-범위를-리스트로-만들기-list-range"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#수의-범위를-리스트로-만들기-list-range"}},[t._v("#")]),t._v(" 수의 범위를 리스트로 만들기: List.range")]),t._v(" "),s("p",[s("code",[t._v("List.range(form, unitl)")]),t._v(" 이며 "),s("code",[t._v("unitl")]),t._v(" 은 범위에 들어가지 않는다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 2, 3, 4)")]),t._v("\n")])])]),s("p",[t._v("세번째 파라미터로 다음과 같이 증가치를 갖는 "),s("code",[t._v("range")]),t._v(" 버전도 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(1, 3, 5, 7)    ")]),t._v("\n \nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("range"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(9, 6, 3)")]),t._v("\n")])])]),s("h4",{attrs:{id:"균일한-리스트-만들기-list-fill"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#균일한-리스트-만들기-list-fill"}},[t._v("#")]),t._v(" 균일한 리스트 만들기: List.fill")]),t._v(" "),s("p",[t._v("생성할 리스트의 길이를 받은 다음 반복할 원소를 받는다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(a, a, a, a, a)")]),t._v("\n")])])]),s("p",[t._v("fill 에 인자를 2개보다 많이 전달하면 다차원 리스트를 생성한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"함수-도표화-list-tabulate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#함수-도표화-list-tabulate"}},[t._v("#")]),t._v(" 함수 도표화: List.tabulate")]),t._v(" "),s("p",[t._v("제공된 함수로 계산된 리스트를 생성한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tabulate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"여러-리스트-연결하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#여러-리스트-연결하기"}},[t._v("#")]),t._v(" 여러 리스트 연결하기")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(a, b, c)")]),t._v("\n\nList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(b, c)")]),t._v("\n")])])]),s("h3",{attrs:{id:"_16-9-여러-리스트를-함께-처리하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-9-여러-리스트를-함께-처리하기"}},[t._v("#")]),t._v(" 16.9 여러 리스트를 함께 처리하기")]),t._v(" "),s("p",[s("code",[t._v("zip")]),t._v(" 은 앞에서 봐왔듯이 순서쌍 연산을 한다.")]),t._v(" "),s("p",[t._v("하지만 "),s("code",[t._v("zip")]),t._v(" 이 호출된 직후 중간 리스트를 임의로 만들어내기 때문에 생성비용이 들어간다.")]),t._v(" "),s("p",[t._v("때문에 "),s("code",[t._v("lazyzip")]),t._v(" 을 제공한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" lazyZip List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(30, 80)")]),t._v("\n")])])]),s("p",[t._v("하지만 이름에서 알 수 있듯이 컬렉션을 바로 돌려주지 않는다.")]),t._v(" "),s("p",[s("code",[t._v("exists")]),t._v(" 와 "),s("code",[t._v("forall")]),t._v(" 도 지연 연산에 해당하는 버전이 있다.")]),t._v(" "),s("h3",{attrs:{id:"_16-10-스칼라의-타입-추론-알고리즘-이해"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-10-스칼라의-타입-추론-알고리즘-이해"}},[t._v("#")]),t._v(" 16.10 스칼라의 타입 추론 알고리즘 이해")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("msort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(e, d, c, b, a)")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("abcde sortWith "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(e, d, c, b, a)")]),t._v("\n")])])]),s("p",[t._v("위 두 코드는 같은 동작을 수행한다.")]),t._v(" "),s("p",[t._v("하지만 다음의 경우에는 에러가 발생한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("msort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("스칼라에서는 타입 추론이 흐름기반으로 동작한다.")]),t._v(" "),s("p",[t._v("메서드 적용인 "),s("code",[t._v("m(args)")]),t._v(" 에서 타입 추론 로직은 메서드 "),s("code",[t._v("m")]),t._v(" 타입이 있는지 먼저 검사한다.")]),t._v(" "),s("p",[t._v("만약 "),s("code",[t._v("m")]),t._v(" 타입이 있다면 메서드에 적용할 인자의 예상 타입을 추론한다.")]),t._v(" "),s("p",[t._v("타입추론이 첫 인자인 "),s("code",[t._v("(_ > _)")]),t._v("을 검토할때 함수 인자의 정확한 타입을 알 수 없어 실패한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("msort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("abcde"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("어쨋든 타입 인자나 타입 표기를 명시해줘라")])]),t._v(" "),s("h3",{attrs:{id:"_16-11-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-11-결론"}},[t._v("#")]),t._v(" 16.11 결론")]),t._v(" "),s("p",[t._v("리스트를 다루는 많은 방법들을 살펴보았다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-17-컬랙션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-17-컬랙션"}},[t._v("#")]),t._v(" Chapter 17 컬랙션")]),t._v(" "),s("p",[t._v("가장 일반적으로 사용하는 컬렉션 타입과 연산을 살펴본다.")]),t._v(" "),s("h3",{attrs:{id:"_17-1-시퀀스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-시퀀스"}},[t._v("#")]),t._v(" 17.1 시퀀스")]),t._v(" "),s("p",[t._v("시퀀스 (sequence) 타입은 순서가 정해진 데이터 그룹을 가지고 작업할 수 있게 해준다.")]),t._v(" "),s("h4",{attrs:{id:"리스트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트"}},[t._v("#")]),t._v(" 리스트")]),t._v(" "),s("p",[t._v("리스트는 앞부분에 빠르게 원소를 추가하거나 삭제할 수 있다.")]),t._v(" "),s("p",[t._v("리스트를 순차적으로 따라가야 하기 때문에 임의의 위치에 접근할 때는 빠르지 않다.")]),t._v(" "),s("p",[t._v("불변성을 유지하기 때문에 효율적이고 알고리즘을 개발할 때 도움이 된다.")]),t._v(" "),s("h4",{attrs:{id:"배열"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#배열"}},[t._v("#")]),t._v(" 배열")]),t._v(" "),s("p",[t._v("임의의 있는 원소에 효율적으로 접근하게 해준다.")]),t._v(" "),s("h4",{attrs:{id:"리스트-버퍼"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리스트-버퍼"}},[t._v("#")]),t._v(" 리스트 버퍼")]),t._v(" "),s("p",[t._v("리스트의 앞쪽에 대해서는 빠른 접근을 제공하지만, 끝쪽에서는 그렇지 않다.")]),t._v(" "),s("p",[t._v("때문에 리스트의 끝부분에 원소를 추가하면서 리스트를 생성할 필요가 있다면 리스트 앞에 원소를 차례로 추가해 뒤집힌 리스트를 만들고 그런 다음 "),s("code",[t._v("reverse")]),t._v(" 를 호출해 원하는 순서의 리스트를 얻어야 한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ListBuffer \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" ListBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nbuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ListBuffer(1)")]),t._v("\n\nbuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ListBuffer(1, 2)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" buf                                   \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ListBuffer(3, 1, 2) ")]),t._v("\n")])])]),s("h4",{attrs:{id:"배열-버퍼"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#배열-버퍼"}},[t._v("#")]),t._v(" 배열 버퍼")]),t._v(" "),s("p",[t._v("끝 부분과 시작 부분에 원소를 추가하거나 삭제할 수 있다는 점만 제외하면 배열과 같다.")]),t._v(" "),s("p",[t._v("구현을 감싸주는 층 때문에 속도가 다소 느리다해도, 배열 버퍼에 모든 배열 연산을 사용할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" ArrayBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nbuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ArrayBuffer(12) ")]),t._v("\n\nbuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ArrayBuffer(12, 15)")]),t._v("\n")])])]),s("p",[t._v("위와 같이 "),s("code",[t._v("+=")]),t._v(" 메서드를 사용하여 ArrayBuffer 끝에 원소를 추가할 수 있다.")]),t._v(" "),s("h4",{attrs:{id:"문자열-stringops를-통해서"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#문자열-stringops를-통해서"}},[t._v("#")]),t._v(" 문자열(StringOps를 통해서)")]),t._v(" "),s("p",[s("code",[t._v("Predef")]),t._v(" 에 "),s("code",[t._v("String")]),t._v(" 을 "),s("code",[t._v("StringOps")]),t._v(" 로 바꾸는 암시적 변환이 있기 때문에 시퀀스 처럼 문자열을 다룰수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hasUpperCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isUpper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\nhasUpperCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Robert Frost"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("문자열 안에 대문자가 있으면 true 를 반환한다.")]),t._v(" "),s("h3",{attrs:{id:"_17-2-집합과-맵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-집합과-맵"}},[t._v("#")]),t._v(" 17.2 집합과 맵")]),t._v(" "),s("p",[s("code",[t._v("Set")]),t._v(" 이나 "),s("code",[t._v("Map")]),t._v(" 의 기본값은 변경 불가능한 객체이다.")]),t._v(" "),s("p",[t._v("만약 변경 가능한 객체를 만들고 싶으면 명시적으로 임포트 해야 한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutable")]),t._v("\n")])])]),s("h4",{attrs:{id:"집합의-사용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#집합의-사용"}},[t._v("#")]),t._v(" 집합의 사용")]),t._v(" "),s("p",[t._v("집합의 특징은 특정 객체는 최대 하나만 들어가도록 보장한다는 점이다.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("416p 표 17.1 일반적인 집합연산")]),t._v(" 표 참조")])]),t._v(" "),s("h4",{attrs:{id:"맵의-사용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#맵의-사용"}},[t._v("#")]),t._v(" 맵의 사용")]),t._v(" "),s("p",[t._v("어떤 값과 집합의 각 원소 사이에 연관 관계를 만든다.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("419p 표 17.2 일반적인 맵 연산")]),t._v(" 표 참조")])]),t._v(" "),s("h4",{attrs:{id:"디폴트-집합과-맵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#디폴트-집합과-맵"}},[t._v("#")]),t._v(" 디폴트 집합과 맵")]),t._v(" "),s("p",[s("code",[t._v("scala.collection.mutable.Set()")]),t._v(" 팩토리 메서드는 내부적으로 해시 테이블을 사용하는 "),s("code",[t._v("scala.collection.mutable.HashSet")]),t._v(" 을 반환한다.")]),t._v(" "),s("p",[s("code",[t._v("scala.collection.mutable.Map()")]),t._v(" 팩토리 메서드는 마찬가지로 "),s("code",[t._v("scala.collection.mutable.HashMap")]),t._v(" 을 반환한다.")]),t._v(" "),s("p",[s("code",[t._v("scala.collection.mutable.Set()")]),t._v(" 팩토리 메서드는 팩토리에 얼마나 많은 원소를 전달하느냐에 따라 달라진다."),s("br"),t._v("\n이는 성능을 극대화 하기 위해 특정 크기의 집함만을 담당하는 특별한 클래스를 사용한다.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("원소 개수")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("구현")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.EmptySet")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Set1")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Set2")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Set3")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Set4")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5 이상")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.HashSet")])])])])]),t._v(" "),s("p",[t._v("마찬가지로 "),s("code",[t._v("scala.collection.immutable.Map()")]),t._v(" 팩토리 메서드도 원소가 5개보다 적은 맵에 대해서는 성능을 최대화 하기 위해 크기별로 특화된 클래스를 사용한다.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("원소 개수")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("구현")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.EmptyMap")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Map1")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Map2")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Map3")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.Map4")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5 이상")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("scala.collection.immutable.HashMap")])])])])]),t._v(" "),s("h4",{attrs:{id:"정렬된-집합과-맵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정렬된-집합과-맵"}},[t._v("#")]),t._v(" 정렬된 집합과 맵")]),t._v(" "),s("p",[t._v("정해진 순서대로 원소를 반환하는 이터레이터를 제공하는 맵이나 집합을 사용할 때는 "),s("code",[t._v("SortedSet")]),t._v(" 이나 "),s("code",[t._v("SortedMap")]),t._v(" 트레이트를 사용한다.")]),t._v(" "),s("p",[t._v("이 두 트레이트의 구현은 "),s("code",[t._v("TreeSet")]),t._v(" 과 "),s("code",[t._v("TreeMap")]),t._v(" 클래스이다.")]),t._v(" "),s("h3",{attrs:{id:"_17-3-변경-가능-컬렉션과-변경-불가능-컬렉션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-변경-가능-컬렉션과-변경-불가능-컬렉션"}},[t._v("#")]),t._v(" 17.3 변경 가능 컬렉션과 변경 불가능 컬렉션")]),t._v(" "),s("p",[t._v("변경 가능한 컬렉션과 변경 불가능한 컬렉션의 선택이 어려우면 변경 불가능한 컬렉션을 우선시 하라")]),t._v(" "),s("p",[t._v("변경 불가능한 컬렉션은 프로그램을 추론하기 더 쉬우며, 저장할 원소의 수가 적을 경우 더 작게 저장할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"_17-4-컬렉션-초기화"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-4-컬렉션-초기화"}},[t._v("#")]),t._v(" 17.4 컬렉션 초기화")]),t._v(" "),s("p",[t._v("컬렉션을 초기화하고 생성하는 일반적인 방법은 초기 원소를 컬렉션 동반 객체의 팩토리 메서드에 넘기는 것이다.")]),t._v(" "),s("p",[t._v("대부분의 경우에는 스칼라 컴파일러가 동반 객체의 팩토리 메서드에 전달한 원소로부터 컬렉션 원소 타입을 추론할 수 있다.")]),t._v(" "),s("p",[t._v("특별한 상황에서는 어떤 컬렉션을 다른 컬렉션으로 전환해야 하는 경우가 있는데 이럴때는 "),s("code",[t._v("to")]),t._v(" 메서드를 사용하여 다른 컬렉션으로 초기화 하자")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" colors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yellow"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" treeSet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color to TreeSet\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TreeSet(blue, green, red, yellow)")]),t._v("\n")])])]),s("h4",{attrs:{id:"배열이나-리스트로-바꾸기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#배열이나-리스트로-바꾸기"}},[t._v("#")]),t._v(" 배열이나 리스트로 바꾸기")]),t._v(" "),s("p",[t._v("다른 컬렉션을 가지고 새로운 리스트를 초기화 하려면 "),s("code",[t._v("toList")]),t._v(" 를 호출하자")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("treeSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List(blue, green, red, yellow)")]),t._v("\n")])])]),s("p",[t._v("만약 배열을 원한다면 "),s("code",[t._v("toArray")]),t._v(" 을 호출하자")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("treeSet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toArray\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Array(blue, green, red, yellow)")]),t._v("\n")])])]),s("h4",{attrs:{id:"변경-가능한-집합-맵-과-변경-불가능한-집합-맵-사이의-변환"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변경-가능한-집합-맵-과-변경-불가능한-집합-맵-사이의-변환"}},[t._v("#")]),t._v(" 변경 가능한 집합(맵)과 변경 불가능한 집합(맵) 사이의 변환")]),t._v(" "),s("p",[t._v("변경 가능한 집합이나 맵을 변경 불가능한 객체로 바꾸거나 혹은 그 반대일 경우 "),s("code",[t._v("to")]),t._v(" 메서드를 사용할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutable")]),t._v(" \n\ntreeSet \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TreeSet(blue, green, red, yellow) ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" mutaSet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" treeSet to mutable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Set\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Set(yellow, blue, red, green) ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" immutaSet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mutaSet to Set\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Set(yellow, blue, red, green) ")]),t._v("\n")])])]),s("h3",{attrs:{id:"_17-5-튜플"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-5-튜플"}},[t._v("#")]),t._v(" 17.5 튜플")]),t._v(" "),s("p",[t._v("튜플 (tuple) 은 정해진 개수의 원소를 한데 묶는다.")]),t._v(" "),s("p",[t._v("다음은 정수, 문자열, Console 타입의 원소가 있는 튜플의 한 예이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("튜플은 각기 다른 타입의 객체를 결합할 수 있기 때문에, Iterable을 상속하지 않는다.")]),t._v(" "),s("p",[t._v("튜플을 사용하는 가장 일반적인 경우에는 메서드에서 여러 값을 반환하는 것이다.")]),t._v(" "),s("p",[t._v("다음은 가장 긴 단어를 찾고 그 단어의 인덱스를 반환하는 메서드이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" longestWord"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" idx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" until words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" words"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      idx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" idx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" longset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" longestWord"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The quick brown fox"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (quick, 1)")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("longest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// quick")]),t._v("\n\nlongest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" idx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" longest\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// word = quick, idx = 1")]),t._v("\n")])])]),s("p",[t._v("위에서 괄호를 생략하면 다른 결과가 나온다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" idx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" longest\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// word = (quick, 1)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// idx = (quick, 1)")]),t._v("\n")])])]),s("p",[t._v("튜플은 너무나 사용하기 쉽기 때문에 'A 하나와 B 하나' 수준을 넘지 않는 데이터를 묶을때 유용하다.")]),t._v(" "),s("p",[t._v("결합에 어떤 의미가 있거나 결합 메서드를 추가하기를 원한다면 클래스를 생성하는 편이 더 좋다.")]),t._v(" "),s("h3",{attrs:{id:"_17-6-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-6-결론"}},[t._v("#")]),t._v(" 17.6 결론")]),t._v(" "),s("p",[t._v("스칼라 컬렉션을 더 효과적으로 사용할 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-18-변경-가능한-객체"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-18-변경-가능한-객체"}},[t._v("#")]),t._v(" Chapter 18 변경 가능한 객체")]),t._v(" "),s("p",[t._v("변경 가능한 객체가 무엇인지 설명하고, 그런 객체를 표현하도록 스칼라가 제공하는 문법적 요소를 설명한다.")]),t._v(" "),s("h3",{attrs:{id:"_18-1-무엇이-객체를-변경-가능하게-하는가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-무엇이-객체를-변경-가능하게-하는가"}},[t._v("#")]),t._v(" 18.1 무엇이 객체를 변경 가능하게 하는가")]),t._v(" "),s("p",[t._v("순수 함수형 객체의 필드에 접근하거나 메서드를 호출하면 항상 동일한 결과가 나온다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" BankAccount "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" balance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bal\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" deposit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    bal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" amount\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" withdraw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" bal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      bal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" amount\n      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" BankAccount\n\naccount deposit "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\naccount withdraw "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\naccount withdraw "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("p",[t._v("위의 예에서 마지막 두 "),s("code",[t._v("withDraw")]),t._v(" 는 다른 결과를 반환한다.")]),t._v(" "),s("p",[t._v("첫번째는 계좌에 충분한 잔고가 있기 때문에 "),s("code",[t._v("true")]),t._v(" 를 반환하지만 두 번째는 동일한 연산을 호출했으나 잔고가 부족하여 "),s("code",[t._v("false")]),t._v(" 를 반환한다.")]),t._v(" "),s("p",[t._v("만약 어떤 클래스가 변경 가능한 상태를 가진 다른 객체에게 메서드 호출을 위임하기 때문에 "),s("code",[t._v("var")]),t._v(" 를 상속하거나 정의하지 않고도 변경가능한 상태를 가질 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Keyed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" computeKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 비용이 많이 드는 연산")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("computeKey")]),t._v(" 가 어떤 "),s("code",[t._v("var")]),t._v(" 를 읽고 쓰지 않는다면, 캐시를 추가함으로써 "),s("code",[t._v("Keyed")]),t._v(" 를 더 효율적으로 만들 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MemoKeyed "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Keyed "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" keyCache"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" None\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" computeKey"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("keyCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isDefined"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      keyCache "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("computeKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    keyCache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("Keyed")]),t._v(" 대신 "),s("code",[t._v("MemoKeyed")]),t._v(" 를 사용해 속도를 더 올릴 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("computeKey")]),t._v(" 의 결과를 두번째로 요청 받으면, "),s("code",[t._v("computeKey")]),t._v(" 를 한번 더 계산하는 대신 "),s("code",[t._v("keyCache")]),t._v(" 필드에 저장해둔 값을 반환하기 때문이다.")]),t._v(" "),s("h3",{attrs:{id:"_18-2-재할당-가능한-변수와-프로퍼티"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-재할당-가능한-변수와-프로퍼티"}},[t._v("#")]),t._v(" 18.2 재할당 가능한 변수와 프로퍼티")]),t._v(" "),s("p",[t._v("스칼라에서는 어떤 객체의 멤버 중 비공개가 아닌 모든 "),s("code",[t._v("var")]),t._v(" 멤버에 "),s("code",[t._v("Getter")]),t._v(" 와 "),s("code",[t._v("Setter")]),t._v(" 메서드를 자동으로 정의해 준다.")]),t._v(" "),s("p",[s("code",[t._v("Getter")]),t._v(" 와 "),s("code",[t._v("Setter")]),t._v(" 의 이름은 자바의 관례와는 다르다")]),t._v(" "),s("p",[s("code",[t._v("var x")]),t._v(" 의 "),s("code",[t._v("Getter")]),t._v(" 는 "),s("code",[t._v("x")]),t._v(" 이고 Setter 는 "),s("code",[t._v("x_=")]),t._v(" 이다.")]),t._v(" "),s("p",[t._v("다음은 공개 "),s("code",[t._v("var")]),t._v(" 가 게터와 세터 메서드로 어떻게 확장되는지 보여주는 예")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Time "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hour_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" minute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" minute_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("다음은 "),s("code",[t._v("var")]),t._v(" 를 "),s("code",[t._v("Getter")]),t._v(" 와 "),s("code",[t._v("Setter")]),t._v(" 로 확장하는 경우 직접 정의할 수 있다는 점을 보여준다.")]),t._v(" "),s("p",[t._v("만약 특정 값의 허용범위를 제한할 경우 "),s("code",[t._v("require")]),t._v(" 문을 사용한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Time "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hour_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" minute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" minute_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("프로퍼티는 여러 목적으로 사용할 수 있는데 위의 예에서는 "),s("code",[t._v("require")]),t._v(" 를 사용하여 불변 조건 (invariant) 를 적용하였다.")]),t._v(" "),s("p",[t._v("이를 사용하면 허용하면 안되는 값을 변수에 할당하는것을 막을수 있는데 어떤 변수에 모든 접근을 로그로 남길수도 있고, 변수에 이벤트를 접목해서 어떤 변수를 변경할 때마다 구독 (subscribe) 를 요청한 다른 객체들에게 통지하게 만들 수 있다.")]),t._v(" "),s("p",[t._v("다음과 같이 필드 초기화에 "),s("code",[t._v("= _")]),t._v(" 를 사용하면 필드에 제로 (zero) 를 할당한다.")]),t._v(" "),s("p",[t._v("제로는 필드 타입에 따라 다르다.")]),t._v(" "),s("ul",[s("li",[t._v("숫자 타입 : 0")]),t._v(" "),s("li",[t._v("논리 타입 : false")]),t._v(" "),s("li",[t._v("참조 타입 : null")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" celsius"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _\n")])])]),s("p",[t._v("만약 다음과 같이 초기화 하지 않으면 추상 변수를 선언해 버린다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" celsius"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v("\n")])])]),s("h3",{attrs:{id:"_18-3-사례-연구-이산-이벤트-시뮬레이션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-사례-연구-이산-이벤트-시뮬레이션"}},[t._v("#")]),t._v(" 18.3 사례 연구: 이산 이벤트 시뮬레이션")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 코드 및 설명 참고")])]),t._v(" "),s("h3",{attrs:{id:"_18-4-디지털-회로를-위한-언어"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-디지털-회로를-위한-언어"}},[t._v("#")]),t._v(" 18.4 디지털 회로를 위한 언어")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 코드 및 설명 참고")])]),t._v(" "),s("h3",{attrs:{id:"_18-5-시뮬레이션-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-5-시뮬레이션-api"}},[t._v("#")]),t._v(" 18.5 시뮬레이션 API")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 코드 및 설명 참고")])]),t._v(" "),s("h3",{attrs:{id:"_18-6-회로-시뮬레이션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-6-회로-시뮬레이션"}},[t._v("#")]),t._v(" 18.6 회로 시뮬레이션")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 코드 및 설명 참고")])]),t._v(" "),s("h3",{attrs:{id:"_18-7-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-7-결론"}},[t._v("#")]),t._v(" 18.7 결론")]),t._v(" "),s("p",[t._v("함수형 접근 방식과 명령형 접근 방식을 조합하여 문제를 해결할 수 있도록 유도하자.")]),t._v(" "),s("h2",{attrs:{id:"chapter-19-타입-파라미터화"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-19-타입-파라미터화"}},[t._v("#")]),t._v(" Chapter 19 타입 파라미터화")]),t._v(" "),s("p",[t._v("타입 파라미타화를 사용하면 제네릭 클래스와 트레이트를 쓸 수 있다.")]),t._v(" "),s("p",[t._v("집합은 제네릭이며 타입 파라미터를 받기 때문에 타입이 "),s("code",[t._v("Set[T]")]),t._v(" 이다. (특정 집합의 인스턴스는 "),s("code",[t._v("Set[String]")]),t._v(", "),s("code",[t._v("Set[Int]")]),t._v(" 이다.)")]),t._v(" "),s("p",[t._v("제네릭 타입의 파라미터를 쓰지 않아도 되는 자바와 달리, 스칼라에서는 반드시 타입 파라미터를 명시해야 한다.")]),t._v(" "),s("p",[t._v("타입 변성은 파라미터 타입 간의 상속관계를 지정해야 하는데 예를 들면 "),s("code",[t._v("Set[String]")]),t._v("이 "),s("code",[t._v("Set[AnyRef]")]),t._v(" 하위 집합인지 변성에 의해 결정된다.")]),t._v(" "),s("h3",{attrs:{id:"_19-1-함수형-큐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-함수형-큐"}},[t._v("#")]),t._v(" 19.1 함수형 큐")]),t._v(" "),s("ul",[s("li",[t._v("head: 큐의 첫 원소를 반환한다.")]),t._v(" "),s("li",[t._v("tail: 큐의 첫 원소를 제외한 나머지를 반환한다.")]),t._v(" "),s("li",[t._v("enqueue: 인자로 주어진 원소를 큐의 맨뒤에 추가한 새로운 큐를 반환한다.")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" SlowAppendQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elems"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" SlowAppendQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" SlowAppendQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elems "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("enqueue")]),t._v(" 연산은 큐에 들어있는 원소의 개수에 비례한다.")]),t._v(" "),s("p",[t._v("상수 시간 추가를 바란다면 아래와 같이 리스트의 원소를 뒤집을 수도 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" SlowHeadQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("smele"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" smele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("last\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" SlowHeadQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("smele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" SlowHeadQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" smele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("enqueue")]),t._v(" 는 상수 시간이지만 "),s("code",[t._v("head")]),t._v(", "),s("code",[t._v("tail")]),t._v(" 은 그렇지 않다. 이들은 원소 개수에 비례하는 시간을 소비한다.")]),t._v(" "),s("p",[t._v("원소를 추가하기 위해서는 "),s("code",[t._v("::")]),t._v(" 연산자를 사용해 "),s("code",[t._v("trailing")]),t._v(" 리스트에 넣으면 되며 이는 상수 시간이 걸린다.")]),t._v(" "),s("p",[t._v("위 두가지 방법을 혼용하여 다음과 같이 구현한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" leading"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" mirror "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isEmpty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mirror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" q "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mirror\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("mirror")]),t._v(" 연산은 큐의 원소 개수에 비례하는 시간이 걸림")]),t._v(" "),s("li",[s("code",[t._v("head")]),t._v(" 를 많이 호출하면 매번 "),s("code",[t._v("head")]),t._v(" 를 실행할 때 마다 비싼 비용을 들여 리스트를 정리하기 위해 "),s("code",[t._v("mirror")]),t._v(" 를 호출")])]),t._v(" "),s("h3",{attrs:{id:"_19-2-정보-은닉"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-정보-은닉"}},[t._v("#")]),t._v(" 19.2 정보 은닉")]),t._v(" "),s("p",[t._v("클라이언트에게 내부 구조를 감추는 방법")]),t._v(" "),s("h4",{attrs:{id:"비공개-생성자와-팩토리-메서드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#비공개-생성자와-팩토리-메서드"}},[t._v("#")]),t._v(" 비공개 생성자와 팩토리 메서드")]),t._v(" "),s("p",[t._v("클래스 파라미터 목록 바로 앞에 private 수식자를 붙여 주 생성자를 감출 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" leading"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("이 생성자는 오직 클래스 자신과 동반 객체에 대해서만 접근 가능하다.")]),t._v(" "),s("p",[t._v("이는 클라이언트가주 생성자를 더이상 호출할 수 없기 때문에 보조 생성자를 추가해줘야 한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("위 보조 생성자는 빈 큐를 만든다.")]),t._v(" "),s("p",[t._v("아래와 같이 보조 확장자가 큐를 초기화할 원소를 받게 만들수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elems"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[s("code",[t._v("T*")]),t._v(" 는 반복 파라미터 이다. (8.8 절)")])]),t._v(" "),s("p",[t._v("다른 방법은 보조 생성자 처럼 초기 원소의 목록으로부터 큐를 만드는 팩토리 메서드를 추가하는 것이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Queue "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" apply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("xs")]),t._v(" 의 원소를 큐로 만든다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or")]),t._v("\n\nQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"대안-비공개-클래스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#대안-비공개-클래스"}},[t._v("#")]),t._v(" 대안: 비공개 클래스")]),t._v(" "),s("p",[t._v("클래스 자체를 감추가 클래스에 대한 공개 인터페이스만을 제공하는 트레이트를 외부로 노출한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Queue "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" apply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" QueueImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" QueueImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" leading"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" mirror "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isEmpty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" QueueImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("  \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mirror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head \n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" QueueImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" q "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mirror \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" QueueImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" QueueImpl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위와 같이 구현 클래스인 "),s("code",[t._v("QueueImpl")]),t._v(" 클래스 전체를 감춘다.")]),t._v(" "),s("h3",{attrs:{id:"_19-3-변성-표기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-3-변성-표기"}},[t._v("#")]),t._v(" 19.3 변성 표기")]),t._v(" "),s("p",[t._v("위에 정의한 "),s("code",[t._v("Queue")]),t._v(" 는 트레이트이며 타입이 아니다.")]),t._v(" "),s("p",[s("code",[t._v("Queue")]),t._v(" 가 타입이 아닌 이유는 타입 파라미터를 받기 때문이다.")]),t._v(" "),s("p",[t._v("때문에 "),s("code",[t._v("Queue")]),t._v(" 라는 타입의 변수를 만들수 없다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" doesNotCompile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                    ^")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  error: class Queue takes type parameters")]),t._v("\n")])])]),s("p",[t._v("대신 "),s("code",[t._v("Queue")]),t._v(" 트레이트는 "),s("code",[t._v("Queue[String]")]),t._v(", "),s("code",[t._v("Queue[Int]")]),t._v(", "),s("code",[t._v("Queue[AnyRef]")]),t._v(" 처럼 파라미터화된 타입을 지정하도록 허용한다.")]),t._v(" "),s("p",[t._v("따라서 "),s("code",[t._v("Queue")]),t._v(" 는 타입 생성자라고도 할 수 있다.")]),t._v(" "),s("p",[t._v("스칼라에서 제네릭 타입은 기본적으로 무공변 (non-variant) 이다.")]),t._v(" "),s("p",[t._v("어떤 타입 파라미터의 공변, 반공변, 무공변 여부를 파라미터의 변성 (variance) 라고 한다.")]),t._v(" "),s("p",[s("code",[t._v("+")]),t._v(", "),s("code",[t._v("-")]),t._v(" 기호는 변성 표기 (variance annotation) 라고 부른다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" c1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" c2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1 \nc2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get \n")])])]),s("p",[t._v("위 코드는 컴파일 오류를 발생 시킨다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("Cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" covariant "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T occurs in \ncontravariant position in "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T of value x \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x \n              "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n")])])]),s("h4",{attrs:{id:"변성과-배열"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변성과-배열"}},[t._v("#")]),t._v(" 변성과 배열")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \na2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Integer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("자바는 실행 시점에 타입의 정보를 저장한다. 이는 안전하지 않는 방법이나 설계당시 배열을 제네릭하게 다룰 간단한 방법이 필요했기 때문이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" a2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1\n")])])]),s("p",[t._v("스칼라는 배열을 무공변으로 다루기 때문에 위와 같이 "),s("code",[t._v("Array[String]")]),t._v(" 을 "),s("code",[t._v("Array[Any]")]),t._v(" 로 대체할 수 없다.")]),t._v(" "),s("h3",{attrs:{id:"_19-4-변성-표기-검사"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-4-변성-표기-검사"}},[t._v("#")]),t._v(" 19.4 변성 표기 검사")]),t._v(" "),s("ul",[s("li",[t._v("스칼라 컴파일러는 클래스나 트레이트 본문의 모든 위치를 "),s("strong",[t._v("긍정적")]),t._v(", "),s("strong",[t._v("부정적")]),t._v(", "),s("strong",[t._v("중립적")]),t._v("으로 구분한다.")]),t._v(" "),s("li",[s("code",[t._v("+")]),t._v(" 로 표시한 타입 파라미터는 긍정적인 위치에서만 사용 가능")]),t._v(" "),s("li",[s("code",[t._v("-")]),t._v(" 로 표시한 파라미터는 부정적 위치에서만 사용 가능")]),t._v(" "),s("li",[t._v("아무 변성 표기가 없는 타입 파라미터는 아무 곳에서나 사용 가능")]),t._v(" "),s("li",[t._v("가장 바깥 스코프부터 내부 스코프로 긍정적/부정적/중립적인지 구분한다.")])]),t._v(" "),s("h3",{attrs:{id:"_19-5-하위-바운드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-5-하위-바운드"}},[t._v("#")]),t._v(" 19.5 하위 바운드")]),t._v(" "),s("p",[s("code",[t._v("Queue[T]")]),t._v(" 정의에서 "),s("code",[t._v("T")]),t._v(" 를 공변적으로 만들 수 없다.")]),t._v(" "),s("p",[s("code",[t._v("T")]),t._v(" 는 "),s("code",[t._v("enqueue")]),t._v(" 메소드의 파라미터 타입인데 그 위치는 부정적이기 때문이다 (?)")]),t._v(" "),s("p",[s("code",[t._v("enqueue")]),t._v(" 를 다형성 (즉 enqueue에 타입 파라미터를 지정) 으로 더 일반화하고, 타입 파라미터에 하위 바운드 (lower bound) 를 사용하는 것 이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" leading"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" U"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위 코드에서는 "),s("code",[t._v("enqueue")]),t._v(" 에 타입 파라미터 "),s("code",[t._v("U")]),t._v(" 를 추가하면서 "),s("code",[t._v("U >: T")]),t._v(" 를 사용하여 "),s("code",[t._v("T")]),t._v(" 를 "),s("code",[t._v("U")]),t._v(" 의 하위 바운드로 지정하였다. ("),s("code",[t._v("U")]),t._v(" 는 "),s("code",[t._v("T")]),t._v(" 의 슈퍼타입)")]),t._v(" "),s("p",[t._v("따라서 메서드의 반환값으로 "),s("code",[t._v("Queue[T]")]),t._v(" 에서 "),s("code",[t._v("Queue[U]")]),t._v(" 로 바뀐다.")]),t._v(" "),s("p",[t._v("위 코드는 변성 표기와 하위 바운드가 함께 잘 작동할 수 있음을 보여준다.")]),t._v(" "),s("p",[t._v("이들은 타입 위주 설계 (type-driven design) 의 좋은 예이다.")]),t._v(" "),s("p",[t._v("스칼라가 자바의 와일드카드 (wildcard) 에서 볼 수 있는 사용 위치 변성 (use-site variance) 보다 선언 위치 변성 (declaration-site variance) 를 선호하는 주된 이유이다.")]),t._v(" "),s("h3",{attrs:{id:"_19-6-반공변성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-6-반공변성"}},[t._v("#")]),t._v(" 19.6 반공변성")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" OutputChannel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("U")]),t._v(" 타입의 값이 필요한 모든 경우를 "),s("code",[t._v("T")]),t._v(" 타입의 값으로 대치할 수 있다면 "),s("code",[t._v("T")]),t._v(" 타입을 "),s("code",[t._v("U")]),t._v(" 타입의 서브타입으로 가정해도 안전하다는 것이다. (리스코프 치환원칙)")]),t._v(" "),s("p",[t._v("한 타입 안에서 공변성과 반공변성이 함께 섞여있는 경우도 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Function1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" apply"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("Function1")]),t._v(" 트레이트는 인자 타입 "),s("code",[t._v("S")]),t._v(" 에 대해서는 반공변이고, 결과 타입 "),s("code",[t._v("T")]),t._v(" 에 대해서는 공변이다.")]),t._v(" "),s("p",[t._v("인자는 함수가 요구하는것이고 결과는 함수가 제공하는것이기 때문이다.")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"/backend/language/java/essential/generic/pecs"}},[t._v("PECS")]),t._v(" 와 유사해 보인다.")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A120.png",alt:"함수 타입 파라미터의 공변셩과 반공변성"}})]),t._v(" "),s("h3",{attrs:{id:"_19-7-객체의-비공개-데이터"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-7-객체의-비공개-데이터"}},[t._v("#")]),t._v(" 19.7 객체의 비공개 데이터")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" leading"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" mirror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isEmpty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isEmpty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        leading "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" leading\n        trailing "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    mirror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tail"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    mirror"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" U"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("U"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" trailing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_19-8-상위-바운드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-8-상위-바운드"}},[t._v("#")]),t._v(" 19.8 상위 바운드")]),t._v(" "),s("p",[s("code",[t._v("T <: Ordered[T]")]),t._v(" 라는 문법을 사용하여 타입 파라미터 "),s("code",[t._v("T")]),t._v(" 의 상위 바운드가 Order[T] 라는 사실을 명시할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("div",{staticClass:"highlight-lines"},[s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" orderedMergeSort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Ordered"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" ys \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" xs \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" xs1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" ys1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v(" merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ys1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" xs \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xs splitAt n \n    merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orderedMergeSort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderedMergeSort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_19-9-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-9-결론"}},[t._v("#")]),t._v(" 19.9 결론")]),t._v(" "),s("p",[t._v("정보 은닉을 위한 여러 기법을 살펴보았다. (비공개 생성자, 팩토리 메섣, 객체 비공개 멤버)")]),t._v(" "),s("p",[t._v("또한 타입 변성을 지정하는 법, 변성 표기를 위한 기법들도 살펴보았다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-20-추상-멤버"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-20-추상-멤버"}},[t._v("#")]),t._v(" Chapter 20 추상 멤버")]),t._v(" "),s("p",[t._v("클래스타 트레이트의 멤버가 그 클래스 안에 완전한 정의를 갖고 있지 않으면 "),s("strong",[t._v("추상 멤버 (abstract member)")]),t._v(" 라고 한다.")]),t._v(" "),s("p",[t._v("추상 멤버는 그 멤버가 정의된 클래스를 상속한 서브 클래스에서 구현하도록 되어 있다.")]),t._v(" "),s("h3",{attrs:{id:"_20-1-추상-멤버-간략하게-돌아보기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-추상-멤버-간략하게-돌아보기"}},[t._v("#")]),t._v(" 20.1 추상 멤버 간략하게 돌아보기")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Abstract "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" initial"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("Abstract")]),t._v(" 를 구체적으로 구현하려면 각각의 추상 멤버 정의를 채워넣어야 한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Concrete "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Abstract "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" transform"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" x \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" initial "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi"')]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" current "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initial \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_20-2-타입-멤버"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-타입-멤버"}},[t._v("#")]),t._v(" 20.2 타입 멤버")]),t._v(" "),s("p",[t._v("스칼라에서 추상 타입 (abstract type) 은 클래스나 트레이트의 멤버로 정의 없이 선언된 타입이다.")]),t._v(" "),s("p",[t._v("어떤 타입에 대한 새로운 이름, 혹은 별명 (alias) 을 정의하는 방법으로 생각할 수 있다.")]),t._v(" "),s("p",[t._v("타입 멤버는 실제 이름이 너무 길거나 의미가 불명확할 때 더 간단하고 의도를 잘 전달할 수 있는 별명을 선언하는 것이다.")]),t._v(" "),s("p",[t._v("서브클래스에서 꼭 정의해야 하는 추상 타입을 선언 하여 사용한다.")]),t._v(" "),s("h3",{attrs:{id:"_20-3-추상-val"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-3-추상-val"}},[t._v("#")]),t._v(" 20.3 추상 val")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" inital"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n")])])]),s("p",[s("code",[t._v("val")]),t._v(" 에 대해 이름과 타입은 주지만 값은 지정하지 않는다.")]),t._v(" "),s("p",[t._v("실제로 Concrete 클래스 구현에서 위의 "),s("code",[t._v("val")]),t._v(" 을 다음과 같이 정의할 수 있다.")]),t._v(" "),s("p",[t._v("추상 val 선언은 파라미터 없는 추상 메서드 선언과 비슷해 보인다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Fruit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `v' 는 값을 의미")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `m' 은 메서드를 의미")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Apple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Fruit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// def 를 val 로 오버라이드 할 수 있다.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" BadApple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Fruit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 오류: val 은 def 로 오버라이드 할 수 없다.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_20-4-추상-var"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-4-추상-var"}},[t._v("#")]),t._v(" 20.4 추상 var")]),t._v(" "),s("p",[t._v("암시적으로 "),s("code",[t._v("Getter")]),t._v(" 메서드와 "),s("code",[t._v("Setter")]),t._v(" 메서드를 정의하는 것과 같다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" AbstractTime "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" minute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" AbstractTime "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" hour_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" minute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" minute_"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_20-5-추상-val-의-초기화"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-5-추상-val-의-초기화"}},[t._v("#")]),t._v(" 20.5 추상 val 의 초기화")]),t._v(" "),s("p",[t._v("슈퍼클래스에 빠진 자세한 부분을 서브클래스에 전달할 수 있는 수단을 제공한다.")]),t._v(" "),s("p",[t._v("이 부분은 트레이트에 중요한데, 트레이트에는 파라미터를 넘길 생성자가 없기 때문이다.")]),t._v(" "),s("p",[t._v("따라서 보통 트레이트를 파라미터화 하려면 서브 클래스에서 구현하는 추상 val 을 통하기 마련이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" RationalTrait "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numerArg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denomArg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" RationalTrait "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numerArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denomArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[s("code",[t._v("new")]),t._v(" 키워드를 트레이트 이름 "),s("code",[t._v("RationalTrait")]),t._v(" 앞에 적었다. 그리고 트레이트 이름 다음의 중괄호 속에 새 클래스의 본문이 들어갔다.")]),t._v(" "),s("p",[t._v("이 표현식은 트레이트를 혼합한 익명 클래스 (anonymous class) 의 인스턴스를 만들며 클래스 정의는 본문에 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" RationalTrait "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numerArg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denomArg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("  \n  require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("denomArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gcd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("numerArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" denomArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numerArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" g \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" denomArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" g \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" gcd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" gcd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" denom \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위 코드에서 트레이트에 분모나 분자에 단순한 리터럴이 아닌 표현식을 넣어서 초기화하려고 하면 예외가 발생한다.")]),t._v(" "),s("p",[s("code",[t._v("RationalTrait")]),t._v(" 클래스를 초기화할 때 "),s("code",[t._v("denomArg")]),t._v(" 의 값이 디폴트 값인 "),s("code",[t._v("0")]),t._v(" 이기 때문이다.")]),t._v(" "),s("h4",{attrs:{id:"필드-미리-초기화하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#필드-미리-초기화하기"}},[t._v("#")]),t._v(" 필드 미리 초기화하기")]),t._v(" "),s("ul",[s("li",[t._v("익명 클래스 표현식에서 필드 미리 초기화하기")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numerArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denomArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" RationalTrait \n")])])]),s("ul",[s("li",[t._v("객체 정의에서 필드를 미리 초기화하기")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" twoThirds "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numerArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denomArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" RationalTrait\n")])])]),s("ul",[s("li",[t._v("클래스 정의에서 필드를 미리 초기화하기")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" RationalClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" numerArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" denomArg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" RationalTrait "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RationalClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" RationalClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" \n    numer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" that"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("denom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" that"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("numer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" denom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    denom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" that"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("denom \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"지연-계산-val-변수"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#지연-계산-val-변수"}},[t._v("#")]),t._v(" 지연 계산 val 변수")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Demo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"initializing x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Demo \nres5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Demo$"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@11dda2d")]),t._v(" \n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x \ninitializing x \nres6"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" done\n")])])]),s("p",[s("code",[t._v("Demo")]),t._v(" 를 초기화하는 과정에는 "),s("code",[t._v("x")]),t._v(" 를 초기화하는 과정이 들어가지 않는다.")]),t._v(" "),s("p",[s("code",[t._v("x")]),t._v(" 의 초기화를 "),s("code",[t._v("x")]),t._v(" 가 맨 처음 쓰일 때까지 연기한다.")]),t._v(" "),s("h3",{attrs:{id:"_20-6-추상-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-6-추상-타입"}},[t._v("#")]),t._v(" 20.6 추상 타입")]),t._v(" "),s("ul",[s("li",[t._v("추상 타입 선언: 서브 클래스에서 구체적으로 정해야 하는 어떤 대상에 대한 빈 공간을 마련해두는 것이다.")])]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Food \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" SuitableFood "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Food   \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" eat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SuitableFood"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("SuitableFood")]),t._v(" 를 구체적으로 인스턴스화 해야 하는 경우 "),s("code",[t._v("Food")]),t._v(" 의 서브클래스여야 한다는 뜻이다.")]),t._v(" "),s("h3",{attrs:{id:"_20-7-경로에-의존하는-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-7-경로에-의존하는-타입"}},[t._v("#")]),t._v(" 20.7 경로에 의존하는 타입")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" bessy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Cow \n")])])]),s("p",[s("code",[t._v("bessy.SuitableFood")]),t._v(" 와 같은 타입을 경로에 의존하는 타입 (path-dependent type) 이라고 한다.")]),t._v(" "),s("p",[t._v("여기서 "),s("strong",[t._v("경로")]),t._v("는 객체의 참조를 의미한다.")]),t._v(" "),s("p",[t._v("이 타입은 경로에 따라 달라진다.")]),t._v(" "),s("h3",{attrs:{id:"_20-8-세분화한-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-8-세분화한-타입"}},[t._v("#")]),t._v(" 20.8 세분화한 타입")]),t._v(" "),s("p",[t._v("어떤 클래스 A 가 다른 클래스 B 를 상속할 때, 전자 (A) 가 후자 (B) 의 "),s("strong",[t._v("이름에 의한 서브타입")]),t._v("이라고 말한다.")]),t._v(" "),s("p",[t._v("이 이름의 의한 서브타입은 사용하기 편하며 이름은 짧은 식별자이기 때누에 타입을 나열하는것 보다 훨씬 간결하다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("Animal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" SuitableFood "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Grass "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Pasture "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" animals"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Animal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" SuitableFood "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Grass "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Nil \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_20-9-열거형"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-9-열거형"}},[t._v("#")]),t._v(" 20.9 열거형")]),t._v(" "),s("p",[t._v("스칼라는 열거형을 위한 특별한 문법을 제공하지는 않지만 "),s("code",[t._v("scala.Enumeration")]),t._v(" 이라는 클래스가 스칼라 표준 라이브러리에 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Color "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Enumeration "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" Red "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" Green "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" Blue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Color "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Enumeration "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" Red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Green"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Blue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위 두 코드는 같은 기능을 한다.")]),t._v(" "),s("p",[t._v("다음과 같이 "),s("code",[t._v("Value")]),t._v(" 메서드를 오버로드한 변형 메서드를 호출하면 열거형 값과 이름을 연관시킬수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Direction "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Enumeration "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" North "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"North"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" East "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"East"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" South "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"South"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" West "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"West"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("또한 values 메서드를 사용하면, 어떤 열거형의 값에 대해 이터레이션 할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" Direction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" print"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// North East South West  ")]),t._v("\n")])])]),s("p",[t._v("각 열거형은 0 부터 번호 (id) 가 붙는다 이 번호는 id 메서드 반대로 열겨형 값으로 호출할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("Direction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("East"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1: Int")]),t._v("\n\nDirection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// East")]),t._v("\n")])])]),s("h3",{attrs:{id:"_20-10-사례-연구-통화-변환"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-10-사례-연구-통화-변환"}},[t._v("#")]),t._v(" 20.10 사례 연구: 통화 변환")]),t._v(" "),s("blockquote",[s("p",[t._v("예제 코드 설명")])]),t._v(" "),s("h3",{attrs:{id:"_20-11-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-11-결론"}},[t._v("#")]),t._v(" 20.11 결론")]),t._v(" "),s("p",[t._v("스칼라는 객체지향 추상화를 구조적으로 일반화하여 지원한다.")])])}),[],!1,null,null,null);a.default=e.exports}}]);