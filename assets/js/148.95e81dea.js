(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{345:function(a,t,s){"use strict";s.r(t);var n=s(0),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"_3주차-11-15-chapter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3주차-11-15-chapter"}},[a._v("#")]),a._v(" 3주차 (11 ~ 15 Chapter)")]),a._v(" "),s("h2",{attrs:{id:"chapter-11-스칼라의-계층구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-11-스칼라의-계층구조"}},[a._v("#")]),a._v(" Chapter 11 스칼라의 계층구조")]),a._v(" "),s("p",[a._v("모든 클래스가 Any 의 서브클래스이기 때문에, Any 가 정의해둔 메서드는 모두 '보편적인' 메서드다.")]),a._v(" "),s("h3",{attrs:{id:"_11-1-스칼라의-클래스-계층구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-스칼라의-클래스-계층구조"}},[a._v("#")]),a._v(" 11.1 스칼라의 클래스 계층구조")]),a._v(" "),s("p",[s("img",{attrs:{src:"/img/A118.png",alt:"스칼라의 클래스 계층구조"}})]),a._v(" "),s("p",[a._v("계층의 최상위에는 Any 클래스가 있다.")]),a._v(" "),s("p",[a._v("루트 (root) 클래스 Any 에는 서브클래스가 둘 있는데, 바로 "),s("code",[a._v("AnyVal")]),a._v(" 과 "),s("code",[a._v("AnyRef")]),a._v(" 다.")]),a._v(" "),s("ul",[s("li",[a._v("AnyVal : 모든 스칼라값 클래스 (value class) 의 부모 클래스")]),a._v(" "),s("li",[a._v("AnyRef : 모든 스칼라의 참조 클래스 (reference class) 의 기반 클래스")])]),a._v(" "),s("p",[a._v("스칼라가 기본적으로 제공하는 값 클래스는 다음과 같다.")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Byte")]),a._v(", "),s("code",[a._v("Short")]),a._v(", "),s("code",[a._v("Char")]),a._v(", "),s("code",[a._v("Int")]),a._v(", "),s("code",[a._v("Long")]),a._v(", "),s("code",[a._v("Float")]),a._v(", "),s("code",[a._v("Double")]),a._v(", "),s("code",[a._v("Boolean")]),a._v(", "),s("code",[a._v("Unit")])])]),a._v(" "),s("p",[a._v("예를 들면 "),s("code",[a._v("42")]),a._v(" 는 "),s("code",[a._v("Int")]),a._v(" 의 인스턴스이고, "),s("code",[a._v("'x'")]),a._v(" 는 "),s("code",[a._v("Char")]),a._v(" 의 인스턴스이고, "),s("code",[a._v("false")]),a._v(" 는 "),s("code",[a._v("Boolean")]),a._v("의 인스턴스이다.")]),a._v(" "),s("p",[a._v("이 값 클래스는 "),s("code",[a._v("new")]),a._v(" 를 사용하여 인스턴스화 할 수 없다. 모든 값 클래스를 추상 클래스인 동시에 파이널 클래스 (final class) 로 만드는 기법을 사용하여 제약을 가했다.")]),a._v(" "),s("h3",{attrs:{id:"_11-2-여러-기본-클래스를-어떻게-구현했는가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-여러-기본-클래스를-어떻게-구현했는가"}},[a._v("#")]),a._v(" 11.2 여러 기본 클래스를 어떻게 구현했는가?")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Integer")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("421")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("421")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("위 자바 코드는 래퍼 (wrapper) 클래스에 대입된 값은 비교 연산자 (==, !=) 를 통하여 비교가 불가능하다.")]),a._v(" "),s("p",[s("code",[a._v("Integer")]),a._v(" 가 참조 타입이 아니기 때문에 언박싱하여 값을 비교해야 한다.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" def isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x: Int, y: Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" y\nisEqual: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x: Int, y:Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("Boolean\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("421")]),a._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("421")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nres10: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" def isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x: Any, y: Any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" y\nisEqual: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x: Any, y:Any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("Boolean\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("421")]),a._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("421")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nres11: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),s("p",[a._v("스칼라는 자바 코드와는 다르게 마땅히 그래야 하는 방식대로 동작된다.")]),a._v(" "),s("p",[a._v("하지만 사용자가 정의한 "),s("strong",[a._v("동일성")]),a._v(" 대신 "),s("strong",[a._v("참조 동일성")]),a._v("이 필요한 경우도 있다.")]),a._v(" "),s("p",[a._v("이러한 경우에는 해시 콘즈 (hash cons) 를 사용하고 싶을 경우가 있다. 참조 동일성을 사용하게 만들어둔 "),s("code",[a._v("eq")]),a._v(" 라는 메서드가 있다.")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" val x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" new String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nx: String "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" abc\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" val y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" new String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\ny: String "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" abc\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" y\nres13: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" x eq y\nres13: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" x ne y\nres13: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),s("p",[a._v("스칼라의 동일성에 대해서 30장에서 자세히 다룰것이다.")]),a._v(" "),s("h3",{attrs:{id:"_11-3-바닥에-있는-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-바닥에-있는-타입"}},[a._v("#")]),a._v(" 11.3 바닥에 있는 타입")]),a._v(" "),s("p",[s("code",[a._v("Nothing")]),a._v(" 타입은 스칼라 클래스 계층의 맨 밑바닥에 존재한다.")]),a._v(" "),s("p",[s("code",[a._v("Nothing")]),a._v(" 은 비정상적 종료를 표시하는것이다.")]),a._v(" "),s("p",[s("code",[a._v("Nothing")]),a._v(" 은 모든 타입의 서브타입이기 때문에, "),s("code",[a._v("error")]),a._v(" 와 같은 메서드를 다양한 곳에서 유연하게 사용가능하다.")]),a._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" divide"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" y\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"can\'t divide by zero"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("위 코드에서 반환 타입이 "),s("code",[a._v("Int")]),a._v(" 이지만 "),s("code",[a._v("Nothing")]),a._v(" 의 모든 타입의 서브타입이기 때문에 메서드의 반환타입에서 요구하는 대로 "),s("code",[a._v("Int")]),a._v(" 가 될 수 있다.")]),a._v(" "),s("h3",{attrs:{id:"_11-4-자신만의-값-클래스-정의"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-자신만의-값-클래스-정의"}},[a._v("#")]),a._v(" 11.4 자신만의 값 클래스 정의")]),a._v(" "),s("p",[a._v("값 클래스를 정의하고 싶으면 "),s("code",[a._v("AnyVal")]),a._v(" 의 서브클래스로 만들면 된다.")]),a._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" Dollars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" amount"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("AnyVal")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("override")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" toString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"$"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" amount\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"한-가지-타입만-남용하는-것을-막기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#한-가지-타입만-남용하는-것을-막기"}},[a._v("#")]),a._v(" 한 가지 타입만 남용하는 것을 막기")]),a._v(" "),s("p",[a._v("스칼라 클래스 계층을 가장 잘 활용하고 싶다면, 문제 영역에 잘 들어맞는 새로운 클래스를 정의하라.")]),a._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" Anchor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("AnyVal")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" Style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("AnyVal")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" Text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("AnyVal")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("val")]),a._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("AnyVal")]),a._v("\n")])])]),s("p",[a._v("위 같은 클래스가 있다면 좀 더 자세한 타입 시그니처를 갖는 title 함수를 만들 수 있다.")]),a._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" anchor"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Anchor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" style"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Html "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n    s"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"<a id='${anchor.value}'>\"")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" \n      s"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"<h1 class='${style.value}'>\"")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" \n        text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" \n        "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"</h1></a>"')]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h3",{attrs:{id:"_11-5-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-결론"}},[a._v("#")]),a._v(" 11.5 결론")]),a._v(" "),s("p",[a._v("다음 장에서 믹스인 (mix in) 합성을 이해할 준비가 되었다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);