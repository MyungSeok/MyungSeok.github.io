(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{450:function(a,t,s){"use strict";s.r(t);var n=s(1),e=Object(n.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"멀티-스레드-multi-thread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#멀티-스레드-multi-thread","aria-hidden":"true"}},[a._v("#")]),a._v(" 멀티 스레드 (Multi Thread)")]),a._v(" "),s("p",[a._v("Java 에서는 Multi Thread 환경을 만들어 사용하는 방법은 대표적으로 3가지 방법을 많이 사용한다.")]),a._v(" "),s("h2",{attrs:{id:"thread-class-를-상속받아-사용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thread-class-를-상속받아-사용","aria-hidden":"true"}},[a._v("#")]),a._v(" Thread Class 를 상속받아 사용")]),a._v(" "),s("p",[a._v("Thread Class 를 서브클래싱(subclassing) 하고 "),s("code",[a._v("run")]),a._v(" Method 를 "),s("code",[a._v("Override")]),a._v(" 한다.")]),a._v(" "),s("h3",{attrs:{id:"구현-순서"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#구현-순서","aria-hidden":"true"}},[a._v("#")]),a._v(" 구현 순서")]),a._v(" "),s("ol",[s("li",[a._v("Thread Class 를 상속 받아 내가 시킬 일을 해줄 Class 를 하나 만든다.")]),a._v(" "),s("li",[a._v("위에서 만든 Class 에 "),s("code",[a._v("run")]),a._v(" Method 안에 시킬 일을 정의해 준다.")]),a._v(" "),s("li",[a._v("메인 Thread 에서 위에서 만는 Class 의 "),s("code",[a._v("start")]),a._v(" Method 를 호출한다.")])]),a._v(" "),s("blockquote",[s("p",[a._v("반드시 "),s("code",[a._v("start")]),a._v(" 메소드로 실행을 해야 한다."),s("br"),a._v(" "),s("code",[a._v("run")]),a._v(" 메소드를 실행하면 메인 Thread 에서 돌아가므로 의미가 없다.")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AddThread")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Add Sum is %d\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AddThread")]),a._v(" at "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AddThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"runnable-인터페이스를-구현하여-사용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runnable-인터페이스를-구현하여-사용","aria-hidden":"true"}},[a._v("#")]),a._v(" Runnable 인터페이스를 구현하여 사용")]),a._v(" "),s("p",[s("code",[a._v("Runnable")]),a._v(" 인터페이스를 구현하고 "),s("code",[a._v("Runnable")]),a._v(" 객체를 Thread 생성자로 전달한다.")]),a._v(" "),s("h3",{attrs:{id:"구현순서"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#구현순서","aria-hidden":"true"}},[a._v("#")]),a._v(" 구현순서")]),a._v(" "),s("ol",[s("li",[a._v("우선 "),s("code",[a._v("Runnable")]),a._v(" Interface 를 구현할 Class 를 하나 생성한다.")]),a._v(" "),s("li",[a._v("위에서 만든 Class 의 "),s("code",[a._v("run")]),a._v(" Method 에 시킬 일을 정의한다.")]),a._v(" "),s("li",[a._v("해당 Class 를 생성하고 Thread 를 생성할 때 인자로 넣어서 생성한다.")]),a._v(" "),s("li",[a._v("메인 Thread에서 위에서 만든 Class 의 "),s("code",[a._v("start")]),a._v(" Method 를 호출한다.")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AddThreadRunnable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("implements")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+=")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Add Sum is Runnable %d\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" ar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AddThreadRunnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),a._v(" atr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\natr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("Thread 가 할 일을 "),s("code",[a._v("run")]),a._v(" Method 안에 넣으면 된다.")]),a._v(" "),s("p",[a._v("Single Thread 프로그램은 "),s("code",[a._v("main")]),a._v(" Method 가 반환되면 종료되고"),s("br"),a._v("\nMulti Thread 프로그램은 "),s("code",[a._v("run")]),a._v(" Method 의 실행이 끝나면 종료된다.")]),a._v(" "),s("h2",{attrs:{id:"future-callable-executor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#future-callable-executor","aria-hidden":"true"}},[a._v("#")]),a._v(" Future, Callable, Executor")]),a._v(" "),s("p",[a._v("Java 5 이상에서 지원하는 방식으로 Callback Pattern 으로 쉽게 사용 가능하도록 하는 접근 방법이다.")]),a._v(" "),s("p",[a._v("다양한 종류의 Thread 를 생성한 다음, 여러 Thread 로 부터 원하는 순서대로 값을 얻어올 수 있다.")]),a._v(" "),s("h3",{attrs:{id:"구현-순서-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#구현-순서-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 구현 순서")]),a._v(" "),s("ol",[s("li",[a._v("작업 대상의 "),s("code",[a._v("Callable")]),a._v(" 객체를 생성한 후 "),s("code",[a._v("ExecutorService")]),a._v(" 에 등록한다.")]),a._v(" "),s("li",[a._v("작업의 결과는 "),s("code",[a._v("Future")]),a._v(" 객체가 반환 받는다.")]),a._v(" "),s("li",[s("code",[a._v("Future")]),a._v(" 객체 사용 시 이미 결과가 준비 되어 있는 경우에는 즉시 사용하며, 그렇지 않는 경우에는 Polling Thread 는 준비가 될 때까지 Block 상태가 된다.")])]),a._v(" "),s("blockquote",[s("h3",{attrs:{id:"참고자료"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#참고자료","aria-hidden":"true"}},[a._v("#")]),a._v(" 참고자료")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://post.naver.com/viewer/postView.nhn?volumeNo=7852076&memberNo=30800755",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://post.naver.com/viewer/postView.nhn?volumeNo=7852076&memberNo=30800755"),s("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=e.exports}}]);