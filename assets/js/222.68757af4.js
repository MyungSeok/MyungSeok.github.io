(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{479:function(e,a,t){"use strict";t.r(a);var v=t(1),_=Object(v.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"front-end"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#front-end","aria-hidden":"true"}},[e._v("#")]),e._v(" Front-End")]),e._v(" "),t("h2",{attrs:{id:"html-inline-요소와-block-요소의-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-inline-요소와-block-요소의-차이점","aria-hidden":"true"}},[e._v("#")]),e._v(" HTML Inline 요소와 Block 요소의 차이점 ?")]),e._v(" "),t("ul",[t("li",[e._v("Inline 요소 : 브라우저에서 줄바꿈 없이 사용 가능한 엘리먼트 ("),t("code",[e._v("<td>")]),e._v(", "),t("code",[e._v("<b>")]),e._v(", "),t("code",[e._v("<a>")]),e._v(" ...)")]),e._v(" "),t("li",[e._v("Block 요소 : 브라우저에서 줄바끔 요소가 적용된 엘리먼트 ("),t("code",[e._v("<h>")]),e._v(", "),t("code",[e._v("<p>")]),e._v(", "),t("code",[e._v("<ul>")]),e._v(", "),t("code",[e._v("<li>")]),e._v(" ...)")])]),e._v(" "),t("h2",{attrs:{id:"시맨틱-구조적-마크업"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#시맨틱-구조적-마크업","aria-hidden":"true"}},[e._v("#")]),e._v(" 시맨틱 / 구조적 마크업")]),e._v(" "),t("ul",[t("li",[e._v("검색엔진을 통하여 검색이 문서검색 혹은 크롤링이 가능하게 접근성을 높인 마크업")])]),e._v(" "),t("h2",{attrs:{id:"css-selector-에서-body-div-와-body-div-의-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-selector-에서-body-div-와-body-div-의-차이점","aria-hidden":"true"}},[e._v("#")]),e._v(" CSS Selector 에서 "),t("code",[e._v("body > div")]),e._v(" 와 "),t("code",[e._v("body div")]),e._v(" 의 차이점 ?")]),e._v(" "),t("ul",[t("li",[e._v("body > div : 상위 노드가 body 태그를 가지는 div 태그")]),e._v(" "),t("li",[e._v("body div : 상위 노드들 중에 body 태그를 가지는 div 태그")])]),e._v(" "),t("h2",{attrs:{id:"css-position-중에-static-relative-absolute-fixed-의-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-position-중에-static-relative-absolute-fixed-의-차이점","aria-hidden":"true"}},[e._v("#")]),e._v(" CSS Position 중에 "),t("code",[e._v("static")]),e._v(", "),t("code",[e._v("relative")]),e._v(", "),t("code",[e._v("absolute")]),e._v(", "),t("code",[e._v("fixed")]),e._v(" 의 차이점")]),e._v(" "),t("ul",[t("li",[e._v("static : 포지션 설정을 하지 않았을 때 static")]),e._v(" "),t("li",[e._v("relative : 상대적인 위치정보를 지정할때 사용")]),e._v(" "),t("li",[e._v("absolute : 절대적인 위치정보를 지정할때 사용")]),e._v(" "),t("li",[e._v("fixed : 고정된 위치정보를 지정할때 사용")])]),e._v(" "),t("h2",{attrs:{id:"reset-css-란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reset-css-란","aria-hidden":"true"}},[e._v("#")]),e._v(" Reset CSS 란 ?")]),e._v(" "),t("ul",[t("li",[e._v("브라한저와 상관 없이 같은 모양을 나타내도록 CSS 를 초기화 하는것을 말함")]),e._v(" "),t("li",[e._v("normalize css 라는 것과 유사하지만 강제로 초기화 시키는 reset css 와는 다르게 브라우저별 차이를 보이는 부분만 혹은 디자인적인 요소를 가미해서 reset 를 해준다는 차이점이 있다.")])]),e._v(" "),t("h2",{attrs:{id:"css-box-model-에-대해-설명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css-box-model-에-대해-설명","aria-hidden":"true"}},[e._v("#")]),e._v(" CSS BOX MODEL 에 대해 설명")]),e._v(" "),t("ul",[t("li",[e._v("Margin, Border, Padding, Width & Height 등을 그림을 그려서 설명")])]),e._v(" "),t("h2",{attrs:{id:"ir-기법이란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ir-기법이란","aria-hidden":"true"}},[e._v("#")]),e._v(" IR 기법이란 ?")]),e._v(" "),t("ul",[t("li",[e._v("이미지를 대체할 엘리먼트를 배경 이미지로 설정하고 "),t("code",[e._v("<span>")]),e._v(" 태그와 같은것으로 감싸면서 안보이게 처리")])]),e._v(" "),t("h2",{attrs:{id:"자바스크립트에서-null-과-undefined-차이점은"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트에서-null-과-undefined-차이점은","aria-hidden":"true"}},[e._v("#")]),e._v(" 자바스크립트에서 null 과 undefined 차이점은 ?")]),e._v(" "),t("ul",[t("li",[e._v("null 은 값이 "),t("code",[e._v("null")]),e._v(" 이 할당된 것")]),e._v(" "),t("li",[e._v("undefined 는 아무런 값이 할당되지 않는것")]),e._v(" "),t("li",[t("code",[e._v("typeof")]),e._v(" 로 확인해보면 "),t("code",[e._v("null")]),e._v(" 은 "),t("code",[e._v("object")]),e._v(" 로 확인되며 "),t("code",[e._v("undefined")]),e._v(" 는 "),t("code",[e._v("undefined")]),e._v(" 로 확인 가능")])]),e._v(" "),t("h2",{attrs:{id:"와-의-차이점은"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#와-의-차이점은","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("code",[e._v("==")]),e._v(" 와 "),t("code",[e._v("===")]),e._v(" 의 차이점은 ?")]),e._v(" "),t("ul",[t("li",[e._v("값만 같다 혹은 타입까지 같다의 차이점이다.")]),e._v(" "),t("li",[t("code",[e._v("==")]),e._v(" 인 경우 자바스크립트에서는 타입이 같도록 형변환 과정을 거친후 값을 비교한다.")]),e._v(" "),t("li",[e._v("자바스크립트는 type safe 한 언어가 아니기 때문에 이러한 차이점이 있다. (java 는 type safe 한 언어임)")])]),e._v(" "),t("h2",{attrs:{id:"hoisting-이란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hoisting-이란","aria-hidden":"true"}},[e._v("#")]),e._v(" Hoisting 이란 ?")]),e._v(" "),t("ul",[t("li",[e._v("함수의 선언과 변수의 선언이 해당 유효범위 상위로 옮겨지며 변수는 "),t("code",[e._v("undefined")]),e._v(" 를 기본값으로 갖는 현상")]),e._v(" "),t("li",[e._v("함수의 표현식은 해당되지 않으며 같은 변수명과 함수명이 있을경우 변수명이 우선순위가 높아짐")]),e._v(" "),t("li",[e._v("ES6 에서도 호이스팅이 지원안되는것이 정설이지만 TDZ 관점에서 없다고 봐도 무관하기 때문이다.")])]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[e._v("임의적 사각지대 (TDZ : Temporal Dead Zone)")]),e._v(" "),t("p",[e._v("초기화 (선언) 가 되지 않는 객체들을 참조 할 수 없다."),t("br"),e._v("\n호이스팅이 되지 않는것은 아님 - ES5 처럼 "),t("code",[e._v("undefined")]),e._v(" 로 선 할당이 안됨")])]),e._v(" "),t("h2",{attrs:{id:"dom-event-model-에서-bubbling-과-capturing-의-차이점은"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-event-model-에서-bubbling-과-capturing-의-차이점은","aria-hidden":"true"}},[e._v("#")]),e._v(" DOM Event Model 에서 Bubbling 과 Capturing 의 차이점은 ?")]),e._v(" "),t("ul",[t("li",[e._v("Bubbling : 자식노드 이벤트가 일어났을 경우 부모까지 이벤트가 전파되는 현상")]),e._v(" "),t("li",[e._v("Capturing : 부모에서 자식으로 이벤트가 전달되는 현상")]),e._v(" "),t("li",[e._v("DOM Delegation 으로 이어서 설명해야 함")])]),e._v(" "),t("h2",{attrs:{id:"dom-delegation-이란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom-delegation-이란","aria-hidden":"true"}},[e._v("#")]),e._v(" DOM Delegation 이란 ?")]),e._v(" "),t("ul",[t("li",[e._v("Event Bubbling 이나 Capturing 이 일어날때 성능적인 이슈가 일어나거나 혹은 새로 추가되는 요쇼의 이벤트 바인딩이 주기적으로 필요할 경우 사용하는 이벤트 위임 방법이다.")]),e._v(" "),t("li",[e._v("이벤트 타겟의 부모에 이벤트를 걸어준 뒤 발생되는 이벤트 타입과 셀렉터를 체크하여 제어하는 식이다.")])]),e._v(" "),t("h2",{attrs:{id:"웹-성능-튜닝시-사용하는-도구는"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#웹-성능-튜닝시-사용하는-도구는","aria-hidden":"true"}},[e._v("#")]),e._v(" 웹 성능 튜닝시 사용하는 도구는 ?")]),e._v(" "),t("ul",[t("li",[e._v("브라우저의 디버깅 도구, Google Pagespeed Insight, webpagetest.org dynatrace, showslow 등등을 활용")])]),e._v(" "),t("h2",{attrs:{id:"ajax-사용시-타겟의-url-도메인이-다른-경우-해결-방법"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ajax-사용시-타겟의-url-도메인이-다른-경우-해결-방법","aria-hidden":"true"}},[e._v("#")]),e._v(" Ajax 사용시 타겟의 URL 도메인이 다른 경우 해결 방법 ?")]),e._v(" "),t("ul",[t("li",[e._v("JSONP, CORS 등을 이용하여 해결")]),e._v(" "),t("li",[e._v("JSONP : DOM 트리에 추가되면 외부 스크립트를 로드할 수 있는것에서 착안하여 사용\n"),t("ul",[t("li",[e._v("동일 출처 정책 (SOP : Same Origin Policy) 에 포함되지 않음")])])])]),e._v(" "),t("h2",{attrs:{id:"최근-frontend-동향-라이브러리-프레임워크-스팩-기능-들의-관심있는-분야"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#최근-frontend-동향-라이브러리-프레임워크-스팩-기능-들의-관심있는-분야","aria-hidden":"true"}},[e._v("#")]),e._v(" 최근 FrontEnd 동향 / 라이브러리 / 프레임워크 / 스팩 / 기능 들의 관심있는 분야?")]),e._v(" "),t("ul",[t("li",[e._v("vue > React > 템플릿 리터럴즈 (유인동) 이라고 보고 있다 (19/02)")]),e._v(" "),t("li",[e._v("바닐라 JS 를 좋아하기 때문에 ...")])]),e._v(" "),t("h2",{attrs:{id:"다음-상황을-구현하기-위한-방법을-서술하시요"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#다음-상황을-구현하기-위한-방법을-서술하시요","aria-hidden":"true"}},[e._v("#")]),e._v(" 다음 상황을 구현하기 위한 방법을 서술하시요")]),e._v(" "),t("div",{staticClass:"language-md extra-class"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[e._v("온라인 이메일 웹서비스를 구현한다고 가정하자. 이 페이지에는 리프레시 버튼이 하나 있는데, 이 버튼을 누르면 페이지를 다시 로딩하지 않고 새로 도착한 메일을 가져와 화면에 표시해주는 기능을 수행하여야 한다. 이를 어떻게 구현해야하는지 최대한 상세히 설명하시오. 서버측 구현은 이미 다 되어있다고 가정한다.\n")])])]),t("ul",[t("li",[e._v("DOM Event 처리 동작, DOM 조작, XHR 또는 JSONP / CORS 등등과 같은 내용들을 덧붙여 설명한다.")])]),e._v(" "),t("h2",{attrs:{id:"웹-접근성이란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#웹-접근성이란","aria-hidden":"true"}},[e._v("#")]),e._v(" 웹 접근성이란 ?")]),e._v(" "),t("ul",[t("li",[e._v("기본적인 웹 표준 준수 및 접근성에 대한 내용을 설명")]),e._v(" "),t("li",[e._v("시각 장애인들을 위한 TTS 나 약시, 색약, 지체 장애인들에 대한 대응\n"),t("ul",[t("li",[e._v("바로가기링크")]),e._v(" "),t("li",[e._v("명도대비 준수")]),e._v(" "),t("li",[e._v("깜빡임 빈도")]),e._v(" "),t("li",[e._v("클릭영역의 크기")])])]),e._v(" "),t("li",[t("code",[e._v("alt")]),e._v(" 대체 텍스트와 같은 기능적인 것들을 포함")])]),e._v(" "),t("h2",{attrs:{id:"json-과-jsonp-의-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#json-과-jsonp-의-차이점","aria-hidden":"true"}},[e._v("#")]),e._v(" JSON 과 JSONP 의 차이점 ?")]),e._v(" "),t("ul",[t("li",[e._v("JSON 은 Java String Object Notation 으로 데이터를 구조화된 데이터를 표현하기 위한 객체이며")]),e._v(" "),t("li",[e._v("JSONP 는 Ajax 에서 CORS 이슈 발생시 우회 방법으로 사용하는 통신 방식이다.")])]),e._v(" "),t("h2",{attrs:{id:"자바스크립트의-scope-chain-에-대해서-설명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트의-scope-chain-에-대해서-설명","aria-hidden":"true"}},[e._v("#")]),e._v(" 자바스크립트의 Scope Chain 에 대해서 설명")]),e._v(" "),t("ul",[t("li",[e._v("변수가 접근 가능한 유효범위를 말한다.")]),e._v(" "),t("li",[e._v("함수단위로 유효범위가 변하며 내부 함수로 진입시 새로운 스코프가 Stack 형태로 구성된다.")]),e._v(" "),t("li",[e._v("Scope Chain 은 하위에서 상위로 등록된 변수가 있는지 확인한다.")])]),e._v(" "),t("h2",{attrs:{id:"자바스크립트의-클로져란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트의-클로져란","aria-hidden":"true"}},[e._v("#")]),e._v(" 자바스크립트의 클로져란 ?")]),e._v(" "),t("ul",[t("li",[e._v("유효범위를 가지는 코드 블럭")]),e._v(" "),t("li",[e._v("상위의 스코프로 변수참조가 일어나는것을 말한다.")])]),e._v(" "),t("h2",{attrs:{id:"모듈-패턴에-대해서-설명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#모듈-패턴에-대해서-설명","aria-hidden":"true"}},[e._v("#")]),e._v(" 모듈 패턴에 대해서 설명")]),e._v(" "),t("ul",[t("li",[e._v("코드를 모듈화 시켜 변수의 범위를 제한하는 패턴")]),e._v(" "),t("li",[t("code",[e._v("public")]),e._v(" 과 "),t("code",[e._v("private")]),e._v(" 한 유효범위를 가질 수 있다.")])]),e._v(" "),t("h2",{attrs:{id:"브라우저-랜더링-과정을-설명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#브라우저-랜더링-과정을-설명","aria-hidden":"true"}},[e._v("#")]),e._v(" 브라우저 랜더링 과정을 설명")]),e._v(" "),t("ul",[t("li",[e._v("HTTP Request > (서버) > HTTP Response > HTML 파싱 > CSS / JS Request > 파싱 > DOM 트리 > 렌더트리 > 페인트")])]),e._v(" "),t("h2",{attrs:{id:"다음-상황에-대해-설명하시오"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#다음-상황에-대해-설명하시오","aria-hidden":"true"}},[e._v("#")]),e._v(" 다음 상황에 대해 설명하시오")]),e._v(" "),t("div",{staticClass:"language-md extra-class"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[e._v("서버는 응답을 빠르게 출력하고 있지만 웹 페이지가 늦게 뜨고 있다.\n웹 사이트를 최적화 하기 위한 방법은 ?\n")])])]),t("ul",[t("li",[e._v("서버 Request 횟수")]),e._v(" "),t("li",[e._v("CSS / JS 를 minify 하여 사용")]),e._v(" "),t("li",[e._v("gzip 전송")]),e._v(" "),t("li",[e._v("이미지 최적화 및 Lazy 로딩 사용")]),e._v(" "),t("li",[e._v("CDN 사용")]),e._v(" "),t("li",[e._v("JS 파일은 async / defer 사용")]),e._v(" "),t("li",[e._v("랜더링 최적화")]),e._v(" "),t("li",[e._v("마크업 복잡도를 단순화")]),e._v(" "),t("li",[e._v("reflow 혹은 repaint 최소화")])]),e._v(" "),t("h2",{attrs:{id:"다양한-크기의-화면-대응-및-멀티-플렛폼에-대한-대응-방안"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#다양한-크기의-화면-대응-및-멀티-플렛폼에-대한-대응-방안","aria-hidden":"true"}},[e._v("#")]),e._v(" 다양한 크기의 화면 대응 및 멀티 플렛폼에 대한 대응 방안 ?")]),e._v(" "),t("ul",[t("li",[e._v("각 디바이스별 최적화를 위한 방법들")]),e._v(" "),t("li",[e._v("반응형 디자인을 위한 미디어 쿼리를 사용")])]),e._v(" "),t("h2",{attrs:{id:"es5-es6-의-차이점은"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es5-es6-의-차이점은","aria-hidden":"true"}},[e._v("#")]),e._v(" ES5 / ES6 의 차이점은 ?")]),e._v(" "),t("ul",[t("li",[e._v("const, let")]),e._v(" "),t("li",[e._v("promise")]),e._v(" "),t("li",[e._v("spread operator")]),e._v(" "),t("li",[e._v("rest parameter")])]),e._v(" "),t("h2",{attrs:{id:"screenx-pagex-clientx-offsetx-layerx-의-차이점은"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#screenx-pagex-clientx-offsetx-layerx-의-차이점은","aria-hidden":"true"}},[e._v("#")]),e._v(" screenX, pageX, clientX, offsetX, layerX 의 차이점은 ?")]),e._v(" "),t("ul",[t("li",[e._v("screenX : 모니터 기준")]),e._v(" "),t("li",[e._v("pageX : document 기준")]),e._v(" "),t("li",[e._v("clientX & offsetX : 브라우저 기준")]),e._v(" "),t("li",[e._v("offsetX : 타겟 기준")])]),e._v(" "),t("h2",{attrs:{id:"서버로부터-받은-응답은-잘-받은-상태지만-웹-페이지가-비정상-적으로-렌더링-되어-있다고-가정하면-어떤-문제가-있을까"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#서버로부터-받은-응답은-잘-받은-상태지만-웹-페이지가-비정상-적으로-렌더링-되어-있다고-가정하면-어떤-문제가-있을까","aria-hidden":"true"}},[e._v("#")]),e._v(" 서버로부터 받은 응답은 잘 받은 상태지만 웹 페이지가 비정상 적으로 렌더링 되어 있다고 가정하면 어떤 문제가 있을까 ?")]),e._v(" "),t("ul",[t("li",[e._v("JS 오류")]),e._v(" "),t("li",[e._v("무한루프")]),e._v(" "),t("li",[e._v("문법")]),e._v(" "),t("li",[e._v("비 정상 접근")]),e._v(" "),t("li",[e._v("서버 응답 오류")]),e._v(" "),t("li",[e._v("DOM 파싱 오류")]),e._v(" "),t("li",[e._v("닫는 태그의 오류")]),e._v(" "),t("li",[e._v("문서모드 및 메타태그 정보 오류")]),e._v(" "),t("li",[e._v("페이지 인코딩")])]),e._v(" "),t("h2",{attrs:{id:"queryselector-와-jquery-selector-의-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#queryselector-와-jquery-selector-의-차이점","aria-hidden":"true"}},[e._v("#")]),e._v(" querySelector 와 jQuery Selector 의 차이점 ?")]),e._v(" "),t("ul",[t("li",[e._v("querySelector : 반환이 1개")]),e._v(" "),t("li",[e._v("jQuery Selector : 반환값이 여러개 복수 (querySelectorAll 과 같음)")]),e._v(" "),t("li",[e._v("querySelector 에서는 "),t("code",[e._v("class")]),e._v(" 로 많이 사용을 안하고 "),t("code",[e._v("attribute")]),e._v(" 로만 사용 (성능적인 측면 때문에 / data 속성이 제일 빠름)")])]),e._v(" "),t("h2",{attrs:{id:"자바스크립트에서-iteration-method-에-대해서-설명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트에서-iteration-method-에-대해서-설명","aria-hidden":"true"}},[e._v("#")]),e._v(" 자바스크립트에서 Iteration Method 에 대해서 설명")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Symbol.Iterator")]),e._v(" 속성을 갖는 객체를 Iterable 한 객체라고 한다.")]),e._v(" "),t("li",[e._v("Array.Prototype.forEach : 모든 엘리먼트를 callback 에 넘겨 실행")]),e._v(" "),t("li",[e._v("Array.Prototype.map : 인자로 넘겨진 엘리먼트를 새로운 배열로 리턴")]),e._v(" "),t("li",[e._v("Array.Prototype.filter : 조건에 맞는 값들로 새로운 배열로 리턴")])]),e._v(" "),t("h2",{attrs:{id:"자바스크립트에서-var-를-사용하지-않으면-발생되는-현상"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트에서-var-를-사용하지-않으면-발생되는-현상","aria-hidden":"true"}},[e._v("#")]),e._v(" 자바스크립트에서 var 를 사용하지 않으면 발생되는 현상 ?")]),e._v(" "),t("ul",[t("li",[e._v("전역 프로퍼티로 등록 된다.")]),e._v(" "),t("li",[t("code",[e._v("use strict")]),e._v(" (엄격모드) 구문을 사용하여 방지 가능하며 eslint 를 사용하면 동일한 효과")]),e._v(" "),t("li",[e._v("가장 큰 차이점은 삭제가 가능하다는 점")])]),e._v(" "),t("h2",{attrs:{id:"restful-개발시-http-method-를-설명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#restful-개발시-http-method-를-설명","aria-hidden":"true"}},[e._v("#")]),e._v(" RESTful 개발시 HTTP Method 를 설명")]),e._v(" "),t("ul",[t("li",[e._v("POST : 리소스를 생성")]),e._v(" "),t("li",[e._v("GET : 리소스를 요청")]),e._v(" "),t("li",[e._v("PUT & PATCH : 리소스를 변경")]),e._v(" "),t("li",[e._v("DELETE : 리소스를 삭제")])]),e._v(" "),t("h2",{attrs:{id:"그래픽-처리시에-백터와-비트맵의-차이점"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#그래픽-처리시에-백터와-비트맵의-차이점","aria-hidden":"true"}},[e._v("#")]),e._v(" 그래픽 처리시에 백터와 비트맵의 차이점")]),e._v(" "),t("ul",[t("li",[e._v("Vector : 방향기반 (SVG)")]),e._v(" "),t("li",[e._v("Bitmap : 화소기반 (Canvas)")])]),e._v(" "),t("h2",{attrs:{id:"spa-에서의-뒤로가기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spa-에서의-뒤로가기","aria-hidden":"true"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://blog.outsider.ne.kr/1276",target:"_blank",rel:"noopener noreferrer"}},[e._v("SPA 에서의 뒤로가기"),t("OutboundLink")],1)]),e._v(" "),t("ul",[t("li",[e._v("앵커나 해시뱅 (#!) 를 통한 히스토리 조작")]),e._v(" "),t("li",[t("code",[e._v("pushState")]),e._v(" 를 이용한 히스토리 조작 방법")])]),e._v(" "),t("h2",{attrs:{id:"promise-란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-란","aria-hidden":"true"}},[e._v("#")]),e._v(" Promise 란 ?")]),e._v(" "),t("ul",[t("li",[e._v("비동기로 작업을 순차적으로 처리하기 위한 패턴")]),e._v(" "),t("li",[t("code",[e._v("then")]),e._v(" "),t("code",[e._v("then")]),e._v(" 구문으로 사용")])]),e._v(" "),t("h2",{attrs:{id:"점진적-향상법-vs-우아한-성능-저하법"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#점진적-향상법-vs-우아한-성능-저하법","aria-hidden":"true"}},[e._v("#")]),e._v(" 점진적 향상법 vs 우아한 성능 저하법")]),e._v(" "),t("ul",[t("li",[e._v("점진적 향상법 (Progressive Enhancement)\n"),t("ul",[t("li",[e._v("노력과 시간으로 기능을 향상시키는 방법")]),e._v(" "),t("li",[e._v("기초부터 차곡차곡 발전해 나가는 방법이다.")]),e._v(" "),t("li",[e._v("웹 페이지를 구성할때\n"),t("ol",[t("li",[e._v("HTML 로 마크업을 구성한다.")]),e._v(" "),t("li",[e._v("CSS 로 스타일을 입힌다.")]),e._v(" "),t("li",[e._v("Javascript 로 사용자 경험(UX) 을 향상시킨다.")])])])])]),e._v(" "),t("li",[e._v("우아한 성능 저하법 (Graceful Degradation)\n"),t("ul",[t("li",[e._v("최신 기술을 환경기반으로 설계 및 개발을 완료하고 레거시한 한경에서 동작하기 위해 유사한 기능을 만들어 동작하게 하는것")]),e._v(" "),t("li",[e._v("각 환경 사용자들을 위해서 별도의 버전 혹은 우회할 수 있도록 기능을 제공한다.\n"),t("ol",[t("li",[e._v("IE11 기준으로만 개발 완료")]),e._v(" "),t("li",[e._v("IE10 으로 사용자 접속")]),e._v(" "),t("li",[t("code",[e._v("IE11 브라우저를 사용해주세요")]),e._v(" 라고 하는 메세지를 노출하여 IE11 로의 접근을 유도")])])])])])])])},[],!1,null,null,null);a.default=_.exports}}]);