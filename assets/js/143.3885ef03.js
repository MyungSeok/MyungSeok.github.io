(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{483:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"chapter-3-재사용성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-3-재사용성","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 3 재사용성")]),t._v(" "),s("p",[t._v("재사용성은 그만큼의 힘이 있는 만큼 굉장히 위험할 수도 있다.")]),t._v(" "),s("blockquote",[s("p",[t._v("A 와 B에서 공통 부분을 추출한다면, 이후에 공통 부분을 수정할 일이 있을때 한꺼번에 수정할 수 있다.\n하지만 A를 대상으로 수정한것이 B에서 문제가 될 수 있고, 그 반대로 B를 대상으로 수정한 것이 A에서 문제가 될 수 있다.")])]),t._v(" "),s("p",[t._v("재사용성을 고려하는 일은 생각보다 어렵고, 다양한 오류를 발생시킬 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"item-19-knowledge-를-반복하여-사용하지-말라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-19-knowledge-를-반복하여-사용하지-말라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 19 knowledge 를 반복하여 사용하지 말라")]),t._v(" "),s("blockquote",[s("p",[t._v("프로젝트에서 이미 있던 코드를 복사/붙여넣기 하고 있다면, 무언가가 잘못된 것이다.")])]),t._v(" "),s("h3",{attrs:{id:"knowledge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#knowledge","aria-hidden":"true"}},[t._v("#")]),t._v(" knowledge")]),t._v(" "),s("p",[t._v("프로그래밍에서는 knowledge는 넓은 의미로 '의도적인 정보'를 뜻함")]),t._v(" "),s("p",[t._v("우리가 사용하는 프로그램에서 knowledge 를 뽑는다면 다음 두가지로 나뉠수 있음")]),t._v(" "),s("ul",[s("li",[t._v("로직(logic): 프로그램이 어떠한 식으로 동작하는지 프로그램이 어떻게 보이는지")]),t._v(" "),s("li",[t._v("공통 알고리즘(common algorithm): 원하는 동작을 하기 위한 알고리즘")])]),t._v(" "),s("p",[t._v("위 둘의 가장 큰 차이점은 시간에 따른 변화이다.")]),t._v(" "),s("p",[s("strong",[t._v("비지니스 로직")]),t._v("은 시간이 지나면서 계속 변하지만, "),s("strong",[t._v("공통 알고리즘")]),t._v("은 한번 정의된 이후에는 크게 변하지 않는다.")]),t._v(" "),s("h3",{attrs:{id:"모든-것은-변화한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#모든-것은-변화한다","aria-hidden":"true"}},[t._v("#")]),t._v(" 모든 것은 변화한다")]),t._v(" "),s("p",[t._v("프로그램에서 유일하게 유지되는 것은 '변화한다는 속성' 이다.")]),t._v(" "),s("p",[t._v("오늘날의 대부분의 프로젝트는 몇 달마다 요구 사항과 내부적인 구조를 계쏙해서 변경한다.")]),t._v(" "),s("p",[t._v("모든것은 변화하고 우리는 이에 대비해야 한다. 변화할 때 가장 큰 적은 knowledge가 반복되어 있는 부분이다.")]),t._v(" "),s("h4",{attrs:{id:"버튼-디자인의-변경-건"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#버튼-디자인의-변경-건","aria-hidden":"true"}},[t._v("#")]),t._v(" 버튼 디자인의 변경 건")]),t._v(" "),s("blockquote",[s("p",[t._v("프로젝트 여러 곳에서 사용되고 있는 범용적인 버튼이 있다.\n그래픽 디자이너가 이 버튼 모양으로 변경해야 한다고 결정하였다.\n이 버튼모양이 적용된 모든 부분을 하나하나 수정해야 한다.\n또한 적용 과정에 실수한 부분을 찾기 위해 테스터에게 테스트를 요청해야 한다.")])]),t._v(" "),s("h4",{attrs:{id:"데이터베이스-테이블-이름-변경-건"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#데이터베이스-테이블-이름-변경-건","aria-hidden":"true"}},[t._v("#")]),t._v(" 데이터베이스 테이블 이름 변경 건")]),t._v(" "),s("blockquote",[s("p",[t._v("데이터베이스를 사용하는 프로젝트에서 테이블 이름을 변경해야 한다\n이 테이블에 의존하고 있는 모든 SQL구문을 변경이 필요하다\n혹시나 한 부서에서 이를 놓치고 있다면 매우 위험할 수 있다.")])]),t._v(" "),s("p",[t._v("knowledge 반복이 얼마나 위험하고 문제가 있는지 알 수 있다.\nknowledge 반복은 확장성(scalable)을 막고, 쉽게 깨지게(fragile) 만든다.")]),t._v(" "),s("p",[t._v("개발자는 knowledge 반 복을 줄일 수 있는 도구와 기능들을 활용해야 한다.")]),t._v(" "),s("p",[t._v("ORM(Object Relational Mapping), DAO(Data Access Object) 를 활용하는 방법이 있다.")]),t._v(" "),s("p",[t._v("여러 추상화를 표현할 수 있는 수많은 솔루션이 있으며 이를 활용하면 반복을 줄일 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"언제-코드를-반복해도-될까"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#언제-코드를-반복해도-될까","aria-hidden":"true"}},[t._v("#")]),t._v(" 언제 코드를 반복해도 될까?")]),t._v(" "),s("p",[t._v("knowledge 를 추출하여 반복을 제거하는 경우, 올바르지(신중하지) 못한 추출은 변경을 더 어렵게 만든다.")]),t._v(" "),s("p",[t._v("비지니스 규칙이 다른 곳(source) 에서 왔는지 확인하는 방법이 있다.\n다른곳에서 왔다면, 독립적으로 변경될 가능성이 높다.")]),t._v(" "),s("p",[t._v("단일 책임 원칙 (SRP: Single Responsibility Principle)을 활용하면 잘못된 코드 추출로 부터 보호할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"단일-책임-원칙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#단일-책임-원칙","aria-hidden":"true"}},[t._v("#")]),t._v(" 단일 책임 원칙")]),t._v(" "),s("p",[t._v("단일 책임 원칙이란 '클래스를 변경하는 이유는 단 한가지여야 한다(A class should have only one reason to change)'")]),t._v(" "),s("p",[t._v("단일 책임이 알려주는 두가지 사실은 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("서로 다른 곳에서 사용하는 knowledge는 독립적으로 변경할 가능성이 많다."),s("br"),t._v("비슷한 처리를 하더라도, 완전히 다른 knowledge로 취급하는 것이 좋다.")]),t._v(" "),s("li",[t._v("다른 knowledge로 분리해두는 것이 좋다."),s("br"),t._v("그렇지 않으면, 재사용해서 안되는 부분을 재사용하려는 유혹(위험)이 발생할 수 있다.")])]),t._v(" "),s("h3",{attrs:{id:"정리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("모든것은 변화한다. 공통 knowledge가 있다면, 이를 추출해서 이러한 변화에 대비해야 한다.")]),t._v(" "),s("p",[t._v("여러 요소에 비슷한 부분이 있는 경우, 변경이 필요할때 실수가 발행할 수 있는 부분은 추출하는것이 좋다.")]),t._v(" "),s("p",[t._v("의도하지 않는 수정을 피하려면, 혹은 다른곳에서 조작하는 부분이 있다면 분리해서 사용하는 것이 좋다.")]),t._v(" "),s("h2",{attrs:{id:"item-20-일반적인-알고리즘을-반복해서-구현하지-말라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-20-일반적인-알고리즘을-반복해서-구현하지-말라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 20 일반적인 알고리즘을 반복해서 구현하지 말라")]),t._v(" "),s("p",[t._v("이미 있는 라이브러리 혹은 알고리즘을 활용하면 다음과 같은 이점이 있다.")]),t._v(" "),s("ul",[s("li",[t._v("코드 작성이 빨라진다."),s("br"),t._v(" 호출을 한번 하는것이 알고리즘을 만드는 시간 대비 빠르다.")]),t._v(" "),s("li",[t._v("구현을 따로 하지 않아도, 함수의 이름을 보고 무엇을 하는지 확실하게 알 수 있다.")]),t._v(" "),s("li",[t._v("직접 구현할 때 발생할 수 잇는 실수를 줄일수 있다.")]),t._v(" "),s("li",[t._v("한번의 최적화로 이를 사용하는 모든 함수에서 동일한 최적화 혜택을 받을 수 있다.")])]),t._v(" "),s("h3",{attrs:{id:"표준-라이브러리-살펴보기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#표준-라이브러리-살펴보기","aria-hidden":"true"}},[t._v("#")]),t._v(" 표준 라이브러리 살펴보기")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveCallResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SourceResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sourceList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ArrayList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SourceEntity"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sources"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sourceEntity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SourceEntity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sourceEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n    sourceEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category\n    sourceEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country\n    sourceEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description\n    sourceEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위 형태보다는 팩토리 메서드를 활용하거나, 기본 생성자를 활용하는 것이 좋다.")]),t._v(" "),s("p",[t._v("그래도 써야 겠다면 "),s("code",[t._v(".apply")]),t._v(" 로 활용해서 모든 단일 객체들의 프로퍼티를 암묵적으로 설정하는 것이 좋다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveCallResult")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SourceResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" srouceEntries "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sources"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("sourceToEntry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertSources")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("srouceEntries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sourceToEntry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SourceEntity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n    category "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category\n    country "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country\n    description "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"나만의-유틸리티-구현하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#나만의-유틸리티-구현하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 나만의 유틸리티 구현하기")]),t._v(" "),s("p",[t._v("동일한 결과를 얻는 함수를 여러 번 만드는 것은 잘못된 일이다.")]),t._v(" "),s("p",[t._v("모든 함수는 테스트되어야 하고, 기억되어야 하며, 유지보수되어야 한다.")]),t._v(" "),s("p",[t._v("필요없는 함수를 중복해서 만들지 않게, 기존에 관련된 함수가 있는지 탐색하는 과정이 필요하다.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("확장함수 (Extension Function)")]),t._v(" "),s("p",[t._v("클래스를 확장하면서 새로운 함수들을 마치 외부 라이브러리 클래스가 제공하는 원래 함수인 것 마냥 사용할 수 있다.")]),t._v(" "),s("ul",[s("li",[t._v("수취인 타입(receiver type) : 확장 함수를 추가할 클래스")]),t._v(" "),s("li",[t._v("수취인 객체(receiver object) : 확장 함수 내부를 구현할 때 receiver type 이 가지고 있는 인스턴스에 접근한 객체")])]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Int"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fold")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" acc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" acc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("확장함수를 이용하여 만든 코드는 정적 바인딩이 된다.")])]),t._v(" "),s("p",[t._v("확장함수의 이점은 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("함수는 상태를 유지하지 않으므로, 행위를 나타내기 좋다."),s("br"),t._v("특히 부수 효과(side-effect) 없는 경우 더 좋다.")]),t._v(" "),s("li",[t._v("확장함수는 구체적인 타입이 잇는 객체에만 사용을 제한할 수 있으므로 좋다.")]),t._v(" "),s("li",[t._v("수정할 객체를 아규먼트로 전달받아 사용하는 것보다는 확장 리시버로 사용하는 것이 가독성 측면에서 좋다.")]),t._v(" "),s("li",[t._v("확장 함수는 객체에 정의한 함수보다 객체를 사용할 때, 자동 완성 기능등으로 제안이 이루어지므로 쉽게 찾을 수 있다.")])]),t._v(" "),s("h3",{attrs:{id:"정리-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("일반적인 알고리즘을 반복해서 만들지 말라.")]),t._v(" "),s("p",[t._v("특정 알고리즘을 반복해서 사용해야 하는 경우에는 프로젝트 내부에 정의하라. 이러한 코드는 확장 함수로 정의하는 것이 좋다.")]),t._v(" "),s("h2",{attrs:{id:"item-21-일반적인-프로퍼티-패턴은-프로퍼티-위임으로-만들어라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-21-일반적인-프로퍼티-패턴은-프로퍼티-위임으로-만들어라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 21 일반적인 프로퍼티 패턴은 프로퍼티 위임으로 만들어라")]),t._v(" "),s("p",[t._v("코틀린에서는 코드 재사용과 관련해서 프로퍼티 위임기능을 제공한다.")]),t._v(" "),s("p",[t._v("프로퍼티 위임을 사용하면 일반적인 프로퍼티의 행위를 추출해서 재사용할 수 있다.")]),t._v(" "),s("p",[t._v("프로퍼티 위임은 클래스 위임과 비슷하게 프로퍼티 값의 "),s("code",[t._v("get")]),t._v("/"),s("code",[t._v("set")]),t._v(" 위임을 사용할 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("by")]),t._v(" 키워드를 이용하여 위임할 객체를 프로퍼티 뒤에 명시한다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("KProperty\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PropertyDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisRef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" get value "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisRef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" set value "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" -> "),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$newValue")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Person "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PropertyDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PropertyDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"31"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person name is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person name is no name")]),t._v("\n\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jin"')]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person name is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person name is jin")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person age is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person age is 31")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("코틀린의 "),s("code",[t._v("stdlib")]),t._v("는 lazy 프로퍼티 패턴을 쉽게 구현할 수 있게 lazy 함수를 제공한다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPostListFromServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Post"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get big data from server"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Post\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Board")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Post"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" lazy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPostListFromServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" board "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Board")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazy init board list :: '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("board"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lazy init board list :: [Post@a09ee92]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"board list :: '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("board"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// board list :: [Post@a09ee92]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get big data from server")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lazy init board list :: [Post@2f4d3709]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// board list :: [Post@2f4d3709]")]),t._v("\n")])])]),s("p",[t._v("프로퍼티 위임을 사용하면, 이외의 변화가 있을 때 이를 감지하는 observable 패턴을 쉽게 만들 수 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" items"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Item"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" \n  Delegates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyDataSetChanged")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" \n  Delegates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    Log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key changed from '),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$old")]),t._v(" to "),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$new")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("혹은 일정 조건을 만족하지 못하면 값 할당을 제한하는 거부권(vetoable)을 행사할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delegates\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Person "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 200살 이상은 값 오류로 판단 값 셋팅을 거부한다.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Delegates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vetoable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        newValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person age is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person age is 31")]),t._v("\n\n    person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),t._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 거부됨")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person age is '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person age is 31")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("코틀린 "),s("code",[t._v("stdlib")]),t._v(" 에서 다음과 같은 프로퍼티 델리게이터를 알아두면 좋다.")]),t._v(" "),s("ul",[s("li",[t._v("lazy")]),t._v(" "),s("li",[t._v("Delegates.observable")]),t._v(" "),s("li",[t._v("Delegates.vetoable")]),t._v(" "),s("li",[t._v("Delegates.notNull")])]),t._v(" "),s("h3",{attrs:{id:"정리-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("프로퍼티 델리게이트는 프로퍼티와 관련된 다양한 조작을 할 수 있으며, 컨텍스트와 관련된 대부분의 ㅈ니다.")]),t._v(" "),s("p",[t._v("이러한 특징을 이용해서 다양한 프로퍼티의 동작을 추출해서 재사용할 수 있다.")]),t._v(" "),s("p",[t._v("이를 잘 활용하면 일반적인 패턴을 추출하거나 더 좋은 API 를 만들 때 활용할 수 있다.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://jinn-blog.tistory.com/27",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jinn-blog.tistory.com/27"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"item-22-일반적인-알고리즘을-구현할-때-제네릭을-사용하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-22-일반적인-알고리즘을-구현할-때-제네릭을-사용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 22 일반적인 알고리즘을 구현할 때 제네릭을 사용하라")]),t._v(" "),s("h3",{attrs:{id:"제네릭-제한"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#제네릭-제한","aria-hidden":"true"}},[t._v("#")]),t._v(" 제네릭 제한")]),t._v(" "),s("p",[t._v("타입 파라미터의 중요한 기능 중 하나는 구체적인 타입의 서브타입만 사용하게 타입을 제한하는 기능이다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Compareable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sorted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MutableCollection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toCollection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("destination"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" C "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" ListAdapter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ItemAdapter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("타입에 제한이 걸리므로, 내부에서 해당 타입이 제공하는 메서드를 사용할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"정리-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-4","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("코틀린 자료형 시스템에서 타입 파라미터는 굉장히 중요한 부분이다.")]),t._v(" "),s("p",[t._v("일반적으로 이를 사용해서 type-safe 제네릭 알고리즘과 제네릭 객체를 구현한다.")]),t._v(" "),s("p",[t._v("또한 타입 파라미터는 구체 자료형(concrete type)의 서브타입을 제한할 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"item-23-타입-파라미터의-섀도잉을-피하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-23-타입-파라미터의-섀도잉을-피하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 23 타입 파라미터의 섀도잉을 피하라")]),t._v(" "),s("p",[t._v("아래 코드 처럼 프로퍼티와 파라미터가 같은 이름을 가질 수 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Forest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addTree")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위와 같은 코드에서 외부에 있는 프로퍼티가 지역 파라미터에 의해 가려지게 되는데 이를 섀도잉(shadowing) 이라 부른다.")]),t._v(" "),s("h3",{attrs:{id:"정리-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-5","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("타입 파라미터의 섀도잉은 이해하기도 어렵기 때문에 반드시 피해야 한다.")]),t._v(" "),s("h2",{attrs:{id:"item-24-제네릭-타입과-variance-한정자를-활용하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-24-제네릭-타입과-variance-한정자를-활용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 24 제네릭 타입과 variance 한정자를 활용하라.")]),t._v(" "),s("p",[t._v("다음과 같은 코드가 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Cup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("여기서 타입 파라미터 "),s("code",[t._v("T")]),t._v(" 는 "),s("code",[t._v("variance")]),t._v(" 한정자(in 혹은 out)가 없으므로 invariant(불공변) 타입이다.")]),t._v(" "),s("p",[t._v("invariant 타입은 제네릭 타입으로 만들어지는 타입들이 서로 관련이 없다.")]),t._v(" "),s("p",[t._v("만약 어떠한 관련성을 원한다면 variance 한정자를 붙이며 "),s("code",[t._v("out")]),t._v(" 은 타입 파라미터를 covariant(공변성) 타입으로 만든다.")]),t._v(" "),s("p",[s("code",[t._v("in")]),t._v(" 은 타입 파라미터를 contravariant(반공변)으로 만든다.")]),t._v(" "),s("p",[s("a",{attrs:{href:"/backend/language/java/essential/generic/pecs"}},[t._v("PECS")]),t._v(" 가 이 성격을 따른다.")]),t._v(" "),s("h3",{attrs:{id:"함수-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#함수-타입","aria-hidden":"true"}},[t._v("#")]),t._v(" 함수 타입")]),t._v(" "),s("p",[t._v("파라미터 유형과 리턴타입에 따라 서로 어떠한 관계를 갖는다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A135.png",alt:"코틀린의 계층구조"}})]),t._v(" "),s("p",[t._v("위 그림에서 계층 구조의 아래로 가면, 타이핑 시스템 계층에서 파라미터 타입이 더 높은 타입으로 이동하고, 리턴 타입은 계층 구조의 더 낮은 타입으로 이동한다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A134.png",alt:"코틀린의 타입계층"}})]),t._v(" "),s("p",[t._v("코틀린의 함수 타입의 모든 파라미터 타입은 contravariant 이다.")]),t._v(" "),s("p",[t._v("모든 리턴 타입은 covariant 이다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A133.png",alt:"코틀린의 in/out"}})]),t._v(" "),s("h3",{attrs:{id:"variance-한정자의-안정성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variance-한정자의-안정성","aria-hidden":"true"}},[t._v("#")]),t._v(" variance 한정자의 안정성")]),t._v(" "),s("p",[t._v("자바의 배열은 covariant 이다.")]),t._v(" "),s("p",[t._v("다음 코드는 컴파일은 되나 런타임때 에러가 난다.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" numbers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" objects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" numbers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Runtime Exception")]),t._v("\n")])])]),s("p",[t._v("코틀린에서는 위와 같은 코드 결함을 해소하기 위해 Array(IntArray, CharArray 등)를 invariant 로 만들었다.")]),t._v(" "),s("p",[t._v("파라미터 타입을 예측할 수 있다면, 어떤 서브타입이라도 전달할 수 있다.")]),t._v(" "),s("p",[t._v("아래와 같이 아규먼트를 전달할 때, 암묵적으로 업캐스팅 할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Dog\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Puppy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Hound"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeDog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dog"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Dog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeDog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeDog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Puppy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeDog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("아래와 같은 상황은 안전하지 않다.")]),t._v(" "),s("p",[t._v("캐스팅 후 실질적인 객체가 그대로 유지되고, 타이핑 시스템에서만 다르게 처리되기 때문이다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 코틀린에서 불가능한 코드")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value not set"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" puppyBox "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Puppy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" dogBox"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dog"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" puppyBox\ndogBox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Hound")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Puppy 만 가능")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" dogHouse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dog"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dogHouse\nbox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some string"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dog 만 가능")]),t._v("\nbox"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dog 만 가능")]),t._v("\n")])])]),s("h3",{attrs:{id:"variance-한정자-위치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variance-한정자-위치","aria-hidden":"true"}},[t._v("#")]),t._v(" variance 한정자 위치")]),t._v(" "),s("p",[t._v("varinace 한정자는 크게 두 위치에 사용할 수 있다.")]),t._v(" "),s("p",[t._v("첫번째는 선언부로 일반적으로 이 위치에 사용된다.")]),t._v(" "),s("p",[t._v("이는 클래스와 인터페이스가 사용되는 모든곳에 영향을 준다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" boxStr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Box")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Str"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" boxAny"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" boxStr\n")])])]),s("p",[t._v("두번째는 클래스와 이터페이스를 활용하는 위치이다.")]),t._v(" "),s("p",[t._v("이 위치에 variance 한정자를 사용하면 특정한 변수에만 variance 한정자가 적용된다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" boxStr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Box")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Str"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" boxAny"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Box"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" boxStr\n")])])]),s("h3",{attrs:{id:"정리-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-6","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("ul",[s("li",[t._v("타입 파라미터의 기본적인 동작은 invariant 타입이다.")]),t._v(" "),s("li",[t._v("in 한정자는 타입 파라미터를 covariant 하게 만든다.")]),t._v(" "),s("li",[t._v("out 한정자는 타입 파라미터를 contravariant 하게 만든다.")]),t._v(" "),s("li",[s("code",[t._v("List")]),t._v("와 "),s("code",[t._v("Set")]),t._v("의 타입 파라미터는 covariant(out 한정자)이고, "),s("code",[t._v("Array")]),t._v(", "),s("code",[t._v("MutableList")]),t._v(", "),s("code",[t._v("MutableSet")]),t._v(", "),s("code",[t._v("MutableMap")]),t._v(" 타입 파라미터는 invariant(무공변) 이다.")]),t._v(" "),s("li",[t._v("함수 타입의 파라미터 타입은 contravariant(in 한정자) 타입이고 리턴 타입은 covariant(out 한정자)타입이다.")])]),t._v(" "),s("h2",{attrs:{id:"item-25-공통-모듈을-추출해서-여러-플랫폼에서-재사용하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-25-공통-모듈을-추출해서-여러-플랫폼에서-재사용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 25 공통 모듈을 추출해서 여러 플랫폼에서 재사용하라")]),t._v(" "),s("p",[t._v("TL;DR - 공통 모듈을 재사용하자")])])},[],!1,null,null,null);a.default=e.exports}}]);