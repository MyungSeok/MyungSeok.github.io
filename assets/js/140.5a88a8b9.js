(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{359:function(e,r,t){"use strict";t.r(r);var v=t(1),a=Object(v.a)({},function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"dispatcher-servlet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dispatcher-servlet","aria-hidden":"true"}},[e._v("#")]),e._v(" Dispatcher Servlet")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("MVC (Model, View, Controller)")])]),e._v(" 구조로 구성되어 있는 "),t("code",[e._v("Spring Framework")]),e._v(" 내에 원활한 처리를 위한 과정이다.")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/A014.png",alt:'"Dispatcher Servlet"'}})]),e._v(" "),t("h2",{attrs:{id:"동작-구성"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#동작-구성","aria-hidden":"true"}},[e._v("#")]),e._v(" 동작 구성")]),e._v(" "),t("ol",[t("li",[e._v("클라이언트가 요청한 정보를 최초에 "),t("code",[e._v("DispatcherServlet")]),e._v(" 에서 가로챈다.\n"),t("ul",[t("li",[t("code",[e._v("web.xml")]),e._v(" 에 등록되어 있는 "),t("code",[e._v("DispatcherServlet")]),e._v(" 의 "),t("code",[e._v("<url-pattern>")]),e._v(" 이 "),t("code",[e._v("'/'")]),e._v(" 로 등록 되어 모든 URL 패턴에 동작 되기 때문이다.")]),e._v(" "),t("li",[e._v("특정 URL 에만 적용이 필요하면 "),t("code",[e._v("<url-pattern>")]),e._v(" 내용의 범위만 바꿔주면 된다.")])])]),e._v(" "),t("li",[e._v("가로챈 정보를 "),t("code",[e._v("HandlerMapping")]),e._v(" 에게 보내 해당 요청을 처리할 수 있는 "),t("code",[e._v("Controller")]),e._v(" 를 찾아낸다.")]),e._v(" "),t("li",[e._v("요청을 처리할 "),t("code",[e._v("Controller")]),e._v(" 를 찾아 냈으면 해당 "),t("code",[e._v("Controller")]),e._v(" 에게 해당 요청 정보를 보내준다.")]),e._v(" "),t("li",[t("code",[e._v("Controller")]),e._v(" 는 해당 요청 내용을 처리 후 요청을 응답 받을 "),t("code",[e._v("View")]),e._v(" 의 이름을 리턴하게 된다.\n"),t("ul",[t("li",[e._v("실제로 응답전에 "),t("code",[e._v("View Resolver")]),e._v(" 가 미리 응답할 내용을 분석하여 해당 "),t("code",[e._v("View")]),e._v(" 이름을 검색 한다.")])])]),e._v(" "),t("li",[e._v("해당 "),t("code",[e._v("View")]),e._v(" 가 있다면 처리 결과를 "),t("code",[e._v("View")]),e._v(" 에 보낸후 이 결과를 다시 "),t("code",[e._v("DispatcherServlet")]),e._v(" 에 보낸다.")]),e._v(" "),t("li",[t("code",[e._v("DispatcherServlet")]),e._v(" 은 받은 정보를 최종적으로 클라이언트에 전송하게 된다.")])]),e._v(" "),t("div",{staticClass:"language-mermaid extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  sequenceDiagram\n    Client ->> + Dispatcher Servlet : URL 로 접근하여 정보를 요청\n    Dispatcher Servlet ->> + Handler Mapping : 해당 요청을 매핑한 컨틀롤러가 있는지 검색\n    Handler Mapping ->> + Controller : 처리요청\n    Controller ->> - Dispatcher Servlet : 클라이언트의 요청을 처리후, 결과의 View 이름을 리턴\n    Dispatcher Servlet ->> + View Resolver : 컨트롤러에서 보내온 View 이름으로 검색\n    View Resolver ->> + View : 처리결과를 View 에 전달\n    View ->> - Dispatcher Servlet : 처리결과가 포함된 View 를 Dispatcher Servlet 에 전달\n    Dispatcher Servlet ->> - Client : 최종결과 출력\n")])])]),t("blockquote",[t("h3",{attrs:{id:"참고자료"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#참고자료","aria-hidden":"true"}},[e._v("#")]),e._v(" 참고자료")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://egloos.zum.com/springmvc/v/504151",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://egloos.zum.com/springmvc/v/504151"),t("OutboundLink")],1)])])])},[],!1,null,null,null);r.default=a.exports}}]);