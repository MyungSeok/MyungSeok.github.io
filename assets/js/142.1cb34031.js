(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{470:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"chapter-2-가독성"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-2-가독성","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 2 가독성")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("마틴 파울러(Martin Flowler), <리펙터링>")]),s("br"),t._v("\n컴퓨터가 인식할 수 있는 코드는 바보라도 작성할 수 있지만, "),s("br"),t._v("인간이 이해할 수 있는 코드는 실력 있는 프로그래머만 작성할 수 있다.")])]),t._v(" "),s("p",[t._v("코틀린은 간결성을 목표로 설계된 프로그래밍 언어가 아니라, 가독성(readability)을 좋게 하는 데 목표를 두고 설계된 프로그래밍 언어이다.")]),t._v(" "),s("p",[t._v("코틀린을 사용하면 깨끗하고 의미 있는 코드와 API를 쉽게 작성할 수 있다.")]),t._v(" "),s("p",[t._v("코틀린은 우리가 원하는 것을 숨기거나 강조할 수 있게 하는 기능을 많이 제공한다.")]),t._v(" "),s("h2",{attrs:{id:"item-11-가독성을-목표로-설계하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-11-가독성을-목표로-설계하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 11 가독성을 목표로 설계하라")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("로버트 C 마틴(Robert C. Martin)")]),s("br"),t._v("\n개발자가 코드를 작성하는 데는 1분 걸리지만,"),s("br"),t._v(" 이를 읽는데는 10분이 걸린다.")])]),t._v(" "),s("p",[t._v("프로그래밍은 쓰기보다 읽기가 더 중요하다.")]),t._v(" "),s("h3",{attrs:{id:"인식-부하-감소"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#인식-부하-감소","aria-hidden":"true"}},[t._v("#")]),t._v(" 인식 부하 감소")]),t._v(" "),s("p",[t._v("가독성은 사람에 따라 다르게 느낄 수 있다.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("인지부하(cognitive load)")]),t._v(" "),s("p",[t._v("학습이나 과제 해결 과정에서 인지적 요구량이 요구된다."),s("br"),t._v("\n어떤 정보가 학습되기 위해서는 동작상의 기억 안에서 정보가 처리되어야 하는데"),s("br"),t._v("\n이는 동작상 기억이 처리해 낼 수 있는 정보의 양보다 처리해야 할 정보가 많으면 문제가 생기며,"),s("br"),t._v("\n이 때 인지부하가 발생한다.")])]),t._v(" "),s("h4",{attrs:{id:"code-a"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-a","aria-hidden":"true"}},[t._v("#")]),t._v(" Code A")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("div",{staticClass:"highlight-lines"},[s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isAdult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showPerson")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"code-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-b","aria-hidden":"true"}},[t._v("#")]),t._v(" Code B")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeIf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" it"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isAdult "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("let")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("showPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?:")]),t._v(" view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("Code A")]),t._v(" 가 "),s("code",[t._v("Code B")]),t._v(" 보다 읽기 쉬운 이유")]),t._v(" "),s("ul",[s("li",[t._v("일반적인 관용구(if/else, &&, 메서드 호출)을 사용하고 있다.")]),t._v(" "),s("li",[t._v("코틀링에서 사용중인 관용구(안전호출 "),s("code",[t._v("?.")]),t._v(", "),s("code",[t._v("takeIf")]),t._v(", let, Elvis 연산자, 함수 레퍼런스) 등을 사용함으로써 코틀린 숙련자들만을 위한 코드이다.")]),t._v(" "),s("li",[s("code",[t._v("Code A")]),t._v(" 가 구현을 이해하는것이 쉽고, 수정 및 디버깅이 쉽다.")])]),t._v(" "),s("p",[t._v("위 두 코드는 동작상 실행 결과도 다르다.("),s("code",[t._v("Code B")]),t._v(" 는 showPerson 에서 "),s("code",[t._v("null")]),t._v(" 을 반환하면 "),s("code",[t._v("showError")]),t._v(" 를 호출한다.)")]),t._v(" "),s("p",[s("strong",[t._v("인지부하")]),t._v("를 줄이는 방향으로 코드를 작성하라.")]),t._v(" "),s("h3",{attrs:{id:"극단적이-되지-않기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#극단적이-되지-않기","aria-hidden":"true"}},[t._v("#")]),t._v(" 극단적이 되지 않기")]),t._v(" "),s("p",[t._v("가변 프로퍼티는 쓰레드와 관련된 문제를 발생시킬 수 있으므로, 스마트 캐스팅이 불가능하다.")]),t._v(" "),s("p",[t._v("이를 해결하기 위해서 안전호출("),s("code",[t._v("?.")]),t._v(") "),s("code",[t._v("let")]),t._v("을 사용한다. 이 외에도 "),s("code",[t._v("let")]),t._v("을 사용하는 경우는 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("연산을 아규먼트로 처리 후로 이동할 때")])]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("students"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinToString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("students"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinToString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("let")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("print"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("데코레이터를 사용해서 객체를 랩(포장)할 때")])]),t._v(" "),s("h3",{attrs:{id:"컨벤션"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#컨벤션","aria-hidden":"true"}},[t._v("#")]),t._v(" 컨벤션")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("invoke 함수")]),s("br"),t._v("\n이름 없이 간편하게 호출될 수 있는 함수")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Test "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wow"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위와 같이 "),s("code",[t._v("test.invoke(str)")]),t._v(" 로 사용해야 할 것 같지만,"),s("br"),t._v("이를 무시하고 "),s("code",[t._v("test(str)")]),t._v(" 로 사용 가능하듯이 이름을 생략할 수 있다.")])]),t._v(" "),s("p",[t._v("위와 같이 "),s("code",[t._v("test.invoke(str)")]),t._v(" 로 사용해야 할 것 같지만, 이를 무시하고 "),s("code",[t._v("test(str)")]),t._v(" 로 사용 가능하듯이 이름을 생략할 수 있다.\n:::")]),t._v(" "),s("ul",[s("li",[t._v("연산자는 의미에 맞게 사용해야 한다.")]),t._v(" "),s("li",[t._v("람다를 마지막 아규먼트로 사용한다.")])]),t._v(" "),s("h2",{attrs:{id:"item-12-연산자-오버로드를-할-때-의미에-맞게-사용하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-12-연산자-오버로드를-할-때-의미에-맞게-사용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 12 연산자 오버로드를 할 때 의미에 맞게 사용하라")]),t._v(" "),s("p",[t._v("코틀린에서는 다음과 같이 대응되는 연산자와 오버로딩을 지원한다.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("연산자")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("대응되는 함수")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("+a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.unaryPlus()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.unaryMinus()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("!a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.not()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("++a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.inc()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("--a")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.dec()")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a+b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.plus(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a-b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.minus(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a*b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.times(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a/b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.div(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a..b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.rangeTo(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a in b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("b.contains(a)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a+=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.plusAssign(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a-=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.minusAssign(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a*=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.timesAssign(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a/=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.divAssign(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a==b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.equals(b)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a>b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.compareTo(b)>0")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a<b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.compareTo(b)<0")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a>=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.compreTo(b)>=0")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("a<=b")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("a.compareTo(b)<=0")])])])]),t._v(" "),s("p",[t._v("팩토리얼을 계산하기 위해 ! 연산자를 사용하면 안된다. (관례에 어긋남)")]),t._v(" "),s("h3",{attrs:{id:"분명하지-않은-경우"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#분명하지-않은-경우","aria-hidden":"true"}},[t._v("#")]),t._v(" 분명하지 않은 경우")]),t._v(" "),s("p",[t._v("의미가 명확하지 않다면 "),s("code",[t._v("infix")]),t._v(" 를 활용한 확장함수를 사용하는 것이 좋다.")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("중위(infix) 함수")]),s("br"),t._v("\n두개의 변수 가운데 오는 함수")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("infix")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("other"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" other\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),t._v("\nSystem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HelloWorld")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("times")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" Unit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("operation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HelloHelloHello")]),t._v("\n")])])]),s("p",[t._v("함수가 관례를 충족할 지 아닌지 확실하지 않을 때는 "),s("code",[t._v("infix")]),t._v(" 함수로 사용하라")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("infix")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("timesRepeated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" Unit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("operation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" tripledHello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" timesRepeated "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tripledHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HelloHelloHello")]),t._v("\n")])])]),s("h3",{attrs:{id:"규칙을-무시해도-되는-경우"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#규칙을-무시해도-되는-경우","aria-hidden":"true"}},[t._v("#")]),t._v(" 규칙을 무시해도 되는 경우")]),t._v(" "),s("p",[t._v("도메인 특화 언어(Domain Specific Language, DSL)를 설계할 때는 사용해도 된다.")]),t._v(" "),s("h3",{attrs:{id:"정리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("연산자 오버로딩은 그 이름의 의미에 맞게 사용하라.\n연산자 의미가 명확하지 않다면, 연산자 오버로딩은 사용하지 않는 것이 좋다.")]),t._v(" "),s("p",[t._v("연산자의 형태로 사용하려면, "),s("code",[t._v("infix")]),t._v(" 확장 함수 또는 톱레벨 함수를 활용하라.")]),t._v(" "),s("h2",{attrs:{id:"item-13-unit-을-리턴하지-말라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-13-unit-을-리턴하지-말라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 13 Unit?을 리턴하지 말라")]),t._v(" "),s("p",[t._v("기본적으로 Unit? 을 리턴하거나, 이를 기반으로 연산하지 않는 것이 좋다.")]),t._v(" "),s("h2",{attrs:{id:"item-14-변수-타입이-명확하지-않은-경우-확실하게-지정하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-14-변수-타입이-명확하지-않은-경우-확실하게-지정하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 14 변수 타입이 명확하지 않은 경우 확실하게 지정하라")]),t._v(" "),s("p",[t._v("코틀린은 개발자가 타입을 지정하지 않아도, 타입을 지정해서 넣어 주는 굉장히 수준 높은 타입 추론 시스템을 갖추고 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Marcin"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" dis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("112")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("554")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("997")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("위와 같은 코드는 개발 시간을 줄여 줄 뿐만 아니라, 유형이 명확할 때 코드가 짧아지므로 코드의 가독성이 향상된다.")]),t._v(" "),s("p",[t._v("유형이 명확하지 않을 때는 남용하면 좋지 않다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSomeData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("가독성을 위해 코드를 설계할 때 읽는 사람에게 중요한 정보를 숨겨서는 안된다.")])]),t._v(" "),s("p",[t._v("가독성 향상 이외의 안전을 위해서도 타입을 지정하는 것이 좋다.")]),t._v(" "),s("h2",{attrs:{id:"item-15-리시버를-명시적으로-참조하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-15-리시버를-명시적으로-참조하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 15 리시버를 명시적으로 참조하라")]),t._v(" "),s("h3",{attrs:{id:"여러-개의-리시버"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#여러-개의-리시버","aria-hidden":"true"}},[t._v("#")]),t._v(" 여러 개의 리시버")]),t._v(" "),s("p",[t._v("스코프 내부의 둘 이상의 리시버가 잇는 경우, 명시적으로 나타내면 좋다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$name")]),t._v("."),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$childName")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Created '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parent"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Created parent")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("childName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$name")]),t._v("."),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$childName")]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Created '),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token label symbol"}},[t._v("@Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parent"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Created parent.child in parent")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("리시버를 명확하게 작성하면, 코드를 안전하게 사용할 수 있을 뿐만 아니라 가독성도 향상된다.")]),t._v(" "),s("h3",{attrs:{id:"dsl-마커"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dsl-마커","aria-hidden":"true"}},[t._v("#")]),t._v(" DSL 마커")]),t._v(" "),s("p",[t._v("DSL 마커는 가장 가까운 리시버만을 사용하거나, 명시적으로 외부 리시버를 사용하지 못하게 할 때 활용할 수 있는 굉장히 중요한 메커니즘이다.")]),t._v(" "),s("h3",{attrs:{id:"정리-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("여러개의 리시버가 있는 상황 등에서는 리시버를 명시적으로 적어 주는 것이 좋다.")]),t._v(" "),s("p",[t._v("리시버를 명시적으로 적게 강제하고 싶다면, "),s("code",[t._v("@DslMarker")]),t._v(" 메타 어노테이션을 사용한다.")]),t._v(" "),s("h2",{attrs:{id:"item-16-프로퍼티는-동작이-아니라-상태를-나타내야-한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-16-프로퍼티는-동작이-아니라-상태를-나타내야-한다","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 16 프로퍼티는 동작이 아니라 상태를 나타내야 한다.")]),t._v(" "),s("p",[t._v("기본적으로 프로퍼티는 사용자 정의 "),s("code",[t._v("Getter")]),t._v(" 와 "),s("code",[t._v("Setter")]),t._v(" 를 가질 수 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" field"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNullOrBlank")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위 코드의 "),s("code",[t._v("field")]),t._v(" 식별자는 프로퍼티의 데이터를 저장해 두는 백킹 필드(backing field) 에 대한 레퍼런스이다.")]),t._v(" "),s("p",[t._v("읽기 전용 프로퍼티는 "),s("code",[t._v("field")]),t._v(" 가 만들어지지 않는다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" fullName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$surname")]),t._v('"')]),t._v("\n")])])]),s("p",[s("code",[t._v("var")]),t._v(" 을 사용해서 만든 읽고 쓸 수 있는 프로퍼티는 게터와 세터를 정의할 수 있다.")]),t._v(" "),s("p",[t._v("이를 파생 프로퍼티(derived property) 라고 부른다.")]),t._v(" "),s("p",[t._v("원칙적으로 프로퍼티는 상태를 나타내거나 설정하기 위한 목적으로만 사용해야 하기 때문에 아래와 같이 다른 로직을 포함하지 않아야 한다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" Tree"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Int"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" Leaf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" value\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" Node "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sum\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("프로퍼티 대신 함수를 사용하는 것이 좋은 경우는 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("연산 비용이 높거나, 복잡도가 "),s("code",[t._v("O(1)")]),t._v(" 보다 큰 경우\n"),s("ul",[s("li",[t._v("함수를 활용하여 사용한다면 사용자가 연산비용을 예측하기 쉽고 이를 기반으로한 캐싱등을 고려할 수 있다.")])])]),t._v(" "),s("li",[t._v("비지니스 로직(애플리케이션의 동작) 을 포함하는 경우\n"),s("ul",[s("li",[t._v("프로퍼티는 단순 동작 이상을 수행할 것이라고 예상하지 않기 때문이다.")])])]),t._v(" "),s("li",[t._v("결정적이지 않은 경우\n"),s("ul",[s("li",[t._v("함수의 실행 시점에 다른 값을 나오는 경우")])])]),t._v(" "),s("li",[t._v("변환의 경우\n"),s("ul",[s("li",[t._v("해당 프로퍼티를 사용하는 사용자로 하여금 오해를 불러 일으킬 수 있다.")])])]),t._v(" "),s("li",[s("code",[t._v("Getter")]),t._v(" 에서 프로퍼티 상태의 변경이 일어나야 하는 경우\n"),s("ul",[s("li",[t._v("프로퍼티에서 상태변화를 일으키게 끔 기대하지 않는다")])])])]),t._v(" "),s("p",[t._v("프로퍼티는 상태 집합을 나타내고, 함수는 행동을 나타낸다.")]),t._v(" "),s("h2",{attrs:{id:"item-17-이름-있는-아규먼트를-사용하라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-17-이름-있는-아규먼트를-사용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 17 이름 있는 아규먼트를 사용하라")]),t._v(" "),s("p",[t._v("파라미터가 명확하지 않는 경우 이를 직접 지정해서 명확하게 만들어 줄 수 있다.")]),t._v(" "),s("p",[t._v("아래 코드처럼 이름 있는 아규먼트(named argument)를 사용하라")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinToString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("separator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"|"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("또한 다음과 같이 변수를 사용하여 의미를 명확히 할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" separator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"|"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("joinToString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("separator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"이름-있는-아규먼트는-언제-사용해야-할까"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#이름-있는-아규먼트는-언제-사용해야-할까","aria-hidden":"true"}},[t._v("#")]),t._v(" 이름 있는 아규먼트는 언제 사용해야 할까?")]),t._v(" "),s("p",[t._v("이름 있는 아규먼트를 사용하면 코드가 길어지지만, 다음과 같은 장점이 있다.")]),t._v(" "),s("ul",[s("li",[t._v("이름을 기반으로 값이 무엇을 나타내는지 알 수 있다.")]),t._v(" "),s("li",[t._v("파라미터 입력 순서와 상관 없으므로 안전하다.")])]),t._v(" "),s("p",[t._v("아래와 같이 "),s("code",[t._v("100")]),t._v(" 값의 의미가 모호하다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("이름있는 아규먼트 사용")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMillis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("함수로 시간단위를 표현")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Millis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("확장 프로퍼티로 DSL과 유사한 문법")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ms"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code")])]),s("p",[t._v("이름있는 아규먼트를 사용하는 경우")]),t._v(" "),s("ul",[s("li",[t._v("디폴트 아규먼트 경우")]),t._v(" "),s("li",[t._v("같은 타입의 파라미터가 많은 경우")]),t._v(" "),s("li",[t._v("함수 타입의 파라미터가 있는 경우")])]),t._v(" "),s("h3",{attrs:{id:"디폴트-아규먼트-경우"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#디폴트-아규먼트-경우","aria-hidden":"true"}},[t._v("#")]),t._v(" 디폴트 아규먼트 경우")]),t._v(" "),s("p",[t._v("프로퍼티가 디폴트 아규먼트를 가질 경우, 항상 이름을 붙여서 사용하는 것이 좋다.")]),t._v(" "),s("p",[t._v("함수 이름은 필수 파라미터들과 관련이 있으며, 디폴트 값을 갖는 옵션 파라미터 (optional parameter) 의 설명이 명확하지 않기 때문에, 이름을 붙여서 사용하는 것이 좋다.")]),t._v(" "),s("h3",{attrs:{id:"같은-타입의-파라미터가-많은-경우"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#같은-타입의-파라미터가-많은-경우","aria-hidden":"true"}},[t._v("#")]),t._v(" 같은 타입의 파라미터가 많은 경우")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendEmail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * other codes\n   **/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위와 같이 함수의 같은 데이터 타입의 파라미터를 사용할 경우 이름 있는 아규먼트를 사용하는 것이 좋다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendEmail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue.berry@kakaopaycorp.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, ..."')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"함수-타입-파라미터"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#함수-타입-파라미터","aria-hidden":"true"}},[t._v("#")]),t._v(" 함수 타입 파라미터")]),t._v(" "),s("p",[t._v("일반적으로 함수 타입 파라미터는 마지막 위치에 배치하는 것이 좋다.")]),t._v(" "),s("p",[t._v("함수 이름이 아규먼트를 설명해 주기도 한다.")]),t._v(" "),s("p",[t._v("다음과 같이 "),s("code",[t._v("repeat")]),t._v(" 인 경우 뒤에 오는 람다는 반복될 블럭을 나타낸다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("repeat "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * other codes\n   **/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("다음은 리엑티브 라이브러리에서 자주 볼 수 있는 형태이다.")]),t._v(" "),s("p",[t._v("RxJava 에서 Observable 를 구독할 때 함수를 설정한다.")]),t._v(" "),s("ul",[s("li",[t._v("각각의 아이템을 받을 때 (onNext)")]),t._v(" "),s("li",[t._v("오류가 발생했을 때 (onError)")]),t._v(" "),s("li",[t._v("전체가 완료되었을 때 (onComplete)")])]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("observable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getuser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribeBy")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    onNext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n       * other codes\n       **/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    onError "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" throwable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Throwable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n       * other codes\n       **/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    onCompleted "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n       * other codes\n       **/")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"정리-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#정리-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),s("p",[t._v("이름 있는 아규먼트는 개발자가 코드를 읽을 때도 편리하게 활용되며, 안정성도 향상시킬 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"item-18-코딩-컨벤션을-지켜라"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#item-18-코딩-컨벤션을-지켜라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 18 코딩 컨벤션을 지켜라")]),t._v(" "),s("p",[t._v("코딩컨벤션을 지키면 다음과 같은 이점이 있다.")]),t._v(" "),s("ul",[s("li",[t._v("어떤 프로젝트를 접해도 쉽게 이해할 수 있다.")]),t._v(" "),s("li",[t._v("다른 외부 개발자도 프로젝트의 코드를 쉽게 이해할 수 있다.")]),t._v(" "),s("li",[t._v("다른 개발자도 코드의 작동 방식을 쉽게 유추할 수 있다.")]),t._v(" "),s("li",[t._v("코드를 병합하고, 한 프로젝트의 코드 일부를 다른 코드로 이동하는 것이 쉽다.")])]),t._v(" "),s("p",[t._v("IDE 에서는 여러 플러그인을 통해서 이를 지원한다.")]),t._v(" "),s("ul",[s("li",[t._v("IntelliJ Formatter")]),t._v(" "),s("li",[t._v("ktlink")])]),t._v(" "),s("p",[t._v("많은 파라미터를 가지고 있는 경우에는 다음과 같이 한줄씩 작성하는 것을 권장한다.")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" surname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Human")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 본문")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("마치 한 개발자가 작성한 것과 같이 코딩 컨벤션을 준수하면 코드의 일관성있는 품질을 유지할 수 있다.")])])},[],!1,null,null,null);a.default=e.exports}}]);