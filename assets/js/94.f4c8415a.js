(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{331:function(t,e,a){"use strict";a.r(e);var r=a(1),s=Object(r.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chapter-10-예외"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chapter-10-예외","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 10 예외")]),t._v(" "),a("p",[t._v("예외를 제대로 활용한다면 프로그램의 가독성, 신뢰성, 유지보수성이 높아지지만 반대로 잘못 사용하면 반대의 효과만 나타난다.")]),t._v(" "),a("h2",{attrs:{id:"item-69-예외는-진짜-예외-상황에서만-사용하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item-69-예외는-진짜-예외-상황에서만-사용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 69 예외는 진짜 예외 상황에서만 사용하라")]),t._v(" "),a("p",[t._v("예외는 예외상황에서만 사용해야 하며 절대로 일상적인 제어 흐름용으로 쓰여서는 안된다.")]),t._v(" "),a("p",[t._v("예를 들면 일반적인 반복문의 경우 try-catch 문에 넣으면 JVM 이 적용 가능한 최적화가 제한된다. (성능이 2배이상 느림)")]),t._v(" "),a("p",[t._v("잘 설계된 API 라면 클라이언트가 정상적인 제어의 흐름에서 예외를 사용할 일이 없게 해야 한다.")]),t._v(" "),a("h2",{attrs:{id:"item-70-복구할-수-있는-상황에는-검사-예외를-프로그래밍-오류에는-런타임-예외를-사용하라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item-70-복구할-수-있는-상황에는-검사-예외를-프로그래밍-오류에는-런타임-예외를-사용하라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 70 복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라")]),t._v(" "),a("p",[t._v("자바는 문제 상황을 알리는 타입 (throwable) 으로 "),a("em",[a("strong",[t._v("검사 예외, 런타임 예외, 에러")])]),t._v(" 이렇게 세가지 유형을 제공한다.")])])},[],!1,null,null,null);e.default=s.exports}}]);