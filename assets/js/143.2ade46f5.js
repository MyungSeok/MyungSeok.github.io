(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{471:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chapter-3-재사용성"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chapter-3-재사용성","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 3 재사용성")]),t._v(" "),a("p",[t._v("재사용성은 그만큼의 힘이 있는 만큼 굉장히 위험할 수도 있다.")]),t._v(" "),a("blockquote",[a("p",[t._v("A 와 B에서 공통 부분을 추출한다면, 이후에 공통 부분을 수정할 일이 있을때 한꺼번에 수정할 수 있다.\n하지만 A를 대상으로 수정한것이 B에서 문제가 될 수 있고, 그 반대로 B를 대상으로 수정한 것이 A에서 문제가 될 수 있다.")])]),t._v(" "),a("p",[t._v("재사용성을 고려하는 일은 생각보다 어렵고, 다양한 오류를 발생시킬 수 있다.")]),t._v(" "),a("h2",{attrs:{id:"item-19-knowledge-를-반복하여-사용하지-말라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item-19-knowledge-를-반복하여-사용하지-말라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 19 knowledge 를 반복하여 사용하지 말라")]),t._v(" "),a("blockquote",[a("p",[t._v("프로젝트에서 이미 있던 코드를 복사/붙여넣기 하고 있다면, 무언가가 잘못된 것이다.")])]),t._v(" "),a("h3",{attrs:{id:"knowledge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#knowledge","aria-hidden":"true"}},[t._v("#")]),t._v(" knowledge")]),t._v(" "),a("p",[t._v("프로그래밍에서는 knowledge는 넓은 의미로 '의도적인 정보'를 뜻함")]),t._v(" "),a("p",[t._v("우리가 사용하는 프로그램에서 knowledge 를 뽑는다면 다음 두가지로 나뉠수 있음")]),t._v(" "),a("ul",[a("li",[t._v("로직(logic): 프로그램이 어떠한 식으로 동작하는지 프로그램이 어떻게 보이는지")]),t._v(" "),a("li",[t._v("공통 알고리즘(common algorithm): 원하는 동작을 하기 위한 알고리즘")])]),t._v(" "),a("p",[t._v("위 둘의 가장 큰 차이점은 시간에 따른 변화이다.")]),t._v(" "),a("p",[a("strong",[t._v("비지니스 로직")]),t._v("은 시간이 지나면서 계속 변하지만, "),a("strong",[t._v("공통 알고리즘")]),t._v("은 한번 정의된 이후에는 크게 변하지 않는다.")]),t._v(" "),a("h3",{attrs:{id:"모든-것은-변화한다"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#모든-것은-변화한다","aria-hidden":"true"}},[t._v("#")]),t._v(" 모든 것은 변화한다")]),t._v(" "),a("p",[t._v("프로그램에서 유일하게 유지되는 것은 '변화한다는 속성' 이다.")]),t._v(" "),a("p",[t._v("오늘날의 대부분의 프로젝트는 몇 달마다 요구 사항과 내부적인 구조를 계쏙해서 변경한다.")]),t._v(" "),a("p",[t._v("모든것은 변화하고 우리는 이에 대비해야 한다. 변화할 때 가장 큰 적은 knowledge가 반복되어 있는 부분이다.")]),t._v(" "),a("h4",{attrs:{id:"버튼-디자인의-변경-건"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#버튼-디자인의-변경-건","aria-hidden":"true"}},[t._v("#")]),t._v(" 버튼 디자인의 변경 건")]),t._v(" "),a("blockquote",[a("p",[t._v("프로젝트 여러 곳에서 사용되고 있는 범용적인 버튼이 있다.\n그래픽 디자이너가 이 버튼 모양으로 변경해야 한다고 결정하였다.\n이 버튼모양이 적용된 모든 부분을 하나하나 수정해야 한다.\n또한 적용 과정에 실수한 부분을 찾기 위해 테스터에게 테스트를 요청해야 한다.")])]),t._v(" "),a("h4",{attrs:{id:"데이터베이스-테이블-이름-변경-건"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#데이터베이스-테이블-이름-변경-건","aria-hidden":"true"}},[t._v("#")]),t._v(" 데이터베이스 테이블 이름 변경 건")]),t._v(" "),a("blockquote",[a("p",[t._v("데이터베이스를 사용하는 프로젝트에서 테이블 이름을 변경해야 한다\n이 테이블에 의존하고 있는 모든 SQL구문을 변경이 필요하다\n혹시나 한 부서에서 이를 놓치고 있다면 매우 위험할 수 있다.")])]),t._v(" "),a("p",[t._v("knowledge 반복이 얼마나 위험하고 문제가 있는지 알 수 있다.\nknowledge 반복은 확장성(scalable)을 막고, 쉽게 깨지게(fragile) 만든다.")]),t._v(" "),a("p",[t._v("개발자는 knowledge 반 복을 줄일 수 있는 도구와 기능들을 활용해야 한다.")]),t._v(" "),a("p",[t._v("ORM(Object Relational Mapping), DAO(Data Access Object) 를 활용하는 방법이 있다.")]),t._v(" "),a("p",[t._v("여러 추상화를 표현할 수 있는 수많은 솔루션이 있으며 이를 활용하면 반복을 줄일 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"언제-코드를-반복해도-될까"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#언제-코드를-반복해도-될까","aria-hidden":"true"}},[t._v("#")]),t._v(" 언제 코드를 반복해도 될까?")]),t._v(" "),a("p",[t._v("knowledge 를 추출하여 반복을 제거하는 경우, 올바르지(신중하지) 못한 추출은 변경을 더 어렵게 만든다.")]),t._v(" "),a("p",[t._v("비지니스 규칙이 다른 곳(source) 에서 왔는지 확인하는 방법이 있다.\n다른곳에서 왔다면, 독립적으로 변경될 가능성이 높다.")]),t._v(" "),a("p",[t._v("단일 책임 원칙 (SRP: Single Responsibility Principle)을 활용하면 잘못된 코드 추출로 부터 보호할 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"단일-책임-원칙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#단일-책임-원칙","aria-hidden":"true"}},[t._v("#")]),t._v(" 단일 책임 원칙")]),t._v(" "),a("p",[t._v("단일 책임 원칙이란 '클래스를 변경하는 이유는 단 한가지여야 한다(A class should have only one reason to change)'")]),t._v(" "),a("p",[t._v("단일 책임이 알려주는 두가지 사실은 다음과 같다.")]),t._v(" "),a("ul",[a("li",[t._v("서로 다른 곳에서 사용하는 knowledge는 독립적으로 변경할 가능성이 많다."),a("br"),t._v("비슷한 처리를 하더라도, 완전히 다른 knowledge로 취급하는 것이 좋다.")]),t._v(" "),a("li",[t._v("다른 knowledge로 분리해두는 것이 좋다."),a("br"),t._v("그렇지 않으면, 재사용해서 안되는 부분을 재사용하려는 유혹(위험)이 발생할 수 있다.")])]),t._v(" "),a("h3",{attrs:{id:"정리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정리","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),a("p",[t._v("모든것은 변화한다. 공통 knowledge가 있다면, 이를 추출해서 이러한 변화에 대비해야 한다.")]),t._v(" "),a("p",[t._v("여러 요소에 비슷한 부분이 있는 경우, 변경이 필요할때 실수가 발행할 수 있는 부분은 추출하는것이 좋다.")]),t._v(" "),a("p",[t._v("의도하지 않는 수정을 피하려면, 혹은 다른곳에서 조작하는 부분이 있다면 분리해서 사용하는 것이 좋다.")]),t._v(" "),a("h2",{attrs:{id:"item-20-일반적인-알고리즘을-반복해서-구현하지-말라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item-20-일반적인-알고리즘을-반복해서-구현하지-말라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 20 일반적인 알고리즘을 반복해서 구현하지 말라")]),t._v(" "),a("p",[t._v("이미 있는 라이브러리 혹은 알고리즘을 활용하면 다음과 같은 이점이 있다.")]),t._v(" "),a("ul",[a("li",[t._v("코드 작성이 빨라진다."),a("br"),t._v(" 호출을 한번 하는것이 알고리즘을 만드는 시간 대비 빠르다.")]),t._v(" "),a("li",[t._v("구현을 따로 하지 않아도, 함수의 이름을 보고 무엇을 하는지 확실하게 알 수 있다.")]),t._v(" "),a("li",[t._v("직접 구현할 때 발생할 수 잇는 실수를 줄일수 있다.")]),t._v(" "),a("li",[t._v("한번의 최적화로 이를 사용하는 모든 함수에서 동일한 최적화 혜택을 받을 수 있다.")])]),t._v(" "),a("h3",{attrs:{id:"표준-라이브러리-살펴보기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#표준-라이브러리-살펴보기","aria-hidden":"true"}},[t._v("#")]),t._v(" 표준 라이브러리 살펴보기")]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveCallResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SourceResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sourceList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ArrayList"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SourceEntity"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" sourceEntity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SourceEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sourceEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n    sourceEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category\n    sourceEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country\n    sourceEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" it"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description\n    sourceEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sourceEntity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("위 형태보다는 팩토리 메서드를 활용하거나, 기본 생성자를 활용하는 것이 좋다.")]),t._v(" "),a("p",[t._v("그래도 써야 겠다면 "),a("code",[t._v(".apply")]),t._v(" 로 활용해서 모든 단일 객체들의 프로퍼티를 암묵적으로 설정하는 것이 좋다.")]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveCallResult")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SourceResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" srouceEntries "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sources"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("sourceToEntry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertSources")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("srouceEntries"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sourceToEntry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SourceEntity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n    category "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category\n    country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("country\n    description "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("description\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"나만의-유틸리티-구현하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#나만의-유틸리티-구현하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 나만의 유틸리티 구현하기")]),t._v(" "),a("p",[t._v("동일한 결과를 얻는 함수를 여러 번 만드는 것은 잘못된 일이다.")]),t._v(" "),a("p",[t._v("모든 함수는 테스트되어야 하고, 기억되어야 하며, 유지보수되어야 한다.")]),t._v(" "),a("p",[t._v("필요없는 함수를 중복해서 만들지 않게, 기존에 관련된 함수가 있는지 탐색하는 과정이 필요하다.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("확장함수 (Extension Function)")]),t._v(" "),a("p",[t._v("클래스를 확장하면서 새로운 함수들을 마치 외부 라이브러리 클래스가 제공하는 원래 함수인 것 마냥 사용할 수 있다.")]),t._v(" "),a("ul",[a("li",[t._v("수취인 타입(receiver type) : 확장 함수를 추가할 클래스")]),t._v(" "),a("li",[t._v("수취인 객체(receiver object) : 확장 함수 내부를 구현할 때 receiver type 이 가지고 있는 인스턴스에 접근한 객체")])]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" Iterable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Int"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("product")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" acc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" acc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("확장함수를 이용하여 만든 코드는 정적 바인딩이 된다.")])]),t._v(" "),a("p",[t._v("확장함수의 이점은 다음과 같다.")]),t._v(" "),a("ul",[a("li",[t._v("함수는 상태를 유지하지 않으므로, 행위를 나타내기 좋다."),a("br"),t._v("특히 부수 효과(side-effect) 없는 경우 더 좋다.")]),t._v(" "),a("li",[t._v("확장함수는 구체적인 타입이 잇는 객체에만 사용을 제한할 수 있으므로 좋다.")]),t._v(" "),a("li",[t._v("수정할 객체를 아규먼트로 전달받아 사용하는 것보다는 확장 리시버로 사용하는 것이 가독성 측면에서 좋다.")]),t._v(" "),a("li",[t._v("확장 함수는 객체에 정의한 함수보다 객체를 사용할 때, 자동 완성 기능등으로 제안이 이루어지므로 쉽게 찾을 수 있다.")])]),t._v(" "),a("h3",{attrs:{id:"정리-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정리-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),a("p",[t._v("일반적인 알고리즘을 반복해서 만들지 말라.")]),t._v(" "),a("p",[t._v("특정 알고리즘을 반복해서 사용해야 하는 경우에는 프로젝트 내부에 정의하라. 이러한 코드는 확장 함수로 정의하는 것이 좋다.")]),t._v(" "),a("h2",{attrs:{id:"item-21-일반적인-프로퍼티-패턴은-프로퍼티-위임으로-만들어라"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#item-21-일반적인-프로퍼티-패턴은-프로퍼티-위임으로-만들어라","aria-hidden":"true"}},[t._v("#")]),t._v(" Item 21 일반적인 프로퍼티 패턴은 프로퍼티 위임으로 만들어라")]),t._v(" "),a("p",[t._v("코틀린에서는 코드 재사용과 관련해서 프로퍼티 위임기능을 제공한다.")]),t._v(" "),a("p",[t._v("프로퍼티 위임을 사용하면 일반적인 프로퍼티의 행위를 추출해서 재사용할 수 있다.")]),t._v(" "),a("p",[t._v("프로퍼티 위임은 클래스 위임과 비슷하게 프로퍼티 값의 "),a("code",[t._v("get")]),t._v("/"),a("code",[t._v("set")]),t._v(" 위임을 사용할 수 있다.")]),t._v(" "),a("p",[a("code",[t._v("by")]),t._v(" 키워드를 이용하여 위임할 객체를 프로퍼티 뒤에 명시한다.")]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reflect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("KProperty\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PropertyDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisRef"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Any"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KProperty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" get value "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thisRef"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Any"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" KProperty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" set value "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v(" -> "),a("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$newValue")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PropertyDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("PropertyDelegate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"31"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person name is '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person name is no name")]),t._v("\n\n  person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jin"')]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person name is '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person name is jin")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person age is '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person age is 31")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("코틀린의 "),a("code",[t._v("stdlib")]),t._v("는 lazy 프로퍼티 패턴을 쉽게 구현할 수 있게 lazy 함수를 제공한다.")]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPostListFromServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Post"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"get big data from server"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Post\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Board")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Post"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" lazy "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPostListFromServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" board "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Board")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazy init board list :: '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("board"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lazy init board list :: [Post@a09ee92]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"board list :: '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("board"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// board list :: [Post@a09ee92]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get big data from server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lazy init board list :: [Post@2f4d3709]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// board list :: [Post@2f4d3709]")]),t._v("\n")])])]),a("p",[t._v("프로퍼티 위임을 사용하면, 이외의 변화가 있을 때 이를 감지하는 observable 패턴을 쉽게 만들 수 있다.")]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Item"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" \n  Delegates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyDataSetChanged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" \n  Delegates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("observable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n    Log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"key changed from '),a("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$old")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token interpolation variable"}},[t._v("$new")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("혹은 일정 조건을 만족하지 못하면 값 할당을 제한하는 거부권(vetoable)을 행사할 수 있다.")]),t._v(" "),a("div",{staticClass:"language-kotlin extra-class"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" kotlin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delegates\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 200살 이상은 값 오류로 판단 값 셋팅을 거부한다.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Int "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" Delegates"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vetoable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        newValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person age is '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person age is 31")]),t._v("\n\n    person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9999")]),t._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 거부됨")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person age is '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("${")]),t._v("person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("}")])]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person age is 31")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("코틀린 "),a("code",[t._v("stdlib")]),t._v(" 에서 다음과 같은 프로퍼티 델리게이터를 알아두면 좋다.")]),t._v(" "),a("ul",[a("li",[t._v("lazy")]),t._v(" "),a("li",[t._v("Delegates.observable")]),t._v(" "),a("li",[t._v("Delegates.vetoable")]),t._v(" "),a("li",[t._v("Delegates.notNull")])]),t._v(" "),a("h3",{attrs:{id:"정리-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정리-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 정리")]),t._v(" "),a("p",[t._v("프로퍼티 델리게이트는 프로퍼티와 관련된 다양한 조작을 할 수 있으며, 컨텍스트와 관련된 대부분의 ㅈ니다.")]),t._v(" "),a("p",[t._v("이러한 특징을 이용해서 다양한 프로퍼티의 동작을 추출해서 재사용할 수 있다.")]),t._v(" "),a("p",[t._v("이를 잘 활용하면 일반적인 패턴을 추출하거나 더 좋은 API 를 만들 때 활용할 수 있다.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://jinn-blog.tistory.com/27",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jinn-blog.tistory.com/27"),a("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=e.exports}}]);