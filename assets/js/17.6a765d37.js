(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{321:function(e,t,r){"use strict";r.r(t);var a=r(1),s=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"architecture"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#architecture","aria-hidden":"true"}},[e._v("#")]),e._v(" Architecture")]),e._v(" "),r("p",[e._v("설계 지향적 관점에서 관련된 것을 정리한다.")]),e._v(" "),r("h2",{attrs:{id:"rbac-role-based-access-control-역활기반-접근-통제"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rbac-role-based-access-control-역활기반-접근-통제","aria-hidden":"true"}},[e._v("#")]),e._v(" RBAC (Role Based Access Control : 역활기반 접근 통제)")]),e._v(" "),r("p",[e._v("접근하려는 사용자와 자원이 어떻게 상호작용하는지 결정하여 중앙에서 집중적으로 작용한다.")]),e._v(" "),r("ul",[r("li",[e._v("역할 할당 (Role Assignment)")]),e._v(" "),r("li",[e._v("역할 권한 부여 (Role Authorization)")]),e._v(" "),r("li",[e._v("권한 부여 (Permission Authorization)")])]),e._v(" "),r("h2",{attrs:{id:"mac-mandatory-access-control-강제적-접근-통제"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mac-mandatory-access-control-강제적-접근-통제","aria-hidden":"true"}},[e._v("#")]),e._v(" MAC (Mandatory Access Control : 강제적 접근 통제)")]),e._v(" "),r("h2",{attrs:{id:"dac-discretionary-access-control-임의적-접근-통제"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dac-discretionary-access-control-임의적-접근-통제","aria-hidden":"true"}},[e._v("#")]),e._v(" DAC (Discretionary Access Control : 임의적 접근 통제)")]),e._v(" "),r("h2",{attrs:{id:"separation-of-concern-관심의-분리"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#separation-of-concern-관심의-분리","aria-hidden":"true"}},[e._v("#")]),e._v(" Separation Of Concern (관심의 분리)")]),e._v(" "),r("p",[e._v("SOA (Service-Oriented Architecture : 서비스 지향 아키텍처) 의 핵심 원칙중의 하나로 "),r("em",[r("strong",[e._v("관심이 다른것은 가능한 분리하여 서로 영향을 주지 않도록 하며, 관심이 같은 것은 하나의 관련 객체로 모이도록 설계나 구현")])]),e._v(" 을 하는 것")]),e._v(" "),r("h2",{attrs:{id:"tdd-bdd-ddd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tdd-bdd-ddd","aria-hidden":"true"}},[e._v("#")]),e._v(" TDD / BDD / DDD")]),e._v(" "),r("p",[e._v("테스트 주도 개발 방법론들이다.")]),e._v(" "),r("h3",{attrs:{id:"tdd-test-driven-development"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tdd-test-driven-development","aria-hidden":"true"}},[e._v("#")]),e._v(" TDD (Test Driven Development)")]),e._v(" "),r("ul",[r("li",[e._v("테스트 주도 개발 방법론")]),e._v(" "),r("li",[e._v("테스트 코드를 먼저 작성하고 해당 테스트 코드에 맞게 개발을 진행한다.")])]),e._v(" "),r("h3",{attrs:{id:"bdd-behavior-driven-development"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bdd-behavior-driven-development","aria-hidden":"true"}},[e._v("#")]),e._v(" BDD (Behavior Driven Development)")]),e._v(" "),r("ul",[r("li",[e._v("동작 지향 개발 방법론")]),e._v(" "),r("li",[e._v("소프트웨어의 품질을 향상 시키기 위해 개발자간의 협력 가능한 Agile Software Development 기법이다.")]),e._v(" "),r("li",[e._v("BDD 의 목표는 TDD 를 수행하기 위한 것으로, TDD 를 수행하기 위해 BDD 를 통한 행위 자체를 변경 가능하다.")])])])},[],!1,null,null,null);t.default=s.exports}}]);