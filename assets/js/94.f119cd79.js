(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{356:function(t,r,a){"use strict";a.r(r);var e=a(1),s=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rxjava"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rxjava","aria-hidden":"true"}},[t._v("#")]),t._v(" RxJava")]),t._v(" "),a("p",[t._v("리엑티브 프로그래밍 (Reactive Programming) 은 "),a("em",[a("strong",[t._v("비동기 데이터 흐름 (Data Flow) 에 기반을 둔 프로그래밍 패러다임")])]),t._v(" 이다.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/A098.png",alt:"리엑티브 프로그래밍"}})]),t._v(" "),a("p",[t._v("이 데이터의 흐름은 마치 강과 같아서 이를 관찰하거나 필터링 하거나 다룰수 있으며 새로운 사용자를 위한 새로운 흐름을 만들기 위해 다른 흐름과 병합할 수 있다.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Gradle 환경에서 세팅하기")]),t._v(" "),a("p",[a("code",[t._v("build.gradle")]),t._v(" 파일 내에 하기 의존 요소 추가")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("dependencies "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ...\n  compile 'io.reactivex.rxjava"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("rxjava"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v("."),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("';\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"observer-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#observer-pattern","aria-hidden":"true"}},[t._v("#")]),t._v(" Observer Pattern")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/A099.png",alt:"옵저버 패턴"}})]),t._v(" "),a("p",[t._v("옵저버 패턴은 객체의 상태 변화를 관찰하는 관찰자들, 즉 옵저버들의 목록을 객체에 등록하여 상태변화가 있을 때 마다 메서드 등을 통해 객체가 직접 목록의 각 옵저버에게 통지하도록 하는 디자인 패턴이다.")]),t._v(" "),a("p",[t._v("분산 핸들링 시스템을 구현하는데 사용되며 발행/구독 모델로 알려져 있기도 한다."),a("br"),t._v("\n크게 아래와 같이 구분된다.")]),t._v(" "),a("ul",[a("li",[t._v("Observable : 이벤트를 발생시킨다.")]),t._v(" "),a("li",[t._v("Subscriber : 발생된 이벤트를 받아 처리한다.")])]),t._v(" "),a("p",[t._v("RxJava 에서의 이벤트의 발생, 종료, 에러는 아래와 같이 표현이 됩니다.")]),t._v(" "),a("ul",[a("li",[t._v("onNext : 이벤트의 발생")]),t._v(" "),a("li",[t._v("onCompleted : 이벤트 종료")]),t._v(" "),a("li",[t._v("onError : 에러가 발생")])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://reactivex.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://reactivex.io"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://juyoung-1008.tistory.com/38",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://juyoung-1008.tistory.com/38"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://brunch.co.kr/@yudong/33",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://brunch.co.kr/@yudong/33"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"http://gaemi.github.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://gaemi.github.io"),a("OutboundLink")],1)])])])},[],!1,null,null,null);r.default=s.exports}}]);