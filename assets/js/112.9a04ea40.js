(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{373:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"reactive-programming-with-reactor-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactive-programming-with-reactor-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Reactive Programming with Reactor 3")]),t._v(" "),s("h2",{attrs:{id:"reactor-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reactor-3","aria-hidden":"true"}},[t._v("#")]),t._v(" Reactor 3")]),t._v(" "),s("p",[t._v("Reactor 3 는 Reactive Streams 를 스팩을 기반으로 구축된 라이브러리로 JVM에서 리엑티브 프로그래밍 패러다임을 승계합니다.")]),t._v(" "),s("p",[t._v("이는 데이터 흐름 (data flows) 와 변환 전파에 중점을 둔 비동기프로그래밍이다.")]),t._v(" "),s("blockquote",[s("h3",{attrs:{id:"리액티브-선언문"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리액티브-선언문","aria-hidden":"true"}},[t._v("#")]),t._v(" 리액티브 선언문")]),t._v(" "),s("p",[t._v("리액티브 시스템으로 구축된 시스템은 "),s("code",[t._v("유연함")]),t._v(", "),s("code",[t._v("낮은 결합도")]),t._v(", "),s("code",[t._v("확장성")]),t._v("을 유지해야 한다. "),s("br"),t._v("\n이 시스템은 장애에 대한 강한 내성을 가지고, 비록 장애가 발생하더라도 뛰어난 장애 복구성의 특징을 가지고 있습니다. "),s("br"),t._v("\n또한 높은 응답성을 가져 사용자에게 하여금 상호적 피드백을 제공합니다.")])]),t._v(" "),s("h3",{attrs:{id:"왜-리액티브-인가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#왜-리액티브-인가","aria-hidden":"true"}},[t._v("#")]),t._v(" 왜 리액티브 인가?")]),t._v(" "),s("p",[t._v("리액티브 프로그래밍은 비동기 처리 데이터 파이프라인을 구축하기 위해 선언적 코드(aka. 함수형 프로그래밍) 를 사용하는 새로운 패러다임이다."),s("br"),t._v("\n데이터가 사용 가능하게 끔 준비가 되면 Consumer 에게 Push 되는 이벤트 처리 기반의 모델입니다. (이벤트의 비동기 시퀀스를 처리합니다.)"),s("br"),t._v("\n이것은 리소스를 보다 효율적으로 사용하기 위해 low-level 의 동시적 처리 혹은 병렬 코드를 작성하는데 큰 어려움 없이"),s("br"),t._v("\n어플리케이션의 수용 가능한 처리 범위를 증가시키는 효과를 가져옵니다.")]),t._v(" "),s("p",[t._v("리액티브 프로그래밍은 완전한 비동기 혹은 논 블로킹을 중심을 기반으로 JDK 에서 비동기 코드를 수행 가능하게 하며,"),s("br"),t._v("\n기존 Callback 기반의 API 설계나 Future 사용에 대한 대안으로 사용 가능하다.")]),t._v(" "),s("h3",{attrs:{id:"리액티브-스트림"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#리액티브-스트림","aria-hidden":"true"}},[t._v("#")]),t._v(" 리액티브 스트림")]),t._v(" "),s("p",[s("strong",[t._v("Reactive Stream")]),t._v(" 스팩은 JVM 에서 Reactive Programming 라이브러리를 표준화 하기 위한 주도적 노력이며,")]),t._v(" "),s("p",[t._v("더 중요하게는 서로 다른 환경에서 상호 운영 가능하도록(호환 가능) 자동하는 방식을 지정한다.")]),t._v(" "),s("p",[t._v("리액티브 스트림은 다음 4개의 인터페이스로 정의되어 있다.")]),t._v(" "),s("ul",[s("li",[t._v("Subscriber")]),t._v(" "),s("li",[t._v("Publisher")]),t._v(" "),s("li",[t._v("Subscription")]),t._v(" "),s("li",[t._v("Processor")])]),t._v(" "),s("p",[t._v("대표적은 구현체는 다음과 같은것들이 있다.")]),t._v(" "),s("ul",[s("li",[t._v("Reactor 3")]),t._v(" "),s("li",[t._v("RxJava (Version 2~)")]),t._v(" "),s("li",[t._v("Akka Streams")]),t._v(" "),s("li",[t._v("Vert.x")]),t._v(" "),s("li",[t._v("Ratpack")])]),t._v(" "),s("p",[t._v("리액티브 스트림의 목표는 모든 상황에서 사용가능하게 끔 high-level 의 API 제공을 목표로 합니다.")]),t._v(" "),s("h3",{attrs:{id:"상호작용"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#상호작용","aria-hidden":"true"}},[t._v("#")]),t._v(" 상호작용")]),t._v(" "),s("p",[t._v("리액티브 스트림은 "),s("code",[t._v("Publisher")]),t._v(" 와 데이터가 시작되고,")]),t._v(" "),s("p",[t._v("기본적으로는 "),s("code",[t._v("Subscriber")]),t._v(" 가 "),s("code",[t._v("subscribe")]),t._v(" 를 호출하는 순간")]),t._v(" "),s("p",[s("strong",[t._v("Publisher 에서 "),s("code",[t._v("Subscriber")]),t._v(" 로 데이터 전달이 시작")]),t._v(" 됩니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A123.png",alt:"Put them all together"}})]),t._v(" "),s("p",[t._v("위 다이어그램에서 "),s("code",[t._v("request(n)")]),t._v(" 은 backpressure 을 조절하는 부분입니다.")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://tech.io/playgrounds/929/reactive-programming-with-reactor-3/Intro",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tech.io"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://www.reactive-streams.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.reactive-streams.org/"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://medium.com/@kevalpatel2106/what-is-reactive-programming-da37c1611382",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is Reactive Programming"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://www.reactivemanifesto.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reactive Manifesto"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"flux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flux","aria-hidden":"true"}},[t._v("#")]),t._v(" Flux")]),t._v(" "),s("p",[t._v("Flux 는 다음과 같은 연산이 추가로 정의되어 있다.")]),t._v(" "),s("ul",[s("li",[t._v("생성 (Generate)")]),t._v(" "),s("li",[t._v("변환 (Transform)")]),t._v(" "),s("li",[t._v("조율 (Orchestrate)")])]),t._v(" "),s("p",[t._v("0 에서 "),s("code",[t._v("n")]),t._v(" 개까지의 "),s("code",[t._v("<T>")]),t._v(" 의 요소를 보낸 뒤("),s("code",[t._v("onNext")]),t._v(" 이벤트) 성공("),s("code",[t._v("onComplete")]),t._v(" 메서드) 하거나 에러를 발생 ("),s("code",[t._v("onError")]),t._v(" 종료 메서드)")]),t._v(" "),s("p",[t._v("인스턴스 메서드인 연산자를 사용하면 비동기 시퀀스를 생성하는 비동기 처리 파이프라인을 구축할 수 있다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A124.png",alt:"flux diagram"}})]),t._v(" "),s("h3",{attrs:{id:"예제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#예제","aria-hidden":"true"}},[t._v("#")]),t._v(" 예제")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Return an empty Flux")]),t._v("\nFlux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emptyFlux")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// TODO Return a Flux that contains 2 values "foo" and "bar" without using an array or a collection')]),t._v("\nFlux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fooBarFluxFromValues")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("just")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// TODO Create a Flux from a List that contains 2 values "foo" and "bar"')]),t._v("\nFlux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fooBarFluxFromList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromIterable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Arrays"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Create a Flux that emits an IllegalStateException")]),t._v("\nFlux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorFlux")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IllegalStateException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Create a Flux that emits increasing values from 0 to 9 each 100ms")]),t._v("\nFlux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Long"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("counter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("interval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://luvstudy.tistory.com/100",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reactor 언제 어떤 Operator을 써야 할까?"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"mono"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mono","aria-hidden":"true"}},[t._v("#")]),t._v(" Mono")]),t._v(" "),s("p",[t._v("최대 1개의 요소를 반환할 수 있습니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A125.png",alt:"mono diagram"}})]),t._v(" "),s("h3",{attrs:{id:"예제-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#예제-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 예제")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Return an empty Mono")]),t._v("\nMono"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emptyMono")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Mono"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Return a Mono that never emits any signal")]),t._v("\nMono"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("monoWithNoSignal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Mono"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("never")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// TODO Return a Mono that contains a "foo" value')]),t._v("\nMono"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fooMono")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Mono"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("just")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Create a Mono that emits an IllegalStateException")]),t._v("\nMono"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorMono")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Mono"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IllegalStateException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"stepverifier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stepverifier","aria-hidden":"true"}},[t._v("#")]),t._v(" StepVerifier")]),t._v(" "),s("p",[t._v("Publisher 를 구독하면서 예상값과 순서를 검증할 수 있음")]),t._v(" "),s("p",[s("code",[t._v("create")]),t._v(" 메서드로 인스턴스를 생성")]),t._v(" "),s("p",[t._v("반드시 "),s("code",[t._v("verify()")]),t._v(" 메서드를 호출해야 함")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("StepVerifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Publisher"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" expectation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("코드 예시")]),t._v(" "),s("div",{staticClass:"language-kotlin extra-class"},[s("pre",{pre:!0,attrs:{class:"language-kotlin"}},[s("code",[t._v("void "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectFooBarComplete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    StepVerifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyComplete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// TODO Use StepVerifier to check that the flux parameter emits "foo" and "bar" elements then a RuntimeException error.')]),t._v("\nvoid "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectFooBarError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    StepVerifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RuntimeException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// TODO Use StepVerifier to check that the flux parameter emits a User with "swhite"username')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// and another one with "jpinkman" then completes successfully.')]),t._v("\nvoid "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectSkylerJesseComplete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("User"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    StepVerifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" u "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUsername")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"swhite"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" u "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertThat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUsername")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqualTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jpinkman"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyComplete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Expect 10 elements then complete and notice how long the test takes.")]),t._v("\nvoid "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect10Elements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Flux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Long"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    StepVerifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flux"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectNextCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyComplete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TODO Expect 3600 elements at intervals of 1 second, and verify quicker than 3600s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// by manipulating virtual time thanks to StepVerifier#withVirtualTime, notice how long the test takes")]),t._v("\nvoid "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect3600Elements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Supplier"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Flux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Long"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" supplier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    StepVerifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withVirtualTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("supplier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenAwait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ofSeconds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("expectNextCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("verifyComplete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])])])},[],!1,null,null,null);a.default=e.exports}}]);