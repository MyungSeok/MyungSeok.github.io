(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{483:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_3주차-11-15-chapter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3주차-11-15-chapter","aria-hidden":"true"}},[t._v("#")]),t._v(" 3주차 (11 ~ 15 Chapter)")]),t._v(" "),s("h2",{attrs:{id:"chapter-11-스칼라의-계층구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-11-스칼라의-계층구조","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 11 스칼라의 계층구조")]),t._v(" "),s("p",[t._v("모든 클래스가 "),s("code",[t._v("Any")]),t._v(" 의 서브클래스이기 때문에, "),s("code",[t._v("Any")]),t._v(" 가 정의해둔 메서드는 모두 '보편적인' 메서드다.")]),t._v(" "),s("h3",{attrs:{id:"_11-1-스칼라의-클래스-계층구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-스칼라의-클래스-계층구조","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.1 스칼라의 클래스 계층구조")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/A118.png",alt:"스칼라의 클래스 계층구조"}})]),t._v(" "),s("p",[t._v("계층의 최상위에는 "),s("code",[t._v("Any")]),t._v(" 클래스가 있다.")]),t._v(" "),s("p",[t._v("루트 (root) 클래스 "),s("code",[t._v("Any")]),t._v(" 에는 서브클래스가 둘 있는데, 바로 "),s("code",[t._v("AnyVal")]),t._v(" 과 "),s("code",[t._v("AnyRef")]),t._v(" 다.")]),t._v(" "),s("ul",[s("li",[t._v("AnyVal : 모든 스칼라값 클래스 (value class) 의 부모 클래스")]),t._v(" "),s("li",[t._v("AnyRef : 모든 스칼라의 참조 클래스 (reference class) 의 기반 클래스")])]),t._v(" "),s("p",[t._v("스칼라가 기본적으로 제공하는 값 클래스는 다음과 같다.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Byte")]),t._v(", "),s("code",[t._v("Short")]),t._v(", "),s("code",[t._v("Char")]),t._v(", "),s("code",[t._v("Int")]),t._v(", "),s("code",[t._v("Long")]),t._v(", "),s("code",[t._v("Float")]),t._v(", "),s("code",[t._v("Double")]),t._v(", "),s("code",[t._v("Boolean")]),t._v(", "),s("code",[t._v("Unit")])])]),t._v(" "),s("p",[t._v("예를 들면 "),s("code",[t._v("42")]),t._v(" 는 "),s("code",[t._v("Int")]),t._v(" 의 인스턴스이고, "),s("code",[t._v("'x'")]),t._v(" 는 "),s("code",[t._v("Char")]),t._v(" 의 인스턴스이고, "),s("code",[t._v("false")]),t._v(" 는 "),s("code",[t._v("Boolean")]),t._v("의 인스턴스이다.")]),t._v(" "),s("p",[t._v("이 값 클래스는 "),s("code",[t._v("new")]),t._v(" 를 사용하여 인스턴스화 할 수 없다. 모든 값 클래스를 추상 클래스인 동시에 파이널 클래스 (final class) 로 만드는 기법을 사용하여 제약을 가했다.")]),t._v(" "),s("h3",{attrs:{id:"_11-2-여러-기본-클래스를-어떻게-구현했는가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-여러-기본-클래스를-어떻게-구현했는가","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.2 여러 기본 클래스를 어떻게 구현했는가?")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("421")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("421")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("위 자바 코드는 래퍼 (wrapper) 클래스에 대입된 값은 비교 연산자 (==, !=) 를 통하여 비교가 불가능하다.")]),t._v(" "),s("p",[s("code",[t._v("Integer")]),t._v(" 가 참조 타입이 아니기 때문에 언박싱하여 값을 비교해야 한다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" def isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x: Int, y: Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y\nisEqual: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x: Int, y:Int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Boolean\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("421, 421"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres10: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" def isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x: Any, y: Any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y\nisEqual: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x: Any, y:Any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("Boolean\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("421, 421"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres11: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("스칼라는 자바 코드와는 다르게 마땅히 그래야 하는 방식대로 동작된다.")]),t._v(" "),s("p",[t._v("하지만 사용자가 정의한 "),s("strong",[t._v("동일성")]),t._v(" 대신 "),s("strong",[t._v("참조 동일성")]),t._v("이 필요한 경우도 있다.")]),t._v(" "),s("p",[t._v("이러한 경우에는 해시 콘즈 (hash cons) 를 사용하고 싶을 경우가 있다. 참조 동일성을 사용하게 만들어둔 "),s("code",[t._v("eq")]),t._v(" 라는 메서드가 있다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx: String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abc\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ny: String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abc\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y\nres13: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x eq y\nres13: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" x ne y\nres13: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("스칼라의 동일성에 대해서 30장에서 자세히 다룰것이다.")]),t._v(" "),s("h3",{attrs:{id:"_11-3-바닥에-있는-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-바닥에-있는-타입","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.3 바닥에 있는 타입")]),t._v(" "),s("p",[s("code",[t._v("Nothing")]),t._v(" 타입은 스칼라 클래스 계층의 맨 밑바닥에 존재한다.")]),t._v(" "),s("p",[s("code",[t._v("Nothing")]),t._v(" 은 비정상적 종료를 표시하는것이다.")]),t._v(" "),s("p",[s("code",[t._v("Nothing")]),t._v(" 은 모든 타입의 서브타입이기 때문에, "),s("code",[t._v("error")]),t._v(" 와 같은 메서드를 다양한 곳에서 유연하게 사용가능하다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" divide"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" y\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"can\'t divide by zero"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("위 코드에서 반환 타입이 "),s("code",[t._v("Int")]),t._v(" 이지만 "),s("code",[t._v("Nothing")]),t._v(" 의 모든 타입의 서브타입이기 때문에 메서드의 반환타입에서 요구하는 대로 "),s("code",[t._v("Int")]),t._v(" 가 될 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"_11-4-자신만의-값-클래스-정의"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-자신만의-값-클래스-정의","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.4 자신만의 값 클래스 정의")]),t._v(" "),s("p",[t._v("값 클래스를 정의하고 싶으면 "),s("code",[t._v("AnyVal")]),t._v(" 의 서브클래스로 만들면 된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Dollars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" amount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyVal")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" amount\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"한-가지-타입만-남용하는-것을-막기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#한-가지-타입만-남용하는-것을-막기","aria-hidden":"true"}},[t._v("#")]),t._v(" 한 가지 타입만 남용하는 것을 막기")]),t._v(" "),s("p",[t._v("스칼라 클래스 계층을 가장 잘 활용하고 싶다면, 문제 영역에 잘 들어맞는 새로운 클래스를 정의하라.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Anchor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyVal")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyVal")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyVal")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyVal")]),t._v("\n")])])]),s("p",[t._v("위 같은 클래스가 있다면 좀 더 자세한 타입 시그니처를 갖는 title 함수를 만들 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" anchor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Anchor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" style"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Html "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    s"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"<a id='${anchor.value}'>\"")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \n      s"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"<h1 class='${style.value}'>\"")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \n        text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"</h1></a>"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_11-5-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-결론","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.5 결론")]),t._v(" "),s("p",[t._v("다음 장에서 믹스인 (mix in) 합성을 이해할 준비가 되었다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-12-트레이트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-12-트레이트","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 12 트레이트")]),t._v(" "),s("p",[t._v("스칼라에서 트레이트는 코드 재사용의 근간을 이루는 단위다.")]),t._v(" "),s("p",[t._v("하나의 슈퍼클래스만 갖는 클래스의 상속과는 달리, 트레이트의 경우 몇개라도 혼합해 사용할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"_12-1-트레이트의-동작-원리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-트레이트의-동작-원리","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.1 트레이트의 동작 원리")]),t._v(" "),s("p",[t._v("트레이트를 정의하고 나면 "),s("code",[t._v("extends")]),t._v(" 나 "),s("code",[t._v("with")]),t._v(" 키워드를 사용해 클래스에 조합하여 사용할 수 있다.")]),t._v(" "),s("p",[t._v("스칼라 프로그래머는 트레이트를 사용할 때 상속보다는 믹스인 (mix in) 을 사용하려한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Frog "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Philosophical "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" to "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("트레이트를 믹스인할 때는 "),s("code",[t._v("extends")]),t._v(" 키워드를 사용한다.")]),t._v(" "),s("p",[s("code",[t._v("extends")]),t._v(" 키워드를 사용하면 트레이트의 슈퍼클래스를 암시적으로 상속한다.")]),t._v(" "),s("p",[t._v("여러 트레이트를 믹스인 하려면 "),s("code",[t._v("with")]),t._v(" 구문을 추가하면 된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Frog "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Philosophical "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Frog "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Philosophical "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" HasLegs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" toString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("클래스와 트레이트의 차이점은 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("트레이트는 클래스 파라미터 (클래스의 주 생성자에 전달할 파라미터) 를 가질 수 없다.")]),t._v(" "),s("li",[t._v("클래스에서는 "),s("code",[t._v("super")]),t._v(" 호출을 정적으로 바인딩하지만, 트레이트에서는 동적으로 바인딩한다는 점이다.")])]),t._v(" "),s("h3",{attrs:{id:"_12-2-간결한-인터페이스와-풍부한-인터페이스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-간결한-인터페이스와-풍부한-인터페이스","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.2 간결한 인터페이스와 풍부한 인터페이스")]),t._v(" "),s("p",[t._v("트레이트의 주된 사용방법은 "),s("strong",[t._v("어떤 클래스에 그 클래스가 이미 갖고 있는 메서드를 기반으로 하는 새로운 메서드를 추가하는 법")]),t._v("이다.")]),t._v(" "),s("p",[t._v("간결한 인터페이스 (thin interface) 를 풍부한 인터페이스 (rich interface) 로 만들 때 트레이트를 사용할 수 있다.")]),t._v(" "),s("p",[t._v("구체적인 메서드 구현을 트레이트에 더할 수 있으면 풍부한 인터페이스 쪽의 비용대비 효용이 더 좋아진다.")]),t._v(" "),s("h3",{attrs:{id:"_12-3-예제-직사각형-객체"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-예제-직사각형-객체","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.3 예제: 직사각형 객체")]),t._v(" "),s("p",[t._v("풍부한 트레이트를 사용해 코드의 반복을 피할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Rectangular "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" topLeft"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Point\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" bottomRight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Point\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" topLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bottomRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 여러 기하 관련 메서드...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_12-4-ordered-트레이트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-ordered-트레이트","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.4 Ordered 트레이트")]),t._v(" "),s("p",[t._v("스칼라에서 제공하는 "),s("code",[t._v("Ordered")]),t._v(" 라는 트레이트를 사용할 경우 하나의 비교 연산자만 작성하면 모든 비교 연산자 구현을 대신할 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("Ordered")]),t._v(" 트레이트가 그 하나의 메서드 구현을 기반으로 "),s("code",[t._v("<")]),t._v(", "),s("code",[t._v(">")]),t._v(", "),s("code",[t._v("<=")]),t._v(", "),s("code",[t._v("=>")]),t._v(" 를 제공한다.")]),t._v(" "),s("p",[s("code",[t._v("compare")]),t._v(" 메서드만 구현하면 "),s("code",[t._v("Ordered")]),t._v(" 트레이트가 비교 메서드를 제공해 클래스를 풍부하게 해준다.")]),t._v(" "),s("p",[s("code",[t._v("Ordered")]),t._v(" 트레이트가 "),s("code",[t._v("equals")]),t._v(" 를 정의하지 않는다. 이는 비교관점에서 "),s("code",[t._v("equals")]),t._v(" 를 구현하려면 전달 받을 객체의 타입을 알아야 한다.")]),t._v(" "),s("p",[t._v("하지만 타입 소거 (type erasure) 때문에 "),s("code",[t._v("Ordered")]),t._v(" 트레이트는 이러한 검사를 수행할 수 없다.")]),t._v(" "),s("h3",{attrs:{id:"_12-5-트레이트를-이용해-변경-쌓아-올리기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-트레이트를-이용해-변경-쌓아-올리기","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.5 트레이트를 이용해 변경 쌓아 올리기")]),t._v(" "),s("p",[t._v("클래스에 쌓을 수 있는 변경을 적용해보자.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" IntQueue "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mutable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArrayBuffer\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" BasicIntQueue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" IntQueue "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" bu "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" ArrayBuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("쌓을수 잇는 변경을 나타내는 "),s("code",[t._v("Doubling")]),t._v(" 트레이트")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Doubling "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" IntQueue "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("이 선언은 "),s("code",[t._v("Doubling")]),t._v(" 트레이트가 "),s("code",[t._v("IntQueue")]),t._v(" 를 상속한 클래스에만 믹스인 될 수 있다는 점이다.")]),t._v(" "),s("p",[t._v("믹스인은 순서가 중요한데, 믹스인한 클래스의 메서드를 호출하면 "),s("strong",[t._v("가장 오른쪽에 있는 트레이트의 메서드를 먼저 호출한다.")])]),t._v(" "),s("h3",{attrs:{id:"_12-6-왜-다중상속은-안되는가"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-왜-다중상속은-안되는가","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.6 왜 다중상속은 안되는가 ?")]),t._v(" "),s("p",[t._v("트레이트를 사용할 때에는 특정 클래스에 믹스인한 클래스와 트레이트를 선형화 (linearization) 해서 어떤 메서드를 호출할지 결정한다.")]),t._v(" "),s("p",[t._v("모든 선형화에서 어떤 클래스는 자신의 슈퍼클래스나 믹스인해 넣은 트레이트보다 앞에 위치 한다는 점이다.")]),t._v(" "),s("p",[t._v("아래와 같이 여러 트레이트를 믹스인 한 "),s("code",[t._v("Cat")]),t._v(" 클래스가 있다고 가정하자.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Animal\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" Furry "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Animal\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" HasLegs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Animal\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("trait")]),t._v(" FourLegged "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Animal\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Cat "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Animal "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Furry "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" FourLegged\n")])])]),s("p",[s("img",{attrs:{src:"/img/A119.png",alt:"Cat 클래스의 상속 계층과 선형화"}})]),t._v(" "),s("p",[s("code",[t._v("Cat")]),t._v(" 클래스 선형화의 마지막 부분은 "),s("code",[t._v("Cat")]),t._v(" 의 슈퍼클래스인 "),s("code",[t._v("Animal")]),t._v(" 을 선형화한 결과이다.")]),t._v(" "),s("h3",{attrs:{id:"_12-7-트레이트냐-아니냐-이것이-문제로다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-트레이트냐-아니냐-이것이-문제로다","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.7 트레이트냐 아니냐, 이것이 문제로다.")]),t._v(" "),s("p",[t._v("확고한 규칙은 없지만 몇가지 가이드라인을 제시하면 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("클래스를 사용할 때\n"),s("ul",[s("li",[t._v("어떤 행위를 재사용하지 않을거라면")])])]),t._v(" "),s("li",[t._v("트레이트를 사용할 때\n"),s("ul",[s("li",[t._v("서로 관련이 없는 클래스에서 어떤 행위를 여러 번 재사용해야 한다면")])])]),t._v(" "),s("li",[t._v("추상클래스를 사용할 때\n"),s("ul",[s("li",[t._v("스칼라에서 정의한 내용을 자바 코드에서 상속해야 한다면")])])])]),t._v(" "),s("h3",{attrs:{id:"_12-8-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-결론","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.8 결론")]),t._v(" "),s("p",[t._v("트레이트는 상속을 통해 재사용할 수 잇는 기본 코드 단위다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-13-패키지와-임포트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-13-패키지와-임포트","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 13 패키지와 임포트")]),t._v(" "),s("p",[t._v("규모가 큰 프로그램을 작성할 때는 프로그램의 여러 부분이 서로 의존하는 정도를 나타내는 커플링 (coupling) 을 최소화하는 것이 중요하다.")]),t._v(" "),s("h3",{attrs:{id:"_13-1-패키지-안에-코드-작성하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-패키지-안에-코드-작성하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.1 패키지 안에 코드 작성하기")]),t._v(" "),s("p",[t._v("지금까지 봤던 코드 예제들은 이름 없는 패키지 안에서 작성했었다.")]),t._v(" "),s("p",[s("code",[t._v("package")]),t._v(" 절 다음에 중괄호가 있으면, 그 중괄호 안에 있는 정의는 모드 구 패키지에 속한다.")]),t._v(" "),s("p",[t._v("이런 문법을 패키징 (packaging) 이라 부른다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bobsrockets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Navigator\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("안에 여러 패키지를 넣을 때는 아래와 같이 사용한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" bobsrockets "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" navigation "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Naviator\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tests "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" NavigaorSuite\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_13-2-관련-코드에-간결하게-접근하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-관련-코드에-간결하게-접근하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.2 관련 코드에 간결하게 접근하기")]),t._v(" "),s("p",[t._v("코드를 패키지 계층올 나누는 이유는 사람들이 코드를 훑어볼 때 도움을 주기 위한 목적도 있지만,")]),t._v(" "),s("p",[t._v("컴파일러도 같은 패키지 안에 있는 코드가 서로 관련 있음을 알 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" bobsrockets "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" navigation "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Navigator "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bobsrockets.navigation.StarMap 을 쓸 필요가 없다.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" StarMap\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" StarMap\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Ship "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bobsrockets.navigation.Navigator 를 쓸 필요가 없다.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" nav "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" navigation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Navigator\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" fleets "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Fleet "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bobsrockets.Ship 을 쓸 필요가 없다.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" addShip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Ship "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("위 코드는 다음 세가지 규칙을 따른다.")]),t._v(" "),s("ol",[s("li",[t._v("어떤 클래스가 속한 패키지 안에서는 접두사가 없어도 해당 클래스에 접근할 수 있다.")]),t._v(" "),s("li",[t._v("어떤 패캐지를 포함하는 (부모) 패키지 안에서는 해당 패키지에 어떤 접두어도 붙이지 않고 접근할 수 있다.")]),t._v(" "),s("li",[t._v("중괄호 패키지 문법을 사용하면 그 패키지 스코프 밖에서 접근 가능한 모든 이름을 그 패키지 안에서도 쓸 수 있다.")])]),t._v(" "),s("p",[t._v("또한 추가적으로 스칼라에서 제공하는 "),s("code",[t._v("_root_")]),t._v(" 패키지 문법을 통해 하위 패키지에서 다른 패키지로 접근이 가능하다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" launch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Booster3\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" bobsrockets "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" navigation "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" launch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Booster1\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" MissionControl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" booster1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Booster1\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" booster2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" bobsrockets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Booster2\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" booster3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" _root_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Booster3\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("모든 최상위 패키지는 "),s("code",[t._v("_root_")]),t._v(" 패키지의 멤버로 취급한다.")]),t._v(" "),s("h3",{attrs:{id:"_13-3-임포트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-임포트","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.3 임포트")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" bobsdelights\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Fruits "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Apple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apple"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"red"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Orange "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orange"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orange"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  orbject Pear "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pear"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yellowish"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" menu "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Apple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Orange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Pear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fruit 에 접근")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bobsdelights"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fruit\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bobsdelights 의 모든 멤버에 접근")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bobsdelights"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fruits 의 모든 멤버에 접근")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bobsdelights"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n")])])]),s("p",[t._v("임포트 셀렉터 (import selector) 사용")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fruits 의 Apple 과 Orange 만을 불러온다.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Apple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Orange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Apple 을 McIntosh 로 이름을 바꾼다.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Apple "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" McIntosh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Orange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fruits 의 Pear 를 제외한 모든 멤버를 불러온다.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Fruits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Pear "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_13-4-암시적-임포트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-암시적-임포트","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.4 암시적 임포트")]),t._v(" "),s("p",[t._v("스칼라는 모든 프로그램에서 몇가지 임포트를 항상 기본적으로 추가된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" scala"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Predef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n")])])]),s("p",[t._v("Predef 객체는 타입, 메서드 그리고 스칼라에서 사용하는 암시적 변환 (implicit conversion) 을 포함한다.")]),t._v(" "),s("p",[t._v("스칼라에서는 나중에 임포트한 패키지가 더 앞에서 임포트한 것을 가린다")]),t._v(" "),s("p",[t._v("때문에 "),s("code",[t._v("StringBuilder")]),t._v(" 를 사용하면 "),s("code",[t._v("java.lang.StringBuilder")]),t._v(" 가 아니라 "),s("code",[t._v("scala.StringBuilder")]),t._v(" 를 암시적으로 가르킨다.")]),t._v(" "),s("h3",{attrs:{id:"_13-5-접근-수식자"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-5-접근-수식자","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.5 접근 수식자")]),t._v(" "),s("p",[t._v("패키지, 클래스, 객체 멤버 앞에 "),s("code",[t._v("private")]),t._v(", "),s("code",[t._v("protected")]),t._v(" 등의 접근 수식자를 둘 수 있다.")]),t._v(" "),s("h4",{attrs:{id:"비공개-멤버-private"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#비공개-멤버-private","aria-hidden":"true"}},[t._v("#")]),t._v(" 비공개 멤버 (private)")]),t._v(" "),s("p",[t._v("오직 그 정의를 포함한 클래스나 객체 내부에서만 접근할 수 있다.")]),t._v(" "),s("h4",{attrs:{id:"보호-멤버-protedted"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#보호-멤버-protedted","aria-hidden":"true"}},[t._v("#")]),t._v(" 보호 멤버 (protedted)")]),t._v(" "),s("p",[t._v("스칼라에서는 보호 멤버를 정의한 클래스의 서브 클래서에서만 그 멤버에 접근 할 수 있다.")]),t._v(" "),s("h4",{attrs:{id:"공개-멤버-public"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#공개-멤버-public","aria-hidden":"true"}},[t._v("#")]),t._v(" 공개 멤버 (public)")]),t._v(" "),s("p",[s("code",[t._v("private")]),t._v(" 나 "),s("code",[t._v("protected")]),t._v(" 가 없는 멤버는 공개 멤버이다.")]),t._v(" "),s("h4",{attrs:{id:"보호-스코프"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#보호-스코프","aria-hidden":"true"}},[t._v("#")]),t._v(" 보호 스코프")]),t._v(" "),s("p",[t._v("접근 수식자를 지정자로 확장 할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" bobsrockets\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" navigation "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bobsrockets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Navigator "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("navigation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" useStarChart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" LegOfJourney "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" distance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" launch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" navigation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Vehicle "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("launch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" guide "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Navigator\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"가시성과-동반-객체"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#가시성과-동반-객체","aria-hidden":"true"}},[t._v("#")]),t._v(" 가시성과 동반 객체")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Rocket "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Rocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fuel\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" canGoHomeAgain "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fuel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" Rocket "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" fuel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" chooseStrategy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rocket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Rocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("canGoHomeAgain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      goHome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n      pickAStar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" goHome"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" pickAStar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("Rocket")]),t._v(" 클래스는 "),s("code",[t._v("Rocket")]),t._v(" 객체의 "),s("code",[t._v("fuel")]),t._v(" 비공개 메서드에 접근할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"_13-6-패키지-객체"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-6-패키지-객체","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.6 패키지 객체")]),t._v(" "),s("p",[t._v("스칼라에서는 패키지 전체에 도우미 메서드 (helper method) 를 두고 싶다면, 패키지의 최상위 수준에 넣으면 된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" bobsdelights "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" showFruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n    println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"s are "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" printmneu\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" bobsdelights"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fruits\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("bobsdelights"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("showFruit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("object")]),t._v(" PrintMenu "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" Fruits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("menu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      showFruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fruit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("패키지 객체를 사용하는 다른 용도는 타입 별명 (type alias) 와 암시적 변환 (implicit conversion) 을 넣기 위해 사용하는 경우가 많다.")]),t._v(" "),s("h3",{attrs:{id:"_13-7-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-7-결론","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.7 결론")]),t._v(" "),s("p",[t._v("패키지를 사용하면 쉽고 쓸모 있게 모듈화가 가능하다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-14-단언문과-테스트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-14-단언문과-테스트","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 14 단언문과 테스트")]),t._v(" "),s("p",[t._v("이 장에서는 작성한 소프트웨어가 제대로 동작하는지 확인할 수 있는 두가지 방법을 보여준다.")]),t._v(" "),s("h3",{attrs:{id:"_14-1-단언문"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-단언문","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.1 단언문")]),t._v(" "),s("p",[t._v("스칼라에서는 "),s("code",[t._v("assert")]),t._v(" 메서드를 호출하는 방법으로 단언문을 작성한다.")]),t._v(" "),s("p",[t._v("단언문의 조건이 충족되지 않는 경우에는 "),s("code",[t._v("AssertionError")]),t._v(" 를 발생시킨다.")]),t._v(" "),s("p",[t._v("인자를 2개 받는 단언문도 있는데 "),s("code",[t._v("assert(조건, 설명)")]),t._v(" 으로 구성된다.")]),t._v(" "),s("p",[t._v("이 설명의 데이터 타입은 "),s("code",[t._v("Any")]),t._v(" 이며 어떤 객체라도 넘길수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" above"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("that"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" this1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" widen that"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" that1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" that widen "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width\n  assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" that1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("this1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contents "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" that1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("위와 동일한 기능으로 "),s("code",[t._v("ensuring")]),t._v(" 을 사용하여 함수의 결과 확인하기가 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" widen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    left beside "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" beside right\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ensuring "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("JVM 에서 "),s("code",[t._v("-ea")]),t._v(" 나 "),s("code",[t._v("-da")]),t._v(" 명령행 옵션을 사용하면 "),s("code",[t._v("assert")]),t._v(" 와 "),s("code",[t._v("ensuring")]),t._v(" 동작을 켜거나 끌수가 있다.")])]),t._v(" "),s("h3",{attrs:{id:"_14-2-스칼라에서-테스트하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-스칼라에서-테스트하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.2 스칼라에서 테스트하기")]),t._v(" "),s("p",[t._v("스칼라에서는 여러 테스트 도구가 존재한다.")]),t._v(" "),s("ul",[s("li",[t._v("스칼라 테스트 (Scala Test)")]),t._v(" "),s("li",[t._v("스칼라 스팩스2 (Scala Spec2)")]),t._v(" "),s("li",[t._v("스칼라 체크 (Scala Check)")])]),t._v(" "),s("p",[t._v("스칼라 테스트는 가장 유연한 테스트 프레임워크이다. "),s("br"),t._v("\n다른 문제를 풀기 위해 쉽게 커스터마이징 할 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("AnyFunSuite")]),t._v(" 로 작성하며 JUnit 을 경험해본 개발자는 익술할 것이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("funsuite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AnyFunSuite\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elem\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" ElementSuite "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AnyFunSuite "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elem result should have passed width"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" ele "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("스칼라 테스트에서 중심적인 개념은 테스트 집합인 스위트 (suite)")]),t._v(" 이다.")]),t._v(" "),s("p",[t._v("테스트는 시작해서 성공 혹은 실패, 대기, 취소 할 수 있는 이름이 있는 어떤것들이다."),s("br"),t._v("\n트레이트 스위트 (trait suite) 는 테스트를 실행하기 위해 사전에 준비된 "),s("strong",[t._v("생명주기 메서드 (life cycle) 를 지원")]),t._v("한다.")]),t._v(" "),s("p",[t._v("이러한 메서드들은 테스트 작성과 실행 방법을 커스터마이징 하기 위해 오버라이드 할 수 있다.")]),t._v(" "),s("p",[s("code",[t._v("AnyFunSuite")]),t._v(" 를 포함한 모든 스칼라 테스트 스타일은 서술적인 이름을 갖는 테스트 작성을 권장하고자 설계됬다.")]),t._v(" "),s("h3",{attrs:{id:"_14-3-충분한-정보를-제공하는-실패-보고"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-충분한-정보를-제공하는-실패-보고","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.3 충분한 정보를 제공하는 실패 보고")]),t._v(" "),s("p",[t._v("단언문이 실패한다면 "),s("strong",[t._v("파일이름, 실패한 단언문 줄 번호, 정보가 담긴 오류메세지가 오류 보고에 포함")]),t._v("되어야 한다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 3\nwidth: Int "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 3\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\norg.scalatest.exceptions.TestFailedException: \n    3 did not equal 2\n")])])]),s("p",[t._v("단언문 실패에 더 상세한 정보를 원한다면, 스칼라 테스트에 Diagrams 를 사용할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".contains"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\norg.scalatest.exceptions.TestFailedException:\n\n  assert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".contains"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    1  2  3  "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("    4\n         List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1, 2, 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("스칼라테스트의 "),s("code",[t._v("assert")]),t._v(" 메서드는 오류 메세지에서 실제 결과와 기대되는 결과의 차이를 보여주지 않는다.")]),t._v(" "),s("p",[t._v("만약 어떤 메서드가 발생시킬 수 있는 예외를 검사하고 싶다면, 스칼라테슽트의 assertThrows 메서드를 다음과 같이 사용할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("assertThrows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("IllegalArgumentException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("중괄호 내의 코드가 다른 예외를 발생시키거나, 어떤 예외도 발생시키지 않는다면, assertThrows 는 TestFailedException 과 함께 즉시 끝날것이다.")]),t._v(" "),s("h3",{attrs:{id:"_14-4-명세로-테스트하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-4-명세로-테스트하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.4 명세로 테스트하기")]),t._v(" "),s("p",[t._v("동작 주도 개발 (BDD: Behavior Driven Development) 테스트는 코드의 동작이 사람이 읽을 수 있는 명세로 작성하고, 코드가 그 명세에 따라 장동하는지 확인하는 테스트를 작성하는데 중점을 둔다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flatspec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AnyFlatSpec\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matchers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("should")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Matchers\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" ElementSpec "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AnyFlatSpec "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Matchers "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A UniformElement"')]),t._v(" should\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"have a width equal to the passed value"')]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" ele "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elem "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width should be "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    it should "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"have a height equal to the passed value"')]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" ele "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      ele"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height should be "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    it should "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"throw an IAE if passed a negative width"')]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      an "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("IllegalArgumentException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" should be thrownBy "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("AnyFlatSpec")]),t._v(" 에서는 명세 절 (specifier clause) 을 사용해 테스트를 작성한다.")]),t._v(" "),s("p",[t._v("먼저 테스트 할 주제에 대해 이름을 문자열로 붙이는 것부터 시작한다."),s("br"),t._v("\n그 뒤에 "),s("code",[t._v("should")]),t._v(" 를 넣고, 그 뒤에 주제의 작동을 설명하는 문자열이 오고, 그 다음에 "),s("code",[t._v("in")]),t._v(" 이 따라온다.")]),t._v(" "),s("p",[s("code",[t._v("in")]),t._v(" 다음에는 중괄호 안에 지정한 동작을 테스트하는 코드를 작성한다.")]),t._v(" "),s("blockquote",[s("p",[t._v("에릭 토레보르 (Eric Torreborrre) 가 스칼라로 작성한 오픈소스 도구인 스펙스2 (specs2) 테스트 프레임워크도 BDD 를 지원한다.")])]),t._v(" "),s("p",[t._v("BDD 의 가장 큰 아이디어 중 하나는 어떤 소프트웨어 시스템을 만들지 경정하는 사람, 그 소프트웨어를 구현하는 사람, 그리고 그 소프트웨어가 잘 마무리 되어 동작하는지를 결정하는 사람 사이의 의사소통을 테스트가 도와줄 수 있다는 것이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("featurespec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AnyFeatureSpec\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" TVSetSpec "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AnyFeatureSpec "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" GivenWhenThen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TV power button"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Scenario"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"User presses power button when TV is off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Given"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a TV set that is switched off"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      When"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the power button is pressed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      Then"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"the TV should switch on'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      pending\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("AnyFeatureSpec")]),t._v(" 은 소프트웨어 요구사항에 대한 대화를 돕기 위해 설계되었다.")]),t._v(" "),s("p",[t._v("이는 구체적인 특징 (feature) 은 밝혀야 하고, 그런 특징을 시나리오 (scenario) 에 명시해야 한다."),s("br"),t._v("\nGiven, When, Then 은 구체적인 개별 시나리오에 대한 대화의 초점을 맞추는데 도움을 줄 수 있다.")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("pending")]),t._v(" 호출은 테스트나 실제 동작이 아직 구현되지 않았다는 사실을 명시한다.")])]),t._v(" "),s("h3",{attrs:{id:"_14-5-프로퍼티-기반-테스트"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-5-프로퍼티-기반-테스트","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.5 프로퍼티 기반 테스트")]),t._v(" "),s("p",[t._v("리커드 닐슨 (Rickard Nilsson) 이 작성한 오픈소스 프레임워크인 스칼라체크 (Scala Check) 는 스칼라로 만들어진 또 다른 유용한 테스트 도구이다.")]),t._v(" "),s("p",[t._v("스칼라 체크는 코드가 준수해야 하는 프로퍼티를 명시하게 해준다.")]),t._v(" "),s("div",{staticClass:"language-scala 3 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wordspec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AnyWordSpec\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatestplus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalacheck")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ScalaCheckPropertyChecks\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalatest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("matchers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("must")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Matchers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" ElementSpec "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" AnyWorldSpec "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" ScalaCheckPropertyChecks "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elem result"')]),t._v(" must "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"have passed width"')]),t._v(" in "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      forAll "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v("\n        whenever "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width must equal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("forAll")]),t._v(" 메서드 내부에 elem 팩토리가 지켜야 하는 프로퍼티를 검사한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("whenever "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width must equal "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("whenever")]),t._v(" 절은 왼쪽 편에 있는 식이 "),s("code",[t._v("true")]),t._v(" 일 때마다 오른쪽에 있는 식이 "),s("code",[t._v("true")]),t._v(" 가 되어야 함을 명시한다.")]),t._v(" "),s("p",[t._v("스칼라 체크는 프로퍼티에 맞지 않는 값을 찾기 위해 "),s("code",[t._v("w")]),t._v(" 에 들어갈 수 있는 값을 여러개 생성하고 각각을 테스트한다."),s("br"),t._v("\n스칼라 체크가 시도하는 모든 값을 프로티가 만족하는 경우 테스트를 통과하고, 그렇지 않으면 실패의 원인이 된 값이 들어있는 "),s("code",[t._v("TestFailedException")]),t._v(" 을 뿜으며 테스트가 종료된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Element "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" contents"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" height"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" contents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" width"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("height "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" contents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("Element 클래스는 10.3 예제를 따른다.")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("참고자료")]),t._v(" "),s("p",[t._v("프로퍼티 기반 테스트로 추천 받은 "),s("a",{attrs:{href:"https://hedgehogqa.github.io/scala-hedgehog/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hedgehog"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"_14-6-테스트-조직과-실행"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-6-테스트-조직과-실행","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.6 테스트 조직과 실행")]),t._v(" "),s("p",[t._v("스칼라 테스트에서는 스위트 (suite) 안에 스위트를 포함 시킴으로써 큰 테스트를 조직화 한다.")]),t._v(" "),s("p",[t._v("이는 어떤 스위트가 실행되면 그 안에 테스트 뿐만이 아니라 내부에 있는 스위트의 테스트도 실행함으로써 내포된 모든 스위트를 실행한다.")]),t._v(" "),s("p",[t._v("큰 스위트는 Suite 객체 트리로 표현할 수 있다.")]),t._v(" "),s("p",[t._v("수동 혹은 자동으로 스위트를 포함 시킬수 있다.")]),t._v(" "),s("h4",{attrs:{id:"수동"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#수동","aria-hidden":"true"}},[t._v("#")]),t._v(" 수동")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("nestedSuites")]),t._v(" 메스드를 오버라이드 하거나 포함시키고 싶은 생성자에 "),s("code",[t._v("Suite")]),t._v(" 클래스의 생성자에 전달")]),t._v(" "),s("li",[t._v("스위트간의 포함관계를 위해서 추가 생성자를 제공")])]),t._v(" "),s("h4",{attrs:{id:"자동"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#자동","aria-hidden":"true"}},[t._v("#")]),t._v(" 자동")]),t._v(" "),s("ul",[s("li",[t._v("스칼라 테스트의 "),s("code",[t._v("Runner")]),t._v(" 에 패키지 이름을 전달")])]),t._v(" "),s("h3",{attrs:{id:"_14-7-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-7-결론","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.7 결론")]),t._v(" "),s("p",[t._v("자바에서의 익숙한 테스트 도구의 장점을 살릴수도 있고, 스칼라테스트, 스칼라체크, 스팩스2 등의 스칼라만을 위해 설계한 새로운 도구의 이점도 취할 수 있다.")]),t._v(" "),s("h2",{attrs:{id:"chapter-15-케이스-클래스와-패턴-매치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chapter-15-케이스-클래스와-패턴-매치","aria-hidden":"true"}},[t._v("#")]),t._v(" Chapter 15 케이스 클래스와 패턴 매치")]),t._v(" "),s("p",[t._v("케이스 클래스 (Case Class) 와 패턴 매치 (Pattern Match) 는 일반적이고 캡슐화되지 않는 데이터 구조를 작성할 때 쓰인다.")]),t._v(" "),s("h3",{attrs:{id:"_15-1-간단한-예"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-간단한-예","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.1 간단한 예")]),t._v(" "),s("p",[t._v("케이스 클래스의 정의")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Expr \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr\n")])])]),s("h4",{attrs:{id:"케이스-클래스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#케이스-클래스","aria-hidden":"true"}},[t._v("#")]),t._v(" 케이스 클래스")]),t._v(" "),s("p",[t._v("클래스 선언에서 각 서브 클래스 앞에 case 라는 수식자가 있음을 주의한다.")]),t._v(" "),s("p",[s("code",[t._v("case")]),t._v(" 수식자는 스칼라 컴파일러에게 해당 클래스에 문법적으로 편리한 기능 몇가지를 추가하라고 지시한다.")]),t._v(" "),s("ol",[s("li",[t._v("컴파일러는 클래스 이름과 같은 팩토리 메서드를 추가한다.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nv: Var "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("팩토리 메서드는 중첩해서 객체를 생성할 때 좋다.")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("케이스 클래스의 파라미터 목록에 있는 모든 인자의 암시적으로 "),s("code",[t._v("val")]),t._v(" 접두사를 붙인다.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v.name\nres0: String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" op.left\nres1: Expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("각 파라미터가 클래스의 필드도 된다.")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("컴파일러는 케이스 클래스에 "),s("code",[t._v("toString")]),t._v(", "),s("code",[t._v("hashCode")]),t._v(", "),s("code",[t._v("equals")]),t._v(" 메서드의 "),s("strong",[t._v("일반적인 구현")]),t._v("을 추가한다.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nBinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+,Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" op.right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nres3: Boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[t._v("스칼라에서는 "),s("code",[t._v("==")]),t._v(" 을 사용한 비교를 항상 "),s("code",[t._v("equals")]),t._v(" 에 위임한다.")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("컴파일러는 어떤 케이스 클래스에서 일부를 변형한 복사본을 생성하는 "),s("code",[t._v("copy")]),t._v(" 메서드를 추가한다.")])]),t._v(" "),s("p",[t._v("이 "),s("code",[t._v("copy")]),t._v(" 메서드는 "),s("strong",[t._v("디폴트 파라미터")]),t._v("와 "),s("strong",[t._v("이름을 붙인 파라미터를 제공")]),t._v("한다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" op.copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nBinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-,Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("하지만 케이스 클래스의 가장 큰 장점은 패턴 매치를 지원한다는 점이다.")])]),t._v(" "),s("h4",{attrs:{id:"패턴-매치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#패턴-매치","aria-hidden":"true"}},[t._v("#")]),t._v(" 패턴 매치")]),t._v(" "),s("p",[t._v("패턴 매치는 스칼라에서 함수를 단순화 시키는것이 핵심")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" simplifyTop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" e\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" e\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" e\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" expr \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nsimplifyTop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Var(x)")]),t._v("\n\nsimplifyTop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BinOp(+,UnOp(-,Var(x)),Number(3.0))  ???")]),t._v("\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("TODO")]),t._v(" "),s("p",[s("a",{attrs:{href:"/backend/language/java/design-pattern/behavioral/visitor"}},[t._v("방문자 패턴")]),t._v(" 을 사용하여 동일한 기능을 구현해보자")])]),t._v(" "),s("h4",{attrs:{id:"switch-와-match-의-비교"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch-와-match-의-비교","aria-hidden":"true"}},[t._v("#")]),t._v(" switch 와 match 의 비교")]),t._v(" "),s("p",[t._v("match 식은 자바 스타일의 switch 를 일반화한 것이다.")]),t._v(" "),s("p",[t._v("스칼라의 match 와 자바 switch 차이점은 다음과 같다.")]),t._v(" "),s("ul",[s("li",[t._v("스칼라의 match 는 표현식이다. 따라서 결괏값을 내놓는다.")]),t._v(" "),s("li",[t._v("스칼라의 대안 표현식은 다음 케이스로 빠지지 않는다.")]),t._v(" "),s("li",[t._v("match 에 성공하지 못한 경우 MatchError 예외가 발생한다.")])]),t._v(" "),s("h3",{attrs:{id:"_15-2-패턴의-종류"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-패턴의-종류","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.2 패턴의 종류")]),t._v(" "),s("h4",{attrs:{id:"와일드-카드-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#와일드-카드-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 와일드 카드 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"상수-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#상수-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 상수 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"변수-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변수-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 변수 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h5",{attrs:{id:"변수-또는-상수"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변수-또는-상수","aria-hidden":"true"}},[t._v("#")]),t._v(" 변수 또는 상수?")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"생성자-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#생성자-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 생성자 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"시퀀스-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#시퀀스-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 시퀀스 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"튜플-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#튜플-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 튜플 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"타입-지정-패턴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#타입-지정-패턴","aria-hidden":"true"}},[t._v("#")]),t._v(" 타입 지정 패턴")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h5",{attrs:{id:"타입-소거"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#타입-소거","aria-hidden":"true"}},[t._v("#")]),t._v(" 타입 소거")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h4",{attrs:{id:"변수-바인딩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변수-바인딩","aria-hidden":"true"}},[t._v("#")]),t._v(" 변수 바인딩")]),t._v(" "),s("blockquote",[s("p",[t._v("책 예제 및 설명 참고")])]),t._v(" "),s("h3",{attrs:{id:"_15-3-패턴-가드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-3-패턴-가드","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.3 패턴 가드")]),t._v(" "),s("p",[t._v("한 패턴 안에 오직 한번만 나와야 한다. 이는 스칼라가 선형 패턴으로 제한하기 때문이다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" simplifyAdd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" e \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: x is already defined as value x")]),t._v("\n")])])]),s("p",[t._v("하지만 패턴 가드 (pattern guard) 를 사용하면 match 표현식을 다시 쓸 수 있다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" def simplifyAdd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e: Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e match "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),t._v(", x, y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n        BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v(", x, Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" e \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("패턴 가드는 패턴 뒤에 오고 "),s("code",[t._v("if")]),t._v(" 로 시작한다.")]),t._v(" "),s("h3",{attrs:{id:"_15-4-패턴-겹침"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-패턴-겹침","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.4 패턴 겹침")]),t._v(" "),s("p",[t._v("패턴 매치는 코드에 있는 순서를 따른다.")]),t._v(" "),s("p",[t._v("따라서 모든 경우를 처리하는 case 문이 더 구체적인 규칙 다음에 와야 한다. (더 좁은 범위를 처리하는 규칙이 선행되어야 한다.)")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" simplifyBad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" simplifyBad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" e \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// case UnOp("-", UnOp("-", e)) => e 코드는 도달할 수 없다.')]),t._v("\n")])])]),s("h3",{attrs:{id:"_15-5-봉인된-클래스"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-봉인된-클래스","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.5 봉인된 클래스")]),t._v(" "),s("p",[t._v("컴파일러의 도움을 얻어 모든 케이스의 매치를 가능하도록 놓친 패턴 조합이 있으면 알려준다.")]),t._v(" "),s("p",[t._v("케이스 클래스를 "),s("strong",[t._v("봉인된 클래스 (sealed class)")]),t._v(" 로 만들면 그 클래스와 같은 파일이 아닌 다른 곳에서 새로운 서브 클래스를 만들 수 없다.")]),t._v(" "),s("p",[t._v("봉인된 클래스를 만드려는 클래스 앞에 "),s("code",[t._v("sealed")]),t._v(" 라는 키워드를 넣으면 된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sealed")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Expr \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" UnOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" Expr\n")])])]),s("p",[t._v("위와 같이 봉인된 클래스를 정의해놓고 아래와 같이 매치 케이스를 작성한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" describe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a number"')]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a variable"')]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("다음과 같은 경고가 노출 된다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("warning: match is not exhaustive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nmissing combination         UnOp \nmissing combination         BinOp\n")])])]),s("p",[t._v("만약 경고를 없애고 싶다면 나머지 케이스를 다 매치시켜놓는다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" describe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a number"')]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a variable"')]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" RuntimeException\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("더 세련된 방법은 "),s("code",[t._v("@unchecked")]),t._v(" 어노테이션을 추가하는 것이다.")]),t._v(" "),s("p",[t._v("이 "),s("code",[t._v("@unchecked")]),t._v(" 어노테이션은 패턴 매치시 모든 패턴을 다 다루는지 검사하는 일을 생략한다.")]),t._v(" "),s("h3",{attrs:{id:"_15-6-options-타입"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-6-options-타입","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.6 Options 타입")]),t._v(" "),s("p",[t._v("스칼라에는 Option 이라는 표준 타입이 있다. 이 타입은 선택적인 값을 표현하며 두가지 형태가 있다.")]),t._v(" "),s("p",[t._v("만약 "),s("code",[t._v("x")]),t._v(" 가 실제 값이라면 "),s("code",[t._v("Some(x)")]),t._v(" 라는 형태로 값이 있음을 표현할 수 있다. 반대로 값이 없으면 "),s("code",[t._v("None")]),t._v(" 이라는 객체가 된다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" show"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" s \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" None "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"?"')]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("스칼라에서는 선택적인 값을 나타내기 위해 "),s("code",[t._v("Option")]),t._v(" 을 사용하도록 권장한다.")]),t._v(" "),s("h3",{attrs:{id:"_15-7-패턴은-어디에서나"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-7-패턴은-어디에서나","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.7 패턴은 어디에서나")]),t._v(" "),s("p",[t._v("독립적인 match 표현식뿐 아니라, 스칼라의 여러곳에서 패턴을 사용할 수 있다.")]),t._v(" "),s("h4",{attrs:{id:"변수-정의에서-패턴-사용하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#변수-정의에서-패턴-사용하기","aria-hidden":"true"}},[t._v("#")]),t._v(" 변수 정의에서 패턴 사용하기")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" 이나 "),s("code",[t._v("var")]),t._v(" 를 정의할 때 식별자 대신에 패턴을 사용할 수 있다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val myTuple "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("123, "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nmyTuple: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int, java.lang.String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("123,abc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number, string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myTuple \nnumber: Int "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 123 \nstring: java.lang.String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abc\n")])])]),s("p",[t._v("다음과 같이 구조해체 구문과 같이(?) 사용 가능하다.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val exp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v(", Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" \nexp: BinOp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*,Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("5.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" \n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" val BinOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op, left, right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exp \nop: String "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" * \nleft: Expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("5.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \nright: Expr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"case-나열해서-부분-함수-만들기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case-나열해서-부분-함수-만들기","aria-hidden":"true"}},[t._v("#")]),t._v(" case 나열해서 부분 함수 만들기")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" withDefault"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" x\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" None "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("아래 "),s("code",[t._v("case")]),t._v(" 문은 부분 함수처럼 사용 가능하다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("scala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" withDefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Int = 10 ")]),t._v("\n\nscala"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" withDefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("None"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Int = 0")]),t._v("\n")])])]),s("p",[t._v("이러한 기능은 아카 액터 (akka actors) 라이브러리에서 유용한데, case 를 나열하여 receive 메서드 정의를 가능케 한다.")]),t._v(" "),s("p",[t._v("유의할 점은 case 나열은 부분 함수 (partial function) 이 처리하지 않는 값을 전달해서 호출하면 실행 시점에 예외가 발생한다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("val")]),t._v(" second"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("=>")]),t._v(" y \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// warning: match is not exhaustive!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// missing combination      Nil")]),t._v("\n")])])]),s("p",[t._v("위 코드는 원소를 3개를 넘기면 통과하지만 빈 리스트를 넘기면 실패한다.")]),t._v(" "),s("p",[t._v("이러한 이슈 해결을 위해 "),s("code",[t._v("isDefinedAt")]),t._v(" 메서드를 제공하는데, "),s("code",[t._v("isDefinedAt")]),t._v(" 메서드는 부분 함수가 어떤 값에 대해 결괏값을 정의하고 있는지 알려준다.")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[t._v("second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isDefinedAt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Boolean = true                             ")]),t._v("\n\nsecond"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isDefinedAt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Boolean = false")]),t._v("\n")])])]),s("h4",{attrs:{id:"for-표현식에서-패턴-사용하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-표현식에서-패턴-사용하기","aria-hidden":"true"}},[t._v("#")]),t._v(" for 표현식에서 패턴 사용하기")]),t._v(" "),s("div",{staticClass:"language-scala extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scala"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("country"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("<-")]),t._v(" capitals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The capital of "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" country "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" is "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" city"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The capital of France is Paris ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The capital of Japan is Tokyo")]),t._v("\n")])])]),s("p",[t._v("위와 같이 "),s("code",[t._v("for")]),t._v(" 표현식 안에 패턴을 사용할 수 있다.")]),t._v(" "),s("h3",{attrs:{id:"_15-8-복잡한-예제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-8-복잡한-예제","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.8 복잡한 예제")]),t._v(" "),s("blockquote",[s("p",[t._v("예제 코드 설명")])]),t._v(" "),s("h3",{attrs:{id:"_15-9-결론"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-9-결론","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.9 결론")]),t._v(" "),s("p",[t._v("케이스 클래스와 패턴매치를 사용하면 객체지향에서 지원하지 않는 간결한 표현법의 이점을 누릴수 있다.")])])},[],!1,null,null,null);a.default=e.exports}}]);