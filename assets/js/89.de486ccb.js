(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{417:function(e,t,r){"use strict";r.r(t);var n=r(1),a=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"인터페이스-분리의-원칙-isp-interface-segregation-principle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#인터페이스-분리의-원칙-isp-interface-segregation-principle","aria-hidden":"true"}},[e._v("#")]),e._v(" 인터페이스 분리의 원칙 (ISP : Interface Segregation Principle)")]),e._v(" "),r("p",[r("router-link",{attrs:{to:"/book/03.-back-end/01.-java/01.-general/solid/"}},[e._v("SOLID")]),e._v(" 원칙중에서 4번재 원칙으로 개방폐쇄의 원칙이라 한다.")],1),e._v(" "),r("ul",[r("li",[e._v("하나의 클래스는 자신이 사용하지 않는 인터페이스는 구현하지 않아야 한다.")]),e._v(" "),r("li",[e._v("하나의 인터페이스보다는 여러개의 구체적인 인터페이스가 낫다")])]),e._v(" "),r("p",[e._v("시스템의 내부 의존성을 약화시켜 리펙토링, 수정, 재배포를 쉽게할 수 있다.")])])},[],!1,null,null,null);t.default=a.exports}}]);